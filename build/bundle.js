"use strict";angular.module("templates",[]);var app=angular.module("Neograph",["templates","publishSubscribe","ui.router","ngSanitize","neograph.common","neograph.edge","neograph.interaction","neograph.layout","neograph.neo","neograph.node","neograph.query"]).config(["$stateProvider","$urlRouterProvider",function(e,n){e.state("admin",{url:"/admin",templateUrl:"app/partials/admin.html"}).state("admin.main",{url:"/main?querypreset",views:{"nodeSearch@admin":{controller:"NodeSearchCtrl",templateUrl:"app/node/node.search.html"},"query@admin":{controller:"QueryCtrl",templateUrl:"app/query/query.html"}}}),n.otherwise("/admin/main")}]).controller("AdminController",["$scope","neo","queryPresets","utils","session",function(e,n,t,o,r){e.subscribe("hover",function(n){e.selection.hoverNode=n}),e.$watch("selection.selectedEdge",function(n){n&&(e.selection.selectedNode=void 0,e.selection.multiple=void 0,e.selection.images=[])}),e.subscribe("favourite",function(e){n.saveFavourite(e,r.user)}),e.subscribe("newEdge",function(n){e.$apply(function(){e.selection.selectedEdge=n,e.tabs=["Properties"],e.selectedTab="Properties"})})}]).run(["$rootScope","PubSubService",function(e,n){n.Initialize(e)}]);document.addEventListener("DOMContentLoaded",function(){$("#btn").click(function(){chrome.tabs.executeScript(null,{file:"angular.min.js"}),chrome.tabs.executeScript(null,{file:"jquery.js"}),chrome.tabs.executeScript(null,{file:"scraper/controller.js"}),chrome.tabs.executeScript(null,{file:"scraper/scraper.js"})});var e=function(){chrome.tabs.insertCSS(null,{file:"ext/lib/bootstrap-button.css"}),chrome.tabs.insertCSS(null,{file:"ext/lib/bootstrap-dropdown.css"}),chrome.tabs.insertCSS(null,{file:"ext/style.css"}),chrome.tabs.executeScript(null,{file:"ext/lib/jquery.js"}),chrome.tabs.executeScript(null,{file:"ext/lib/bootstrap.js"}),chrome.tabs.executeScript(null,{file:"ext/lib/angular.min.js"}),chrome.tabs.executeScript(null,{file:"ext/lib/angular-resource.min.js"}),chrome.tabs.executeScript(null,{file:"ext/lib/angular-sanitize.min.js"}),chrome.tabs.executeScript(null,{file:"modules.js"}),chrome.tabs.executeScript(null,{file:"filters/filters.js"}),chrome.tabs.executeScript(null,{file:"factories/neoHelper.js"}),chrome.tabs.executeScript(null,{file:"factories/utils.js"}),chrome.tabs.executeScript(null,{file:"factories/neo.js"}),chrome.tabs.executeScript(null,{file:"directives/typeahead.js"})};$("#google").click(function(){e(),chrome.tabs.executeScript(null,{file:"ext/google.js"})}),$("#tate").click(function(){e(),chrome.tabs.executeScript(null,{file:"ext/tate.js"})})}),angular.module("publishSubscribe",[]).service("PubSubService",function(){function e(e){var n={};e.constructor.prototype.publish=e.constructor.prototype.publish||function(){var e,t,o=this;e=[].slice.call(arguments),t=e.splice(0,1),angular.forEach(n[t]||[],function(n){n.handler.apply(o,e)})},e.constructor.prototype.subscribe=e.constructor.prototype.subscribe||function(e,t){var o=this,r=n[e]=n[e]||[];r.push({$id:o.$id,handler:t}),o.$on("$destroy",function(){for(var e=0,n=r.length;n>e;e++)if(r[e].$id===o.$id){r.splice(e,1);break}})}}return{Initialize:e}}),angular.module("neograph.settings",[]).factory("settings",function(){return{apiRoot:"http://localhost:1337"}}),angular.module("neograph.common",["neograph.common.filter","neograph.common.filters","neograph.common.images","neograph.common.labels","neograph.common.network","neograph.common.nodeArray","neograph.common.typeahead","neograph.common.typeaheadSimple"]),angular.module("neograph.common.filter",[]).directive("filter",function(){return{replace:!0,restrict:"E",templateUrl:"app/common/filter.html",scope:{init:"=",enabled:"=",process:"&"},link:function(e,n,t){e.filters={},e.$watch("init",function(n){var t={};angular.forEach(n,function(e){t[e]=0}),e.filters=t}),e.getFilterClass=function(e){return 1===e?"label-success":0===e?"label-info":""},e.toggleFilter=function(n){if(1==e.filters[n])e.filters[n]=0;else if(0==e.filters[n])e.filters[n]=1;else if(-1==e.filters[n]){for(var t in e.filters)e.filters[t]=0;e.filters[n]=1}var o=[];for(var t in e.filters)1===e.filters[t]&&o.push(t);e.process({labels:o})},e.$watch("enabled",function(n){if(n&&n.length)for(var t in e.filters)-1==$.inArray(t,n)?e.filters[t]=-1:-1==e.filters[t]&&(e.filters[t]=0);else for(var t in e.filters)e.filters[t]=0})}}}),angular.module("neograph.common.filters",[]).filter("checkmark",function(){return function(e){return e?"✓":"✘"}}).filter("predicate",function(){return function(e){return e?"✓":"✘"}}),angular.module("neograph.common.images",["neograph.neo","neograph.session"]).directive("images",["neo","session",function(e){return{replace:!0,restrict:"E",templateUrl:"app/common/images.html",scope:{editing:"=",nodes:"=",active:"=",updatemasonry:"="},link:function(e,n,t){var o=$(n).find("ul");e.items={},e.$watch("nodes",function(n){o.removeClass("masonryLoaded"),e.items=n,r()}),e.$watch("updatemasonry",function(){o.hasClass("masonry")&&o.masonry("reload")}),e.$watch("active",r);var r=function(){setTimeout(function(){o.hasClass("masonry")?o.masonry("reload"):o.masonry({nodeselector:"li"}),o.addClass("masonryLoaded")},100)};e.navigate=function(n){e.publish("query",{name:n,view:n,type:"Grid",queryGenerator:{id:"nodeFilter",options:{node:{Label:n}}}})},e.selectAll=function(){o.find("li.ui-selected").length<o.find("li").length?(o.find("li").addClass("ui-selected"),e.selected=e.nodes.map(function(e,n){return n})):(o.find("li").removeClass("ui-selected"),e.selected=[])},e.subscribe("deleted",function(e){a(e.selection.nodes)}),e.subscribe("restored",function(e){a(e.selection.nodes)});var a=function(e){e&&e.length&&(angular.forEach(e,function(e){var n="li[nodeid='"+e.id+"']";console.log(n),o.find(n).remove()}),r())};e.getFilterClass=function(e){return 1===e?"label-success":0===e?"label-info":""},e.toggleFilter=function(n){if(1==e.filters[n])e.filters[n]=0,refreshContent();else if(0==e.filters[n])e.filters[n]=1,refreshContent();else if(-1==e.filters[n]){for(var t in e.filters)e.filters[t]=0;e.filters[n]=1,refreshContent()}},e.$watch("filterBy",function(n){n&&(e.filters[n]=1,e.filterBy=void 0,refreshContent())}),e.$watch("selected",function(n){if(n&&n.length){var t=n.map(function(n){return e.nodes[n]});e.publish("selected",{sender:"Images",selection:{nodes:t}})}}),e.makeFavourite=function(n){console.log(n),e.publish("favourite",n)}}}}]),angular.module("neograph.common.labels",["neograph.neo","neograph.utils"]).directive("labels",["neo","utils",function(e,n){return{restrict:"E",templateUrl:"app/common/labels.html",scope:{node:"=?",labels:"=?",items:"=?",navpath:"@",highlight:"@?"},link:function(e,t,o){e.$watch("node",function(n){n&&(e.labels=e.node.labels)}),e.$watch("items",function(n){n&&(e.labels=e.items.map(function(e){return e.label}))}),e.getClass=function(t){return t===o.highlight?"label-warning":n.getLabelClass(e.node,t)}}}}]),angular.module("neograph.common.network",[]).directive("network",function(){return{restrict:"E",template:"<div></div>",scope:{graph:"=",options:"=",network:"=",width:"@",height:"@"},link:function(e,n){e.network=new vis.Network(n,e.graph,e.options),e.network.setSize(e.width+"px",e.height+"px")}}}),angular.module("neograph.common.nodeArray",["neograph.utils"]).directive("nodeArray",["utils",function(e){return{replace:!0,restrict:"EA",templateUrl:"app/common/nodeArray.html",scope:{items:"=",enabled:"=",onselected:"&?",node:"=?",directbinding:"@?",width:"@?"},link:function(n,t,o){var r="false"!=o.directbinding;n.nodes=[],n.$watch("items",function(e){e&&e.length?(console.log(e),e[0]&&(e[0].label||e[0].lookup)?n.nodes=e:(r=!1,n.nodes=e.map(function(e){return{label:e}})),console.log(n.nodes)):r?n.nodes=e:n.nodes=[]}),$(t).on("click",function(){$(t).find("input").focus()}),n.getClass=function(t){return e.getLabelClass(n.node,t.label)},n.clickable=void 0!=o.onselected,n.nodeClicked=function(e){o.onselected&&n.onselected({item:e})};var a=function(e){var t=-1;return $(n.nodes).each(function(n,o){return e.label&&o.label===e.label||e.lookup&&o.lookup==e.lookup?void(t=n):void 0}),t};n.addNode=function(e){console.log(e),console.log(r),-1==a(e)&&(console.log("node adding"),n.nodes.push(e),r||(console.log("item adding"),n.items.push(e.label)))},n.removeNode=function(e){console.log(e);var t=a(e);console.log(t),t>-1&&(n.nodes.splice(t,1),r||n.items.splice(n.items.indexOf(e.label||e.lookup),1))}}}}]),angular.module("neograph.common.typeahead",["neograph.utils","neograph.node.service"]).directive("typeahead",["utils","nodeService",function(e,n){return{restrict:"E",replace:!0,scope:{choice:"=?",watchvalue:"=?",text:"=?",restrict:"=?",onselected:"&?",autosize:"@?"},template:'<input type="text" class="form-control" />',link:function(t,o,r){function a(){if("Type"==r.restrict){var n=[];for(var t in e.types)n.push(JSON.stringify(e.types[t]));return n}if("Predicate"==r.restrict){var n=[];for(var t in e.predicates)n.push(JSON.stringify(e.predicates[t]));return n}return d}var i="Node...",l=$(o);l.attr("placeholder",r.placeholder||i),t.$watch("choice",function(e){e&&l.val(e.Label||e.lookup)}),r.choice||t.$watch("watchvalue",function(e){l.val(e)}),r.autosize&&(l.css({width:"10px"}),l.attr("placeholder","+"),l.on("focus",function(){l.css({width:"100px"}),l.attr("placeholder",r.placeholder||i),setTimeout(function(){l.css({width:"100px"}),l.attr("placeholder",r.placeholder||i)},100)}),l.on("blur",function(){l.css({width:"10px"}),l.attr("placeholder","+"),l.val("")})),l.typeahead({source:a(),matcher:function(e){var n=JSON.parse(e);return~n.lookup.toLowerCase().indexOf(this.query.toLowerCase())},sorter:function(e){for(var n,t,o=[],r=[],a=[];n=e.shift();){var t=JSON.parse(n);t.lookup.toLowerCase().indexOf(this.query.toLowerCase())?~t.lookup.indexOf(this.query)?r.push(JSON.stringify(t)):a.push(JSON.stringify(t)):o.push(JSON.stringify(t))}return o.concat(r,a)},highlighter:function(n){var t,o=JSON.parse(n),a=this.query.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g,"\\$&");return t="Predicate"==r.restrict?new e.Predicate(o.lookup).ToString().replace(new RegExp("("+a+")","ig"),function(e,n){return"<strong>"+n+"</strong>"}):o.lookup.replace(new RegExp("("+a+")","ig"),function(e,n){return"<strong>"+n+"</strong>"})+" <div style='float:right;margin-left:8px;color:#ccc'>"+o["class"]+"</div>"},updater:function(e){s=!0;var n=JSON.parse(e);return t.$apply(function(){r.choice&&(t.choice=n),r.onselected&&t.onselected({item:n})}),r.clearonselect?void 0:n.lookup}});var s=!1;l.on("keydown",function(e){s=!1,13==e.keyCode&&setTimeout(function(){t.$apply(function(){s||(t.text=l.val(),l.val(""))})},100)});var d=function(e,o){return t.restrict&&$.isArray(t.restrict)&&t.restrict.lenth>0?t.restrict[0].lookup?t.restrict.map(function(e){return JSON.stringify(e)}):t.restrict.map(function(e){return JSON.stringify({lookup:e})}):void n.search(e,r.restrict).then(function(e){console.log(e),o(e.map(function(e){return JSON.stringify(e)}))})};t.$watch("restrict",function(){l.data("typeahead").source=a()},!0)}}}]),angular.module("neograph.common.typeaheadSimple",[]).directive("typeaheadSimple",[function(){return{restrict:"E",replace:!0,scope:{ngModel:"=?",source:"="},template:'<input type="text" />',link:function(e,n,t){var o="",r=$(n);r.attr("placeholder",t.placeholder||o),r.typeahead({source:e.source,updater:function(n){return e.$apply(function(){e.ngModel=n}),n}})}}}]),angular.module("neograph.edge",["neograph.neo","neograph.utils","ui.router"]).config(["$stateProvider",function(e){e.state("admin.main.edge",{url:"/edge/:edge",views:{"edgeHeader@admin":{controller:["$scope","$stateParams",function(e,n){n.edge&&(e.edge=JSON.parse(n.edge))}],templateUrl:"app/edge/edge.header.html"},"edge@admin":{controller:["$scope",function(e){e.tabs=["Properties"],e.selectedTab="Properties",e.selectTab=function(n){e.selectedTab=n}}],templateUrl:"app/edge/edge.html"}}}).state("admin.main.edge.view",{url:"/view",views:{"properties@admin.main.edge":{templateUrl:"app/edge/properties.html",controller:["$scope","$stateParams",function(e,n){n.edge&&(e.edge=JSON.parse(n.edge))}]}}}).state("admin.main.edge.edit",{url:"/edit",views:{"editproperties@admin.main.edge":{templateUrl:"app/edge/properties.edit.html",controller:"EditEdgeCtrl"}}})}]).controller("EditEdgeCtrl",["neo","utils","$stateParams","$scope",function(e,n,t,o){t.edge&&(o.edge=JSON.parse(t.edge),o.predicateType=n.predicates[o.edge.type]),o.$watch("predicateType",function(e){e&&(o.edge.type=e.Lookup)}),o.deleteEdge=function(n){e.deleteEdge(n,o.activeView.data.nodes[n.startNode],o.activeView.data.nodes[n.endNode]).then(function(){delete o.activeView.data.edges[n.id],o.selection.selectedEdge&&o.selection.selectedEdge.id===n.id&&(o.selection.selectedEdge=null),o.publish("deleted",{selection:{edges:[n]}})})},o.saveEdge=function(n){e.saveEdge(n).then(function(e){o.publish("dataUpdate",e);for(key in e.nodes)o.activeView.data.nodes[key]=e.nodes[key];for(key in e.edges)o.activeView.data.edges[key]=e.edges[key],!o.selection.selectedEdge||key!==o.selection.selectedEdge.id&&o.selection.selectedEdge.id||(o.selection.selectedEdge=e.edges[key])})}}]),angular.module("neograph.interaction.draggable",[]).directive("draggable",function(){return{link:function(e,n,t){var o=$(n).position().left;$(n).draggable({axis:"x",drag:function(){var t=o-$(n).position().left;e.$apply(function(){e.window.tabsWidth=e.window.tabsWidth+t}),o=$(n).position().left}})}}}),angular.module("neograph.interaction",["neograph.interaction.draggable","neograph.interaction.resizable","neograph.interaction.selectable"]),angular.module("neograph.interaction.resizable",[]).directive("resizable",["$window",function(e){return{scope:{window:"="},controller:["$scope","$element",function(n,t){var o=angular.element(e),r=function(){var e=o.width(),t=o.height();return{height:t,width:e,tabsWidth:n.window.tabsWidth,tabsWidthInner:n.window.tabsWidth-10,graphWidth:e-n.window.tabsWidth,graphHeight:t-n.window.topBarHeight,topBarHeight:n.window.topBarHeight,tabsHeight:t-n.window.topBarHeight}};n.window=r(),n.$watch(r,function(e,t){n.window=e},!0),o.bind("resize",function(){n.$apply()})}]}}]),angular.module("neograph.interaction.selectable",[]).directive("selectable",function(){return{scope:{selected:"="},link:function(e,n,t){e.$watch($(n).find("li.ui-selected").length,function(t){$(n).selectable({filter:"li",stop:function(t,o){var r=[];$(n).find("li.ui-selected").each(function(e,n){r.push(parseInt($(n).attr("nodeindex")))}),e.$apply(function(){e.selected=r})},cancel:".badge, .label"})})}}}),angular.module("neograph.layout",[]).directive("tabs",function(){return{restrict:"E",transclude:!0,scope:{tabs:"=",selected:"=?"},controller:["$scope",function(e){var n=e.panes=[],t=this;e.select=function(t){angular.forEach(n,function(e){e.selected=!1}),t.selected=!0,e.selected=t.key},this.add=function(t){0===n.length&&e.select(t),n.push(t)},this.remove=function(t){angular.forEach(n,function(o,r){t.key==o.key&&(n.splice(r,1),t.selected&&(t.selected=!1,e.select(e.panes[0])))})},e.$watch("selected",function(e){e&&angular.forEach(n,function(n){n.selected=n.key===e})}),e.$watch("tabs",function(e){e&&angular.forEach(n,function(n){-1===e.indexOf(n.key)&&t.remove(n)})})}],templateUrl:"app/layout/tabs.html"}}).directive("tabPane",function(){return{require:"^tabs",restrict:"E",transclude:!0,scope:{key:"@",title:"=",visible:"=",active:"=?",window:"="},link:function(e,n,t,o){o.add(e),e.$watch("active",function(n){e.selected=n})},templateUrl:"app/layout/tabPane.html"}}).directive("noBubble",function(){return{link:function(e,n,t,o){$(n).on("keydown",function(e){e.stopPropagation()})},templateUrl:"app/layout/tabPane.html"}}),angular.module("neograph.models.node",["neograph.models.predicate"]).factory("nodeFactory",["predicateFactory",function(e){function n(n){this.labels=[],Object.assign(this,n);for(var t in this.relationships){var o=this.relationships[t];o.predicate=e.create(o.predicate)}!this.label&&this.lookup&&(this.label=this.lookup)}return n.prototype.isPicture=function(){return this.labels.indexOf("Picture")>-1},n.prototype.isPerson=function(){return this.labels.indexOf("Person")>-1},n.prototype.isProperty=function(){return this.labels.indexOf("Property")>-1},n.prototype.isCustomField=function(e){return"lookup"!=e&&"class"!=e&&"label"!=e&&"description"!=e&&"text"!=e&&"name"!=e&&"systemInfo"!=e&&"labels"!=e&&"id"!=e&&"created"!=e&&"image"!=e&&"relationships"!=e&&"labelled"!=e},{create:function(e){return new n(e)}}}]),angular.module("neograph.models.predicate",[]).factory("predicateFactory",function(){function e(e){Object.assign(this,e)}return e.prototype.setDirection=function(e){return this.direction=e,this},e.prototype.toString=function(){if("in"===this.direction&&!this.symmetrical){if(this.reverse)return this.reverse.replace(/_/g," ").toLowerCase();var e=this.lookup.toUpperCase();return"CREATED"===e||"CREATES"===e?"created by":"INFLUENCES"===e?"influenced by":"INSPIRES"===e?"inspired by":"ANTICIPATES"===e?"anticipated by":"DEVELOPS"===e?"developed by":"DEPICTS"===e?"depicted by":"TYPE_OF"===e?"type(s)":"("+this.lookup.replace(/_/g," ").toLowerCase()+")"}return this.lookup.replace(/_/g," ").toLowerCase()},e.prototype.flip=function(){return this.isDirectional?("in"===this.direction?this.setDirection("out"):this.setDirection("in"),this):void 0},{create:function(n){return new e(n)}}}),angular.module("neograph.neo.client",["ngResource","neograph.settings"]).factory("neoClient",["$resource","settings",function(e,n){var t=n.apiRoot;return{node:e(null,null,{search:{url:t+"/search",method:"POST",isArray:!0},get:{url:t+"/node/get/:id",method:"GET"},getWithRels:{url:t+"/node/getWithRels/:id",method:"GET"},getRelationships:{url:t+"/node/relationships/:id",method:"GET"},getOne:{url:t+"/node/single",method:"POST"},getList:{url:t+"/node/list",method:"POST",isArray:!0},save:{url:t+"/node/save",method:"POST"},saveProps:{url:t+"/node/saveProps",method:"POST"},saveRels:{url:t+"/node/saveRels",method:"POST"},saveWikipagename:{url:t+"/node/saveWikipagename",method:"POST"},saveMultiple:{url:t+"/node/saveMultiple",method:"POST"},del:{url:t+"/node/delete",method:"POST"},destroy:{url:t+"/node/destroy",method:"POST"},restore:{url:t+"/node/restore",method:"POST"},getProps:{url:t+"/node/getProps",method:"POST"},getImages:{url:t+"/node/getImages",isArray:!0,method:"POST"}}),edge:e(null,null,{save:{url:t+"/edge/save",method:"POST"},del:{url:t+"/edge/delete",method:"POST"},getImageRelationships:{url:t+"/edge/imagerelationships",method:"POST"}}),user:e(null,null,{saveFavourite:{url:t+"/user/saveFavourite",method:"POST"},get:{url:t+"/user/:user",method:"GET"}}),graph:e(null,null,{get:{url:t+"/graph",method:"POST"}}),type:e(null,null,{getAll:{url:t+"/types",method:"GET"}}),predicate:e(null,null,{getAll:{url:t+"/predicates",method:"GET"}}),utils:e(null,null,{getDistinctLabels:{url:t+"/utils/distinctLabels",isArray:!0,method:"POST"}})}}]),angular.module("neograph.neo",["neograph.utils","neograph.neo.client"]).factory("neo",["neoClient","utils",function(e,n){var t={getGraph:function(n,t){return e.graph.get({q:n,returnArray:t}).$promise.then(function(e){var n=e.toJSON();return console.dir(n),n})},getAllRelationships:function(e){var n="";if(e.getIds)n=e.getIds({returnType:"Array"}).join(",");else for(var o in e)n.length&&(n+=","),n+=o;var r="MATCH a -[r]- b WHERE id(a) IN["+n+"] and id(b) IN["+n+"] and not (a-[:TYPE_OF]-b) return r";return t.getGraph(r)},getRelationships:function(n){return e.node.getRelationships({id:n}).$promise.then(function(e){return e.toJSON()})},saveMultiple:function(n){return e.node.saveMultiple({multiple:n}).$promise.then(function(e){return e.toJSON()})},saveEdge:function(n){return e.edge.save({edge:n}).$promise.then(function(e){return e.toJSON()})},saveFavourite:function(n,t){return e.user.saveFavourite({user:t,node:n}).$promise.then(function(e){return e.toJSON()})},deleteEdge:function(n){return n&&n.id?e.edge["delete"]({edge:n}).$promise.then(function(e){return e.toJSON()}):void 0},getUser:function(n){return e.user.get({user:n}).$promise.then(function(e){return e.toJSON()})},getOne:function(n){return e.node.getOne({q:n}).$promise.then(function(e){return e.toJSON()})},getImageRelationships:function(n){return e.edge.getImageRelationships({edge:n}).$promise.then(function(e){return e.toJSON()})},getDistinctLabels:function(n){return e.utils.getDistinctLabels({labels:n}).$promise},getDistinctLabelsQuery:function(n){return e.utils.getDistinctLabels({q:n}).$promise}};return t}]),angular.module("neograph.session",["neograph.neo"]).factory("session",["neo","$q",function(e,n){var t={Lookup:"Anonymous",roles:{Public:{}}},o={init:function(){return e.getUser("Julian").then(function(e){o.user=e,o.signedIn=!0}),o},signingIn:!1,signedIn:!1,user:t,signIn:function(t,r){return e.authenticate(t,r).then(function(e){o.user=e,console.log(o.user),localStorage.username=o.user.username,o.signedIn=!0,e.roles.PreReg?$("body").addClass("prereg"):$("body").removeClass("prereg")},function(e){return console.log(e),n.reject(e)})},signOut:function(){o.user=t,localStorage.username="",o.signedIn=!1}};return localStorage.username&&(o.user=e.getUser(localStorage.username)),"Anonymous"!=o.user.name&&(o.signedIn=!0),o.init()}]),angular.module("neograph.utils",["neograph.neo.client","neograph.query.presets"]).factory("utils",["neoClient","queryPresets",function(e,n){Array.prototype.diff=function(e){return this.filter(function(n){return e.indexOf(n)<0})},Array.prototype.ids=function(){return this.map(function(e){return e.id})},Array.prototype.hasAny=function(e){return this.filter(function(n){return e.indexOf(n)>-1}).length>0},Array.prototype.unique=function(){var e=[];for(i=0;i<this.length;i++){var n=this[i];e.indexOf(n)<0&&e.push(n)}return e};var t={init:function(){return t.refreshTypes(),t.refreshPredicates(),t},types:{},predicates:{},isType:function(e){return void 0!=t.types[e]},refreshTypes:function(){return e.type.getAll().$promise.then(function(e){return t.types=e,e})},refreshPredicates:function(){return e.predicate.getAll().$promise.then(function(e){return t.predicates=e.toJSON(),t.predicates})},isSystemInfo:function(e){return"Global"==e||"Type"==e||"Label"==e||"SystemInfo"==e},getLabelClass:function(e,n){return e&&n===e.Type?"label-warning":t.isSystemInfo(n)?"label-system":t.isType(n)?"label-inverse pointer":"label-info"},personTypes:["Painter","Illustrator","Philosopher","Poet","FilmMaker","Sculptor","Writer","Patron","Leader","Explorer","Composer","Scientist","Caricaturist","Mathematician"],pictureTypes:["Painting","Illustration","Drawing","Print"],isPerson:function(e){return"Painter"==e||"Illustrator"==e||"Philosopher"==e||"Poet"==e||"FilmMaker"==e||"Sculptor"==e||"Writer"==e||"Patron"==e||"Leader"==e||"Explorer"==e||"Composer"==e||"Scientist"==e||"Caricaturist"==e||"Mathematician"==e},tabSettings:{},selectedTab:"Properties"};return t.init()}]),angular.module("neograph.node",["neograph.node.graphpanel","neograph.node.favourites","neograph.node.freebase","neograph.node.graphpanel","neograph.node.images","neograph.node.wikipedia","neograph.node.multiple","neograph.node.service","neograph.node.properties","neograph.node.relationships","ui.router"]).config(["$stateProvider",function(e){e.state("admin.main.node",{url:"/node/:node",views:{"nodeHeader@admin":{controller:"NodeHeaderCtrl",templateUrl:"app/node/node.header.html"},"node@admin":{controller:"NodeCtrl",templateUrl:"app/node/node.html"},"nodeimages@admin":{controller:"NodeImagesCtrl",templateUrl:"app/node/images/node.images.html"}}}).state("admin.main.node.view",{url:"/view",views:{"properties@admin.main.node":{templateUrl:"app/node/properties/node.properties.html",controller:["$scope","$stateParams","nodeService",function(e,n,t){n.node&&t.get(n.node,!0).then(function(n){e.node=n})}]},"relationships@admin.main.node":{templateUrl:"app/node/relationships/node.relationships.html",controller:["$scope","$stateParams","nodeService",function(e,n,t){n.node&&t.get(n.node,!0).then(function(n){e.node=n,console.log(n)})}]}}}).state("admin.main.node.edit",{url:"/edit",views:{"editproperties@admin.main.node":{templateUrl:"app/node/properties/node.properties.edit.html",controller:"EditPropertiesCtrl"},"editrelationships@admin.main.node":{templateUrl:"app/node/relationships/node.relationships.edit.html",controller:"EditRelationshipsCtrl"}}})}]).controller("NodeSearchCtrl",["$scope","$state","nodeService",function(e,n,t){e.selection={selectedNode:null,selectedEdge:null,hoverNode:null},e.$watch("nodeLookup",function(o){o&&o.id&&t.get(o.label,!0).then(function(t){e.selection.selectedNode=t,n.go("admin.main.node.view",{node:o.label})})}),e.newNode=function(){var n={id:-1,labels:[],Type:"",temp:{tabs:["Properties"]}};!e.nodeLookupText||e.selection.selectedNode&&e.nodeLookupText==e.selection.selectedNode.Lookup||(n.Lookup=e.nodeLookupText),e.selection.selectedNode=n,e.tabs=e.selection.selectedNode.temp.tabs,e.selectedTab="Properties"},e.addNodeToGraph=function(n){console.log("add node to graph"),e.views.Graph.data.nodes[n.id]||(console.log("get relationships"),neo.getRelationships(n.id).then(function(t){console.log("got relationships"),console.dir(t);var o={edges:t.edges,nodes:{}};o.nodes[n.id]=n,e.publish("dataUpdate",o),n.id===e.selection.selectedNode.id&&(e.publish("selected",{selection:{nodes:[n.id]}}),e.publish("focus",n.id))}),e.activeView=graphView)}}]).controller("NodeHeaderCtrl",["$scope","$stateParams","nodeService",function(e,n,t){e.selection={selectedNode:null,selectedEdge:null,hoverNode:null},n.node&&t.get(n.node,!0).then(function(n){e.selection.selectedNode=n})}]).controller("NodeCtrl",["$scope","$stateParams","nodeService",function(e,n,t){e.selection={selectedNode:null,selectedEdge:null,hoverNode:null},n.node&&t.get(n.node,!0).then(function(n){e.selection.selectedNode=n}),e.tabs=["Properties","Relationships","Images"],e.selectedTab="Properties",e.selectTab=function(n){e.selectedTab=n}}]),angular.module("neograph.node.service",["neograph.utils","neograph.neo.client","neograph.models.node"]).factory("nodeService",["neoClient","utils","$q","nodeFactory",function(e,n,t,o){var r={},a={setPropsAndTabsFromLabels:function(n){return e.node.setPropsAndTabs({node:n}).$promise.then(function(e){return e.toJSON()})},get:function(n,a){return a?!r||n!==r.Label&&n!==r.id?e.node.getWithRels({id:n}).$promise.then(function(e){return r=o.create(e.toJSON()),console.log(r),r}):t.when(r):e.node.get({id:n}).$promise.then(function(e){return e.toJSON()})},getList:function(n,t){return e.node.getList({q:n,limit:t}).$promise},saveWikipagename:function(n){return e.node.saveWikipagename({id:n.id,name:n.Wikipagename}).$promise.then(function(e){return e.toJSON()})},getImages:function(n){return e.node.getImages({id:n.id,isPicture:n.temp.isPicture,isGroup:n.temp.isGroup}).$promise},saveProps:function(n){return e.node.saveProps({node:n,user:user}).$promise.then(function(e){return e.toJSON()})},getProps:function(n){return e.node.getProps({labels:n}).$promise.then(function(e){return e.toJSON()})},save:function(n,t){if(n.temp.trimmed)throw"Node is trimmed - cannot save";return e.node.save({node:n,user:t}).$promise.then(function(e){return e.toJSON()})},saveRels:function(n){return e.node.saveRels({node:n}).$promise.then(function(e){return e.toJSON()})},destroy:function(n){return e.node.destroy({node:n}).$promise.then(function(e){return e.toJSON()})},"delete":function(n){var o=t.deferred();return n&&n.id?e.node["delete"]({node:n}).$promise.then(function(e){o.resolve(e.toJSON())}):void o.resolve({})},restore:function(n){var o=t.deferred();return n&&n.id?e.node.restore({node:n}).$promise.then(function(e){o.resolve(e.toJSON())}):o.resolve({}),o.promise},search:function(n,t){return console.log(n),n?e.node.search({txt:n,restrict:t}).$promise:void 0}};return a}]),angular.module("neograph.query.graph",["ui.router","neograph.models.node"]).factory("graphService",["nodeFactory",function(e){var n=function(n){n=e.create(n);var t=n["class"],o=parseInt(n.yearFrom),r=parseInt(n.yearTo),a=r;o&&r&&(a=r-(r-o)/2);for(var i=0,l=1400,s=2e3,d=5,c=1,u=l;s>u;u+=d)a>=u&&u+d>a&&(i=c),c+=1;a>s&&(i=c);var p={id:n.id,label:n.label||n.lookup,size:n.status/10,group:n["class"],mass:"Group"==t?.5:1,radius:n.isPerson()?n.status:1,level:i,borderWidth:0},h="Painting"===t||"Picture"===t?n.temp.thumbUrl:null;return h?(p.image=h,p.shape="image"):"Provenance"==t?(p.fontSize=50,p.fontColor="lightgray",p.color="transparent"):"Iconography"==t||"Place"==t?p.shape="ellipse":"Quotation"==t?(p.shape="box",p.color="transparent",p.label=n.text):"User"==t?(p.shape="star",p.size=20):"Link"==t?(p.label=n.name,p.shape="box",p.color="transparent"):p.shape=n.isPerson()?"dot":n.isProperty()?"circle":"box",p.color={background:p.color||"#97C2FC",border:"transparent"},n.isProperty()&&(p.color.background="lightgreen"),p},t=function(e){var n=e.type,t="ASSOCIATED_WITH"===n,o="FROM"==n,r={id:e.id,from:e.startNode,to:e.endNode,label:"EXTENDS"!=n&&"PROPERTY"!=n&&"INFLUENCES"!=n&&"ASSOCIATED_WITH"!=n?n.toLowerCase():null,fontColor:"blue",color:"FROM"==n?"#EEEEEE":"INFLUENCES"==n?"pink":"TEACHES"==n||"TEACHES_AT"==n||"PROPERTY"===n?"green":"blue",opacity:o?0:1,style:t?"dash-line":"arrow",type:["curved"],labelAlignment:"line-center"};return r};return{defaultEdgeType:function(e,n){return"Provenance"==n?"FROM":"Painter"==n?"INFLUENCES":"ASSOCIATED_WITH"},options:{edges:{widthSelectionMultiplier:4},hierarchicalLayout:{enabled:!1,levelSeparation:10,nodeSpacing:200,direction:"UD"},dataManipulation:{enabled:!0,initiallyVisible:!0},physics:{barnesHut:{enabled:!0,gravitationalConstant:-6e3,centralGravity:1,springLength:20,springConstant:.04,damping:.09},repulsion:{centralGravity:.1,springLength:.5,springConstant:.05,nodeDistance:100,damping:.09},hierarchicalRepulsion:{enabled:!1,centralGravity:0,springLength:270,springConstant:.01,nodeDistance:300,damping:.09}},onDelete:function(e,n){}},toGraphData:function(e){var o={nodes:[],edges:[]};for(var r in e.nodes){var a=n(e.nodes[r]);o.nodes.push(a)}for(var i in e.edges){var l=t(e.edges[i]);o.edges.push(l)}return o}}}]).directive("graph",["graphService","$state",function(e,n){return{restrict:"E",templateUrl:"app/query/graph.html",scope:{data:"=",active:"=",network:"="},link:function(t,o,r){t.$on("$stateChangeSuccess",function(){if(console.log(n.params),n.params.node)for(var e in t.data.nodes)t.data.nodes[e].label===n.params.node&&t.data.nodes[e].id!=u()&&(c.selectNodes([e]),c.focusOnNode(e,{scale:1.5,animation:{duration:1e3,easingFunction:"easeOutCubic"}}))});var a=1300,i=$(window).height()-80,l=150,s=e.options;s.onConnect=function(n,o){var r={start:t.data.nodes[n.from],type:e.defaultEdgeType(t.data.nodes[n.from].Type,t.data.nodes[n.to].Type),end:t.data.nodes[n.to],properties:{Weight:3}};t.publish("newEdge",r)},t.data={nodes:{},edges:{}};var d={nodes:new vis.DataSet,edges:new vis.DataSet},c=new vis.Network(o.find(".graphContainer")[0],d,s);t.$watch("window",function(e){c.setSize(a+"px",i+"px")}),c.on("resize",function(e){u()?c.focusOnNode(u(),{scale:1,animation:{duration:1e3,easingFunction:"easeOutCubic"}}):c.zoomExtent({duration:1e3,easingFunction:"easeOutCubic"})}),d.nodes.on("*",function(e,n,t){d.nodes.length?$(".network-manipulationUI.connect").css("display","inline-block"):$(".network-manipulationUI.connect").hide()}),c.on("select",function(e){if(console.log(t.data.nodes[e.nodes[0]]),1===e.nodes.length){var o=t.data.nodes[e.nodes[0]].label;o&&n.go("admin.main.node.view",{node:o})}else if(1===e.edges.length){var r=e.edges[0],a=t.data.nodes[t.data.edges[r].startNode],i=t.data.nodes[t.data.edges[r].endNode],l={id:r,start:{lookup:a.lookup},end:{lookup:i.lookup},type:t.data.edges[r].type,properties:t.data.edges[r].properties};n.go("admin.main.edge.view",{edge:JSON.stringify(l)})}}),t.subscribe("deleted",function(e){if(console.log(e),e.selection.nodes&&e.selection.nodes.length){var n=e.selection.nodes.map(function(e){return e.id});d.nodes.remove(n)}if(e.selection.edges&&e.selection.edges.length){var t=e.selection.edges.map(function(e){
return e.id});d.edges.remove(t)}}),t.subscribe("focus",function(e){c.focusOnNode(e,{scale:1,animation:{duration:1e3,easingFunction:"easeOutCubic"}})});var u=function(){var e=c.getSelectedNodes();return 1==e.length?e[0]:void 0};$(".network-manipulationUI.connect").hide(),t.hoverNode=void 0,$(".graphContainer").on("mousemove",function(e){var n=c._getNodeAt({x:e.pageX,y:e.pageY-l-55});t.$apply(function(){if(n){var e=t.data.nodes[n.id];t.hoverNode=e,t.publish("hover",e)}else t.publish("hover",void 0),t.hoverNode=void 0})}),t.$watch("active",function(e){void 0!=e&&c.freezeSimulation(!e)}),t.$watch("data",function(){if(console.log("new change"),t.active){console.log("drawing new graph"),d.nodes.clear(),d.edges.clear(),console.log(t.data);var n=e.toGraphData(t.data);d.nodes.add(n.nodes),d.edges.add(n.edges)}}),t.subscribe("dataUpdate",function(n){if(console.log("graph: dataUpdate"),t.active&&t.data){console.log("updating graph"),$.extend(t.data.edges,n.edges),$.extend(t.data.nodes,n.nodes);var o=e.toGraphData(n);d.edges.update(o.edges),d.nodes.update(o.nodes)}})}}}]),angular.module("neograph.query",["neograph.query.presets","neograph.queryInput","neograph.query.graph"]).factory("queryFactory",["queryPresets",function(e){function n(n,t){this.key=n,this.name=n,this.render=t,this.data={nodes:{},edges:{}},this.body={q:"",connectAll:!1},this.presets=e,this.generators={},"Graph"===t&&(this.generators.nodeGraph={type:"nodeGraph",options:{}}),"Grid"===t&&(this.generators.nodeFilter={type:"nodeFilter",options:{}},this.generators.favouritesFilter={type:"favouritesFilter",options:{}})}return{create:function(e,t){var o=new n(e,t);return o}}}]).factory("queryService",["queryFactory",function(e){function n(){for(var e=0;e<r.length;e++)r[e](t)}var t=e.create("Query","Graph"),o={};o[t.key]=t;var r=[];return{queries:o,active:t,update:function(e){t=o[e],n()},subscribe:function(e){r.push(e)}}}]).controller("QueryCtrl",["$scope","queryService",function(e,n){n.subscribe(function(n){e.active=n}),e.queries=n.queries,e.active=n.active,e.selectedTab=e.active.key,e.$watch("selectedTab",function(e){n.update(e)})}]),angular.module("neograph.query.presets",[]).factory("queryPresets",function(){return{Schema:{q:"match (n:Schema) optional match (n)-[r]-(m:Schema) return n,r,m"},AddedRecently:{q:"match (n:Global) where n.created is not null return n order by n.created desc limit 100"},AddedRecentlyPictures:{q:"MATCH  (p:Label) -- (i:Picture) where p.created is not null return p.created,collect(i)[0..5],count(*) as count  order by p.created desc limit 500"},Overview:{q:"match (n) - [r] - (m) where (n:Global and m:Global) and (n.Status is null or n.Status > 6) and (m.Status is null or m.Status > 6) and not (n-[:INSTANCE_OF]-m) RETURN r"},OverViewDense:{q:"match (n) - [r] - (m) where (n:Global and m:Global) and (n.Status is null or n.Status > 3) and (m.Status is null or m.Status > 3) and not (n-[:INSTANCE_OF]-m) RETURN r"},"British Influence":{q:"MATCH (c:Global)-[r]-(d:Global) where (c:English or c:Scottish) and not (c-[:INSTANCE_OF]-d) and not d.Lookup='English' and not c.Lookup='English'  return c,d,r"},"British Only":{q:"MATCH (c:Global)-[r]-(d:Global) where (c:English or c:Scottish) and  (d:English or d:Scottish) and not (c-[:INSTANCE_OF]-d) and not d.Lookup='English' and not c.Lookup='English'  return c,d,r",connectAll:!0},"French Only":{q:"MATCH (c:Global:French)-[r]-(d:Global:French) where  not (c-[:INSTANCE_OF]-d) and not d.Lookup='French' and not c.Lookup='French'  return c,d,r",connectAll:!0},"French Painter influence":{q:"MATCH (c:Global:French:Painter)-[r]-(d:Painter) where not (c-[:INSTANCE_OF]-d) and not d.Lookup='French' and not c.Lookup='French'  return c,d,r",connectAll:!0},"Cezanne 3 gen":{q:"MATCH (c {Lookup:'Cezanne'})-[r]-(d:Painter)  -[s]-(e:Painter)  -[t]-(f:Painter) return c,d,e,f,r,s,t",connectAll:!0},"Cezanne 3 gen outbound":{q:"MATCH (c {Lookup:'Cezanne'})-[r]->(d:Painter)  -[s]->(e:Painter)  -[t]->(f:Painter) return c,d,e,f,r,s,t",connectAll:!0},"Cezanne 3 gen inbound":{q:"MATCH (c {Lookup:'Cezanne'})<-[r]-(d:Painter)  <-[s]-(e:Painter)  <-[t]-(f:Painter) return c,d,e,f,r,s,t",connectAll:!0},"French-English Painters":{q:"MATCH (c:Global:French:Painter)-[r]-(d:Global:English:Painter) where  not (c-[:INSTANCE_OF]-d) and not d.Lookup='French' and not c.Lookup='French'  return c,d,r",connectAll:!0},German:{q:"MATCH (c:Global:German)-[r]-(d:Global) where  not (c-[:INSTANCE_OF]-d) and not d.Lookup='German' and not c.Lookup='German'  return c,d,r"},NorthernEurope:{q:"MATCH (c:Global)-[r]-(d:Global) where (c:NorthernEurope or c:German or c:Dutch or c:English or c:Scottish) and  (d:NorthernEurope or d:German or d:Dutch or d:English or d:Scottish) and not c:Provenance and not d:Provenance and not (c-[:INSTANCE_OF]-d)   return c,d,r"},Italian:{q:"MATCH (c:Global:Italian)-[r]-(d:Global) where  not (c-[:INSTANCE_OF]-d) and not d.Lookup='Italian' and not c.Lookup='Italian'  return c,d,r"},Spanish:{q:"MATCH (c:Global:Spanish)-[r]-(d:Global) where  not (c-[:INSTANCE_OF]-d) and not d.Lookup='Spanish' and not c.Lookup='Spanish'  return c,d,r"},American:{q:"MATCH (c:Global:American)-[r]-(d:Global) where  not (c-[:INSTANCE_OF]-d) and not d.Lookup='American' and not c.Lookup='American'  return c,d,r"},Pop:{q:"match (n {Lookup:'Pop'}) -[r]-(m:Global) -[s]-(p:Global) where not (n-[:INSTANCE_OF]-m) and not (m-[:INSTANCE_OF]-p) and (m:Painter or m:Group) and (p:Painter or p:Group) and not m:Provenance and not p:Provenance return n,r,m,s,p"},Impressionism:{q:"match (n {Lookup:'Impressionist'}) -[r]-(m:Global) -[s]-(p:Global) where not (n-[:INSTANCE_OF]-m) and not (m-[:INSTANCE_OF]-p) and (m:Painter or m:Group) and (p:Painter or p:Group) and not m:Provenance and not p:Provenance return n,r,m,s,p",connectAll:!0},Landscape:{q:"MATCH (c:Global:Landscape)-[r]-(d:Global)  where not (c-[:INSTANCE_OF]-d)  and not d.Lookup='Landscape' and (d:Landscape or d:Provenance or d:Group or d:Iconography or d:Place) return c,d,r"},Modern:{q:"MATCH (c:Global)-[r]-(d:Global) where  not (c-[:INSTANCE_OF]-d) and c.YearTo > 1870  and d.YearTo > 1870 return c,d,r"},Rennaissance:{q:"MATCH (c:Global)-[r]-(d:Global) where  not (c-[:INSTANCE_OF]-d) and c.YearTo > 1400 and c.YearTo<1700 and d.YearTo > 1400 and d.YearTo<1700 return c,d,r"}}}),angular.module("neograph.queryInput",["neograph.neo","neograph.query.presets","neograph.query.generator"]).directive("queryinput",["neo","queryPresets",function(e,n){return{replace:!0,restrict:"E",templateUrl:"app/query/queryInput.html",scope:{query:"=",editable:"=?",defaultpreset:"=?"},link:function(t,o,r){console.log(t.query),t.$watch("preset",function(e){console.log("p"),e&&(console.log("preset change"),t.query.body=e)}),t.defaultpreset&&(t.preset=n[t.defaultpreset]),t.$watch("query.body",function(e){e&&e.q&&(console.log("query Change"),t.getData())}),t.generated={q:""},t.$watch("generated",function(e){e&&(t.query.body=e)}),t.nodeChanged=function(e){e&&(t.query.name=e.Label||e.Lookup)},t.connectAll=function(){e.getAllRelationships(t.query.data.nodes).then(function(e){$.extend(t.query.data.edges,e.edges),t.publish("dataUpdate",e)})},t.getData=function(){var n=t.query.body;if(n&&n.q){console.log("get data");var o="Grid"===t.query.type;e.getGraph(n.q,o).then(function(o){n.connectAll?e.getAllRelationships(o.nodes).then(function(e){$.extend(o.edges,e.edges),t.query.data=o}):(t.query.data=o,console.log(o))})}}}}}]),angular.module("neograph.node.favourites",[]).directive("favourites",function(){return{restrict:"E",templateUrl:"app/node/favourites/node.favourites.html",scope:{node:"=",query:"="},link:function(e){e.$watch("node",function(n){var t=[];n&&(t.push({name:"Pictures",view:n.Lookup+" favourites",type:"Grid",queryGenerator:{id:"favouritesFilter",options:{user:n}}}),t.push({name:"People",q:"MATCH (c:"+n.Lookup+":Favourite)-[]->(d) - [] - (n:Person)    return n",connectAll:!0,view:"Graph"}),t.push({name:"People + 1",q:"MATCH (c:"+n.Lookup+":Favourite)-[]->(d) - [] - (n:Person) -[]-(m:Person)   return n,m",connectAll:!0,view:"Graph"}),t.push({name:"People and groups",q:"MATCH (c:"+n.Lookup+":Favourite)-[]->(d) - [] - (n) where (n:Person or n:Period or n:Group or n:Provenance)   return n",connectAll:!0,view:"Graph"}),t.push({name:"People and groups + 1 ",q:"MATCH (c:"+n.Lookup+":Favourite)-[]->(d) - [] - (n) - [] - (m) where (n:Person or n:Period or n:Group or n:Provenance) and  (m:Person or m:Period or m:Group or m:Provenance)  return n,m",connectAll:!0,view:"Graph"}),t.push({name:"Everything",q:"MATCH (c:"+n.Lookup+":Favourite)-[]->(d) - [] - (n:Global)  return n",connectAll:!0,view:"Graph"}),t.push({name:"Everything + 1",q:"MATCH (c:"+n.Lookup+":Favourite)-[]->(d) - [] - (n:Global) - [] - (m:Global)   return n,m",connectAll:!0,view:"Graph"})),console.log(t),e.querys=t})}}}),angular.module("neograph.node.freebase",["neograph.neo"]).factory("freebase.service",function(){var e=[];e.push({name:"About",propname:["type","art_genre","","art_subject","period_or_movement","locations","date_begun","date_completed"],query:{type:"/visual_art/artwork",art_genre:[{mid:null,name:null}],art_subject:[{mid:null,name:null}],period_or_movement:[{mid:null,name:null}],locations:[{mid:null,name:null}],date_begun:null,date_completed:null}});var n=[];n.push({name:"Artworks",propname:"artworks",query:{type:"/visual_art/visual_artist",artworks:[{mid:null,name:null}]}}),n.push({name:"Quotations",propname:"quotations",query:{type:"/people/person",quotations:[{mid:null,name:null}]}}),n.push({name:"Influence",propname:"influenced",query:{type:"/influence/influence_node",influenced:[{mid:null,name:null}]}}),n.push({name:"Influenced by",propname:"influenced_by",query:{type:"/influence/influence_node",influenced_by:[{mid:null,name:null}]}}),n.push({name:"Periods or Movements",propname:"associated_periods_or_movements",query:{type:"/visual_art/visual_artist",associated_periods_or_movements:[{mid:null,name:null}]}}),n.push({name:"Peers",propname:"peers",query:{type:"/influence/influence_node",peers:[{mid:null,name:null}]}}),n.push({name:"Date of Birth",propname:"date_of_birth",query:{type:"/people/person",date_of_birth:null}}),n.push({name:"Date of Death",propname:"date_of_death",query:{type:"/people/deceased_person",date_of_death:null}});var t=function(e,n,t){var o="https://www.googleapis.com/freebase/v1/topic",r={key:"AIzaSyDKAx-gsd84J-0ebWuGI3QMG2N7daVyqLE",filter:n};$.getJSON(o+e+"?callback=?",r,function(e){t(e)})},o=function(e,n){var o=[];o.push({filter:"/visual_art/visual_artist",props:["associated_periods_or_movements"]}),o.push({filter:"/influence/influence_node",props:["influenced","peers,/influence/peer_relationship/peers","influenced_by"]}),o.push({filter:"/people/person",props:["date_of_birth","gender","nationality","place_of_birth","places_lived,/people/place_lived/location","quotations"]}),o.push({filter:"/people/deceased_person",props:["date_of_death","place_of_death"]});var r=0,a={};angular.forEach(o,function(i){t(e,i.filter,function(e){angular.forEach(i.props,function(n){arr=n.split(",");var t=i.filter+"/"+arr[0];if(e&&e.property&&e.property[t]){var o=e.property[t];"compound"==o.valuetype?(vals=[],angular.forEach(o.values,function(e){vals.push(e.property[arr[1]].values[0].text)}),a["FB_"+arr[0]]=vals):(vals=[],angular.forEach(o.values,function(e){vals.push(e.text)}),a["FB_"+arr[0]]=vals),"date_of_death"!=arr[0]&&"place_of_death"!=arr[0]&&"place_of_birth"!=arr[0]&&"date_of_birth"!=arr[0]&&"gender"!=arr[0]&&"nationality"!=arr[0]||(a["FB_"+arr[0]]=a["FB_"+arr[0]][0])}else console.log("property not available: "+t)}),r+=1,r==o.length&&n(a)})})};return{getImage:function(e,n,o,r){t(e,"/common/topic/image",function(e){console.log(e);var t=e.values[0].id,a="https://usercontent.googleapis.com/freebase/v1/image";n=n||225,o=o||400,r(a+t+"?mode=fillcropmid&maxwidth="+n+"&maxheight="+o)})},getText:function(e,n){var t="/common/topic/description",o="https://www.googleapis.com/freebase/v1/topic",r={key:"AIzaSyDKAx-gsd84J-0ebWuGI3QMG2N7daVyqLE",filter:t};$.getJSON(o+e.FB_ID+"?callback=?",r,function(o){if(o.property){console.log(o);var r=o.property[t].values[0].value,a=20,i=r.indexOf(" is "),l=r.indexOf(" was ");i>-1&&(l>i||-1==l)&&(l=i),-1===l&&(l=0),-1==$.inArray("Person",e.labels)&&(l=0);var s=r.substring(a+l,r.length).indexOf(". ")+1,d=r.substring(a+l,r.length).indexOf(".\n")+1,c=d>0&&s>d?d:s,u=c>0?a+l+c:r.length,p=e.Lookup;p=p.replace(/ /g,"").toLowerCase()==e.Name.toLowerCase()?e.name:p.replace(/([A-Z])/g," $1").replace(/^./,function(e){return e.toUpperCase()});var h=(l>0?p:"")+r.substring(l,u),f=r.substring(u,r.length);n(h!=f?{FB_blurb:h.trim(),FB_blurb_full:f.trim()}:{FB_blurb:h.trim(),FB_blurb_full:null})}else console.log("no blurb found for "+e.Name),n({})})},getTopic:function(e,n){t(e,n)},getPersonData:function(e,n){o(e,n)},getCreationData:function(n,t){getData(n,e,t)},getId:function(e,n){var t="AIzaSyDKAx-gsd84J-0ebWuGI3QMG2N7daVyqLE",o="https://www.googleapis.com/freebase/v1/search",r=$.inArray("Picture",e.labels),a={key:t,query:r?e.Title||e.Name:e.Lookup,limit:100};$.inArray("Person",e.labels)>-1?a.filter="(any type:/people/person type:/people/deceased_person type:/book/author type:/visual_art/visual_artist )":$.inArray("Group",e.labels)>-1||$.inArray("Period",e.labels)>-1?a.filter="(any type:/visual_art/art_period_movement type:/architecture/architectural_style  type:/time/event   type:/book/book_subject)":$.inArray("Provenance",e.labels)>-1?a.filter="(any type:/people/ethnicity type:/location/country )":r&&(a.domain="/visual_art");var i={id:void 0,error:void 0};$.getJSON(o+"?callback=?",a,function(t){$(t.result).each(function(n,t){return t.name===e.Name||t.name==e.Wikipagename||t.name.indexOf(e.Name)>-1||t.name.indexOf(e.Lookup)>-1?(i=t,!1):void 0}),i.response=t.result,n(i)})}}}).directive("freebase",["freebase.service","neo",function(e,n){return{restrict:"E",templateUrl:"app/node/freebase/node.freebase.html",scope:{node:"=",active:"="},link:function(t){var o=function(n,t){e.getPersonData(n.FB_ID,function(e){$.extend(n,e),n.FB_date_of_birth&&!n.YearFrom&&(n.YearFrom=parseInt(n.FB_date_of_birth.split("-")[0])),n.FB_date_of_death&&!n.YearTo&&(n.YearTo=parseInt(n.FB_date_of_death.split("-")[0])),t(n)})},r=function(n,o){e.getText(n,function(e){t.$apply(function(){$.extend(n,e),n.FB_blurb&&!n.Description&&(n.Description=n.FB_blurb),n.FB_blurb_full&&!n.Text&&(n.Text=n.FB_blurb_full)}),o(n)})},a=function(e,t){r(e,function(e){$.inArray("Person",e.labels)>-1&&!t?o(e,function(e){console.dir(e),n.saveProps(e).then(function(e){console.log(e+" saved")})}):n.saveProps(e).then(function(e){console.log(e+" saved")})})};t.reselect=function(e,n,o){t.clear(e),e.FB_ID=n,e.FB_name=o,a(e)},t.clear=function(e){e.FB_ID=null,e.Text===e.FB_blurb_full&&delete e.Text,e.Description===e.FB_blurb&&delete e.Description,e.FB_date_of_birth&&e.YearFrom==parseInt(e.FB_date_of_birth.split("-")[0])&&delete e.YearFrom,e.FB_date_of_death&&e.YearTo==parseInt(e.FB_date_of_death.split("-")[0])&&delete e.YearTo;for(var t in e)0==t.indexOf("FB_")&&delete e[t];n.saveProps(e).then(function(e){console.log(e+" saved")})};var i=!1,l=function(){e.getId(t.node,function(e){t.$apply(function(){t.disambiguation=e.response,i=!0})})};t.$watch("node",function(e){e&&(i=!1,t.active&&l())}),t.$watch("active",function(e){e&&t.node&&!i&&l()})}}}]),angular.module("neograph.node.graphpanel",["neograph.neo","neograph.utils"]).directive("nodegraphpanel",["neo","utils",function(e,n){return{replace:!0,restrict:"E",templateUrl:"app/node/graphpanel/node.graphpanel.html",scope:{node:"=",active:"=",window:"=?",width:"=?",height:"=?"},link:function(e,t,o){var r,a={nodes:new vis.DataSet,edges:new vis.DataSet};e.view=n.newView("NodeGraph","NodeGraph"),e.view.queryGenerator={type:"nodeGraph",options:{node:e.node}},e.$watch("node",function(n){e.view.queryGenerator.options={node:n}}),e.w=200,e.h=200,e.$watch("active",function(o){o&&!r&&(e.width&&e.height?(e.w=e.width,e.h=e.height):e.window&&(e.w=e.window.width,e.h=e.window.height-170),r=new vis.Network(t.find(".graphContainer")[0],a,n.graphOptions),r.setSize(e.w+"px",e.h+"px"),r.on("resize",function(e){r.zoomExtent({duration:1e3,easingFunction:"easeOutCubic"})}))}),e.$watch("view.data",function(t){if(e.active){console.log("drawing new graph"),a.nodes.clear(),a.edges.clear();var o=n.toGraphData(t);a.nodes.add(o.nodes),a.edges.add(o.edges)}}),e.$watch("window",function(n){r&&n&&(r.setSize(e.window.width+"px",e.window.height-170+"px"),r.zoomExtent({duration:1e3,easingFunction:"easeOutCubic"}))}),e.$watch("width",function(){r&&(r.setSize(e.width+"px",e.height-170+"px"),r.zoomExtent({duration:1e3,easingFunction:"easeOutCubic"}))}),e.$watch("height",function(){r&&(r.setSize(e.width+"px",e.height-170+"px"),r.zoomExtent({duration:1e3,easingFunction:"easeOutCubic"}))})}}}]),angular.module("node.graphTypes",["neograph.neo"]).directive("graphTypes",function(){return{restrict:"E",templateUrl:"app/node/graphtypes/node.graphTypes.html",scope:{node:"=",window:"="},link:function(e){e.$watch("node",function(n){if(n){var t=[],o=n.Lookup;if($.inArray("Provenance",n.labels)>-1&&t.push({name:"Provenance",q:"MATCH (c:Global:"+o+")-[r]-(d:Global) where  not (c-[:TYPE_OF]-d) and not d.Lookup='"+o+"' and not c.Lookup='"+o+"'  return c,d,r"}),$.inArray("Period",n.labels)>-1&&t.push({name:"Period",q:"MATCH (c:Global:"+o+")-[r]-(d:Global) where  not (c-[:TYPE_OF]-d) and not d.Lookup='"+o+"' and not c.Lookup='"+o+"'  return c,d,r"}),$.inArray("Theme",n.labels)>-1&&t.push({name:"Theme",q:"MATCH (c:Global:"+o+")-[r]-(d:Global) where  not (c-[:TYPE_OF]-d) and not d.Lookup='"+o+"' and not c.Lookup='"+o+"'  return c,d,r"}),$.inArray("Person",n.labels)>-1&&(t.push({name:"Outbound Influence",q:"MATCH (c {Lookup:'"+o+"'})-[r]->(d:Painter) with c,d,r optional  match(d) -[s]->(e:Painter) return c,d,r,s,e ",connectAll:!0}),t.push({name:"Inbound Influence",q:"MATCH (c {Lookup:'"+o+"'})<-[r]-(d:Painter) with c,d,r optional  match(d) <-[s]-(e:Painter) return c,d,r,s,e ",connectAll:!0})),$.inArray("Group",n.labels)>-1&&t.push({name:"Group",q:"match (n {Lookup:'"+o+"'}) -[r]-(m:Global) -[s]-(p:Global) where not (n-[:TYPE_OF]-m) and not (m-[:TYPE_OF]-p) and (m:Painter or m:Group) and (p:Painter or p:Group) and not m:Provenance and not p:Provenance return n,r,m,s,p",connectAll:!0}),$.inArray("Iconography",n.labels)>-1&&t.push({name:"Iconography",q:"MATCH (c:Global:"+o+")-[r]-(d:Global)  where not (c-[:TYPE_OF]-d)  and not d.Lookup='"+o+"' and (d:"+o+" or d:Provenance or d:Group or d:Iconography or d:Place) return c,d,r",connectAll:!0}),!n.temp.isPicture&&n.YearFrom&&n.YearTo){var r="MATCH (c:Global)-[r]-(d:Global) where  not (c-[:TYPE_OF]-d) and ";r+="((c.YearTo >= "+n.YearFrom+" and c.YearTo<= "+n.YearTo+") or (c.YearFrom >= "+n.YearFrom+" and c.YearFrom<= "+n.YearTo+"))",r+="and ((d.YearTo >= "+n.YearFrom+" and d.YearTo<= "+n.YearTo+") or (d.YearFrom >= "+n.YearFrom+" and d.YearFrom<= "+n.YearTo+"))",r+=" return c,d,r",t.push({name:"YearFromYearTo",q:r,connectAll:!0})}angular.forEach(t,function(e){e.view=n.Lookup+" - "+e.name,e.type="Graph"}),e.querys=t}else e.querys=[]})}}}),angular.module("node.imageRelationships",["neograph.neo"]).directive("imageRelationships",["neo",function(e){return{restrict:"E",templateUrl:"/app/node/imageRelationships/node.imageRelationships.html",scope:{node:"=",query:"=",window:"="},link:function(n){n.$watch("node",function(t){if(t){var o=[];if(o.push({name:"Linked pictures",q:"MATCH (c)-[r]-(d:Picture) where ID(c) = "+t.id+" return d"}),t.YearFrom||t.YearTo){var r;t.YearFrom&&t.YearTo?r={q:"MATCH (c:Picture) where  (c.YearTo >= "+t.YearTo+" and c.YearTo<= "+t.YearTo+") or (c.YearFrom >= "+t.YearFrom+" and c.YearFrom<= "+t.YearFrom+") return c"}:t.YearTo?r={q:"MATCH (c:Picture) where  (c.YearTo = "+t.YearTo+" ) or (c.YearFrom = "+t.YearTo+" ) return c"}:t.YearFrom&&(r={q:"MATCH (c:Picture) where  (c.YearTo = "+t.YearFrom+") or (c.YearFrom = "+t.YearFrom+" ) return c"}),r.name="Contemporaneous",r.type="Grid",r.preview=r.q+" limit 3",o.push(r)}angular.forEach(t.labels,function(e){"Picture"!=e&&"Painting"!=e&&o.push({isLabel:!0,name:e,q:"MATCH (c:Picture:"+e+") return c",preview:"MATCH (c:Picture:"+e+")  where ID(c)<>"+t.id+"  return c limit 3",view:e,type:"Grid",queryGenerator:{id:"nodeFilter",options:{node:{Lookup:e}}}})}),n.querys=o,angular.forEach(o,function(n){e.getGraph(n.preview||n.q).then(function(e){n.hasData=!$.isEmptyObject(e.nodes),n.data=e})})}else n.querys=[]})}}}]),angular.module("neograph.node.images",["neograph.neo"]).controller("NodeImagesCtrl",["neo",function(e){$scope.images=[],$stateParams.node&&nodeService.get($stateParams.node,!0).then(function(e){$scope.node=e});var n=!1;$scope.$watch("active",function(e){$scope.node&&e&&!n&&t()}),$scope.$watch("node",function(e){n=!1,$scope.active||($scope.images=[]),e&&$scope.active&&t()});var t=function(){e.getImages($scope.node).then(function(e){$scope.images=e,n=!0})};$scope.openGridTab=function(e){$scope.publish("query",{view:e.Lookup,type:"Grid",queryGenerator:{id:"nodeFilter",options:{node:e}}})}}]),angular.module("neograph.node.multiple",["neograph.neo","neograph.utils"]).directive("multiple",["neo","utils",function(e,n){return{restrict:"E",templateUrl:"app/node/multiple/node.multiple.html",scope:{nodes:"="},link:function(n){n.$watch("nodes",function(e){if(e){var t=e.map(function(e){return e.labels});n.labels=t.shift().filter(function(e){return t.every(function(n){return-1!==n.indexOf(e)})}),n.originalLabels=angular.copy(n.labels)}}),n.addLabel=function(e){-1===n.labels.indexOf(e.Label)&&n.labels.push(e.Label)},n.removeLabel=function(e){var t=n.labels.indexOf(e);t>-1&&n.labels.splice(t,1)},n.save=function(){e.saveMultiple({nodes:n.nodes,labels:n.labels,originalLabels:n.originalLabels})},n.restore=function(){var t=[];angular.forEach(n.nodes,function(o){e.restoreNode(o).then(function(){t.push(o),t.length===n.nodes.length&&(n.publish("restored",{selection:{nodes:t}}),n.selection.multiple=void 0,n.tabs=[])})})},n["delete"]=function(){var t=[];angular.forEach(n.nodes,function(o){e.deleteNode(o).then(function(){t.push(o),t.length===n.nodes.length&&(n.publish("deleted",{selection:{nodes:t}}),n.selection.multiple=void 0,n.tabs=[])})})},n.destroy=function(){var t=[];angular.forEach(n.nodes,function(o){e.destroyNode(o).then(function(){t.push(o),t.length===n.nodes.length&&(n.publish("deleted",{selection:{nodes:t}}),n.selection.multiple=void 0,n.tabs=[])})})}}}}]),angular.module("neograph.node.properties",["neograph.node.service","neograph.session","neograph.utils"]).controller("EditPropertiesCtrl",["nodeService","session","utils","$scope","$stateParams",function(e,n,t,o,r){r.node&&e.get(r.node,!0).then(function(e){o.node=e}),o.deleteNode=function(n){e["delete"](n).then(function(e){o.selection.selectedNode=e,delete o.activeView.data.nodes[n.id],o.publish("deleted",{selection:{nodes:[n]}})})},o.destroyNode=function(n){e.destroy(n).then(function(e){o.selection.selectedNode=void 0,delete o.activeView.data.nodes[n.id],o.publish("deleted",{selection:{nodes:[n]}})})},o.saveNode=function(r){e.save(r,n.user).then(function(e){o.node=e;var n={};n[e.id]=e,o.publish("dataUpdate",n),"Type"==e["class"]&&t.refreshTypes(),$(e.temp.links).each(function(e,n){n.editing=void 0})})},o.restoreNode=function(n){e.restore(n).then(function(e){o.node=e;var n={};n[e.id]=e,o.publish("dataUpdate",n)})},o.$watch("node",function(e){e&&(e.labelled=e.labelled||[],$(".labelEdit input").val(""),o.deleted=e.labels.indexOf("Deleted")>-1)}),o.$watch("node.lookup",function(e,n){e&&(void 0!=o.node.label&&""==o.node.label.trim()||o.node.label==n)&&(o.node.label=e)}),o.nodeTypes=[];o.$watchCollection("node.labels",function(e){if(console.log("labels changed"),console.log(e),e){var n=[];angular.forEach(o.node.labels,function(e){t.types[e]&&n.push({lookup:e,"class":"Type"})}),o.nodeTypes=n,o.node["class"]||1!==o.nodeTypes.length||(o.node["class"]=o.nodeTypes[0].lookup)}}),o.setType=function(e){console.log(e),t.isType(e.label)&&(o.node["class"]=e.label)},o.$watch("newPredicate",function(e){e&&o.addRelationship({lookup:e.toUpperCase().replace(/ /g,"_")})}),o.addRelationship=function(e){var n=predicateFactory.create({lookup:e.lookup,direction:"out"});o.node.relationships=o.node.relationships||{},o.node.relationships[n.toString()]||(o.node.relationships[n.toString()]={predicate:n,items:[]})}}]),angular.module("neograph.node.relationships",["neograph.node.service","neograph.session","neograph.utils"]).controller("EditRelationshipsCtrl",["nodeService","session","utils","$scope","$stateParams",function(e,n,t,o,r){r.node&&e.get(r.node,!0).then(function(e){o.node=e}),o.$watch("node",function(e){e&&(e.labelled=e.labelled||[],$(".labelEdit input").val(""),o.deleted=e.labels.indexOf("Deleted")>-1)}),o.nodeTypes=[];o.$watch("newPredicate",function(e){e&&o.addRelationship({lookup:e.toUpperCase().replace(/ /g,"_")})}),o.addRelationship=function(e){var n=predicateFactory.create({lookup:e.lookup,direction:"out"});o.node.relationships=o.node.relationships||{},o.node.relationships[n.toString()]||(o.node.relationships[n.toString()]={predicate:n,items:[]})}}]),angular.module("neograph.node.wikipedia",["neograph.neo"]).factory("wikiservice",function(){var e=function(e,n){var t=[];if(e.parse){var o=$("<document>"+e.parse.text["*"]+"</document>");if(o.find("ul.redirectText").length>0)t={redirect:o.find("ul.redirectText li a").attr("title")};else{var r=$("<div></div>");o.find(".image").each(function(e,t){$(t).attr("href",$(t).attr("href").replace("/wiki/","https://en.wikipedia.org/wiki/"+n.replace(" ","_")+"#/media/")).attr("target","_blank").css({"padding-right":"5px","padding-bottom":"5px"})}),o.find(".image").appendTo(r),o.find("p").css({"margin-bottom":"4px",clear:"left"}),o.find("p,.thumb,.thumbinner").css({width:"100%"}),o.find("h2,h3,h4").css({"margin-top":"4px","margin-bottom":"2px","float":"left",clear:"left",width:"100%",overflow:"hidden"}),o.find("#toc").remove(),o.find(".editsection").remove(),o.find(".magnify").remove(),o.find(".reflist").remove(),o.find("img").css({display:"block","float":"left","margin-right":"3px","margin-bottom":"3px"}),o.find(".thumb,.thumbinner").css({"float":"left","margin-right":"3px","margin-bottom":"3px"}),o.find(".thumbcaption").css({"font-size":"11px"}),o.find(".plainlinks").remove(),o.find("#navbox").remove(),o.find(".rellink").remove(),o.find(".references").remove(),o.find(".IPA").remove(),o.find("sup").remove(),o.find("dd,blockquote").css({margin:"0px",width:"","font-size":"11px","margin-bottom":"10px","margin-top":"7px"}),o.find("blockquote p").css({"font-size":"11px"}),o.find(".navbox, .vertical-navbox").remove(),o.find("#persondata").remove(),o.find("#Footnotes").parent().remove(),o.find("#References").parent().remove(),o.find("#Bibliography").parent().remove(),o.find(".refbegin").remove(),o.find(".dablink").remove(),o.find("small").remove(),o.find("img[alt='Wikisource-logo.svg'], img[alt='About this sound'], img[alt='Listen']").remove(),o.find(".mediaContainer").remove(),o.find("a").each(function(){$(this).replaceWith($(this).html())}),o.find(".gallery").find("p").css({width:"","font-size":"11px","float":"left",clear:"left"}),o.find(".gallery").find(".thumb").css({width:""}),o.find(".gallerybox").css("height","220px"),o.find(".gallerybox").css("float","left"),o.find("table").css({background:"none",width:"","max-width":"",color:""}),o.find(".gallery").remove(),o.find("#gallery").parent().remove(),o.find("#notes").parent().remove(),o.find("#sources").parent().remove(),o.find("table").remove(),o.find("h1,h2,h3,h4").next().css({clear:"left"}),o.find("dl").remove(),o.find(".thumb").remove(),o.find("ul,.cquote").css({"float":"left",clear:"left"}),o.find(".infobox, .vcard").remove(),o.find(".thumbimage").css({"max-width":"150px",height:"auto"}),o.find(".mw-editsection").remove(),o.html(o.html().replace("()","")),o.html(o.html().replace("(; ","(")),o.find("h2").css({cursor:"pointer",color:"rgba(0,85,128,1)","font-size":"20px"}),o.find("h3").css({"font-size":"18px"}),o.find("#Gallery").parent().nextUntil("h2").andSelf().remove(),o.find("#See_also").parent().nextUntil("h2").andSelf().remove(),o.find("#Notes").parent().nextUntil("h2").andSelf().remove(),o.find("#External_links").parent().nextUntil("h2").andSelf().remove(),o.find("#Selected_works").parent().nextUntil("h2").andSelf().remove(),o.find("#Sources").parent().nextUntil("h2").andSelf().remove(),o.find("#Other_reading").parent().nextUntil("h2").andSelf().remove(),o.find("#Further_reading").parent().nextUntil("h2").andSelf().remove(),o.find("#Resources").parent().nextUntil("h2").andSelf().remove(),o.find("#Further_reading_and_sources").parent().nextUntil("h2").andSelf().remove(),o.find("#List_of_paintings").parent().nextUntil("h2").andSelf().remove(),o.find("#Self-portraits").parent().nextUntil("h2").andSelf().remove(),o.find("#Selected_paintings").parent().nextUntil("h2").andSelf().remove(),o.find("#References_and_sources").parent().nextUntil("h2").andSelf().remove(),o.find("#Partial_list_of_works").parent().nextUntil("h2").andSelf().remove(),o.find("#Notes_and_references").parent().nextUntil("h2").andSelf().remove(),o.find("[id^=Selected_works]").parent().nextUntil("h2").andSelf().remove(),o.find("[id^=Books]").parent().nextUntil("h2").andSelf().remove();var a=$("<div></div>");o.find("p:first").nextUntil("h2").andSelf().appendTo(a),-1===a.text().indexOf("Redirect")&&-1===a.text().indexOf("may refer to")&&a.find("ul").remove(),a.html()&&t.push({header:"Summary",content:a.html().replace("/; /g","")}),o.find("h2").each(function(e,n){var o=$("<div></div>");$(n).nextUntil("h2").appendTo(o),o.html()&&t.push({header:$(n).text(),content:o.html()})}),r.html()&&(r.find("img").css({width:"250px",marginBottom:"5px"}),t.push({header:"Images",content:r.html()}))}}return t},n=function t(n,o){$.getJSON("http://en.wikipedia.org/w/api.php?action=parse&format=json&callback=?",{page:n,prop:"text",uselang:"en"},function(r){console.log(r);var a=e(r,n);a.redirect?t(a.redirect,o):o(a)})};return{getPage:function(e,t){n(e,t)}}}).directive("wikipedia",["wikiservice","neo",function(e,n){return{restrict:"E",templateUrl:"app/node/wikipedia/node.wikipedia.html",scope:{node:"=",window:"=",active:"="},link:function(t,o){t.tabs=[],t.setActiveTab=function(e){t.activeTab=e};var r=!1;t.$watch("node",function(e){e&&(r=!1,t.page=e.Wikipagename||e.Name||e.Title)}),t.savePage=function(){t.node.Wikipagename=t.page,n.saveWikipagename(t.node).then(function(e){t.page=e.Wikipagename})};var a=function(){e.getPage(t.page,function(e){t.tabs=e,t.activeTab=t.tabs[0],t.$digest(),$(o).find(".wikidropdown").dropdown(),r=!0})};t.$watch("page",function(e){e&&t.active?a():t.tabs=[]}),t.$watch("active",function(e){t.page&&e&&!r&&a()})}}}]),angular.module("neograph.query.generator.favouritesFilter",["neograph.neo"]).directive("favouritesFilter",["neo",function(e){return{restrict:"E",templateUrl:"app/query/generator/favouritesFilter.html",scope:{options:"=",generated:"="},link:function(n,t,o){n.filters=[],n.node={};var r=[];n.$watch("options",function(e){e&&(n.node=e.user)}),n.$watch("node",function(e){a()});var a=function(){n.node&&(r=[n.node.Lookup,"Favourite"],i(),n.enabledFilters=[],n.process())},i=function(){if(r&&r.length){var t="match (a:"+r.join(":")+") - [] -> (b) return distinct(LABELS(b))";e.getDistinctLabelsQuery(t).then(function(e){angular.forEach(r,function(n){e.splice($.inArray(n,e),1)}),n.filters=e})}};n.process=function(t){if(n.node){t=t||[];var o="b";t.length&&(o+=":"+t.join(":"));var a="match (a:"+r.join(":")+") - [] -> ("+o+")";n.generated=a+" return b",t.length?e.getDistinctLabelsQuery(a+" return distinct(LABELS(b))").then(function(e){n.enabledFilters=e}):n.enabledFilters=[]}}}}}]),angular.module("neograph.query.generator.nodeFilter",["neograph.neo"]).directive("nodeFilter",["neo",function(e){return{restrict:"E",templateUrl:"app/query/generator/nodeFilter.html",scope:{options:"=",generated:"=",nodechanged:"&?"},link:function(n,t,o){n.filters=[],
n.node={};var r=[];n.$watch("options",function(e){console.log("node filter options changed"),n.node=e.node}),n.$watch("node",function(e){n.nodechanged&&n.nodechanged({node:e}),a()}),n.openNode=function(){n.node&&n.publish("selected",{selection:{nodes:[n.node]}})};var a=function(){n.node&&(r=[n.node.Label,"Picture"],i(),n.enabledFilters=[],n.process())},i=function(){console.log("node filter - get filters"),console.log(r),r&&r.length&&e.getDistinctLabels(r).then(function(e){angular.forEach(r,function(n){e.splice($.inArray(n,e),1)}),n.filters=e,console.log(n.filters)})};n.process=function(t){n.node&&(t=t&&t.length?t.concat(r):r,n.generated="match (a:"+t.join(":")+" ) return a order by a.Status desc limit 500",t!=r?e.getDistinctLabels(t).then(function(e){n.enabledFilters=e}):n.enabledFilters=[])}}}}]),angular.module("neograph.query.generator.nodeGraph",["neograph.neo"]).directive("nodeGraph",["neo",function(e){return{restrict:"E",templateUrl:"app/query/generator/nodeGraph.html",scope:{options:"=",generated:"=",nodechanged:"&?"},link:function(n,t,o){n.querys=[],n.selected="",n.node={},n.$watch("options",function(e){console.log("node filter options changed"),n.node=e.node}),n.$watch("selected",function(e){console.log(e),e&&e.q&&(n.generated=e.q)}),n.$watch("node",function(t){t&&t.id&&(n.nodechanged&&n.nodechanged({node:t}),e.getNode(t.id,!1).then(function(e){r(e)}))}),n.openNode=function(){n.node&&n.publish("selected",{selection:{nodes:[n.node]}})};var r=function(e){if(e){var t=[],o=e.Lookup;if(t.push({name:"All immediate relationships",q:"MATCH (c)-[r]-(d:Global) where ID(c) = "+e.id+" return c,d,r"}),t.push({name:"Self",q:"MATCH (c:"+e.Label+")-[r]-(d:"+e.Label+")   return c,d,r"}),$.inArray("Provenance",e.labels)>-1&&t.push({name:"Provenance",q:"MATCH (c:Global:"+o+")-[r]-(d:Global) where  not (c-[:TYPE_OF]-d) and not d.Lookup='"+o+"' and not c.Lookup='"+o+"'  return c,d,r"}),$.inArray("Period",e.labels)>-1&&t.push({name:"Period",q:"MATCH (c:Global:"+o+")-[r]-(d:Global) where  not (c-[:TYPE_OF]-d) and not d.Lookup='"+o+"' and not c.Lookup='"+o+"'  return c,d,r"}),$.inArray("Theme",e.labels)>-1&&t.push({name:"Theme",q:"MATCH (c:Global:"+o+")-[r]-(d:Global) where  not (c-[:TYPE_OF]-d) and not d.Lookup='"+o+"' and not c.Lookup='"+o+"'  return c,d,r"}),$.inArray("Person",e.labels)>-1&&(t.push({name:"Outbound Influence",q:"MATCH (c {Lookup:'"+o+"'})-[r]->(d:Painter) with c,d,r optional  match(d) -[s]->(e:Painter) return c,d,r,s,e ",connectAll:!0}),t.push({name:"Inbound Influence",q:"MATCH (c {Lookup:'"+o+"'})<-[r]-(d:Painter) with c,d,r optional  match(d) <-[s]-(e:Painter) return c,d,r,s,e ",connectAll:!0})),$.inArray("Group",e.labels)>-1&&t.push({name:"Group",q:"match (n {Lookup:'"+o+"'}) -[r]-(m:Global) -[s]-(p:Global) where not (n-[:TYPE_OF]-m) and not (m-[:TYPE_OF]-p) and (m:Painter or m:Group) and (p:Painter or p:Group) and not m:Provenance and not p:Provenance return n,r,m,s,p",connectAll:!0}),$.inArray("Iconography",e.labels)>-1&&t.push({name:"Iconography",q:"MATCH (c:Global:"+o+")-[r]-(d:Global)  where not (c-[:TYPE_OF]-d)  and not d.Lookup='"+o+"' and (d:"+o+" or d:Provenance or d:Group or d:Iconography or d:Place) return c,d,r",connectAll:!0}),e.YearFrom&&e.YearTo){var r="MATCH (c:Global)-[r]-(d:Global) where  not (c-[:TYPE_OF]-d) and ";r+="((c.YearTo >= "+e.YearFrom+" and c.YearTo<= "+e.YearTo+") or (c.YearFrom >= "+e.YearFrom+" and c.YearFrom<= "+e.YearTo+"))",r+="and ((d.YearTo >= "+e.YearFrom+" and d.YearTo<= "+e.YearTo+") or (d.YearFrom >= "+e.YearFrom+" and d.YearFrom<= "+e.YearTo+"))",r+=" return c,d,r",t.push({name:"YearFromYearTo",q:r,connectAll:!0})}var a=n.selected.name;n.querys=t,$(n.querys).each(function(e,t){t.name===a&&(n.selected=t)})}}}}}]),angular.module("neograph.query.generator",["neograph.query.generator.favouritesFilter","neograph.query.generator.nodeFilter","neograph.query.generator.nodeGraph"]);
//# sourceMappingURL=bundle.js.map
