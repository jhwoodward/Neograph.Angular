{"version":3,"sources":["app.js","popup.js","publishSubscribe.js","settings.js","common/common.js","common/filter.js","common/filters.js","common/images.js","common/labels.js","common/network.js","common/nodeArray.js","common/typeahead.js","common/typeaheadSimple.js","edge/edge.js","interaction/draggable.js","interaction/interaction.js","interaction/resizable.js","interaction/selectable.js","layout/layout.js","models/node.js","models/predicate.js","neo/neo.client.js","neo/neo.js","neo/session.js","neo/utils.js","node/node.js","node/node.service.js","query/graph.js","query/query.js","query/query.presets.js","query/queryInput.js","node/favourites/node.favourites.js","node/freebase/node.freebase.js","node/graphpanel/node.graphpanel.js","node/graphtypes/node.graphTypes.js","node/imageRelationships/node.imageRelationships.js","node/images/node.images.js","node/multiple/node.multiple.js","node/properties/node.properties.edit.js","node/relationships/node.relationships.edit.js","node/wikipedia/node.wikipedia.js","query/generator/favouritesFilter.js","query/generator/nodeFilter.js","query/generator/nodeGraph.js","query/generator/query.generator.js"],"names":["angular","module","app","config","$stateProvider","$urlRouterProvider","state","url","templateUrl","views","nodeSearch@admin","controller","query@admin","otherwise","$scope","neo","presets","utils","session","subscribe","node","selection","hoverNode","$watch","edge","selectedNode","undefined","multiple","images","saveFavourite","user","newEdge","$apply","selectedEdge","tabs","selectedTab","run","$rootScope","PubSubService","Initialize","document","addEventListener","$","click","chrome","executeScript","file","addDependencies","insertCSS","service","scope","publishEventMap","constructor","prototype","publish","args","evnt","_thisScope","this","slice","call","arguments","splice","forEach","handlerMap","handler","apply","handlers","push","$id","$on","i","l","length","factory","apiRoot","directive","replace","restrict","init","enabled","process","link","$element","$attrs","filters","labels","f","getFilterClass","value","toggleFilter","label","inArray","filter","input","editing","nodes","active","updatemasonry","$ul","find","items","removeClass","applyMasonry","hasClass","masonry","setTimeout","nodeselector","addClass","navigate","name","view","type","queryGenerator","id","options","Label","selectAll","selected","map","e","params","removeItems","sel","console","log","remove","refreshContent","filterBy","selectedNodes","sender","makeFavourite","navpath","highlight","x","getClass","getLabelClass","template","graph","network","width","height","vis","Network","setSize","onselected","directbinding","directBinding","lookup","on","focus","clickable","nodeClicked","item","indexOf","ind","each","addNode","removeNode","nodeService","choice","watchvalue","text","autosize","element","attrs","getSource","source","key","types","JSON","stringify","predicates","nodeSource","placeholderDefault","$input","attr","n","val","css","typeahead","matcher","obj","parse","toLowerCase","query","sorter","aItem","beginswith","caseSensitive","caseInsensitive","shift","concat","highlighter","out","Predicate","ToString","RegExp","$1","match","updater","itemSelected","keyCode","isArray","lenth","d","search","then","data","ngModel","edgeHeader@admin","$stateParams","edge@admin","selectTab","tab","properties@admin.main.edge","editproperties@admin.main.edge","predicateType","Lookup","deleteEdge","activeView","startNode","endNode","edges","saveEdge","g","initLeft","position","left","draggable","axis","drag","change","window","tabsWidth","$window","w","getWindowDimensions","tabsWidthInner","graphWidth","graphHeight","topBarHeight","tabsHeight","newValue","oldValue","bind","selectable","stop","event","ui","parseInt","cancel","transclude","panes","self","select","pane","add","p","require","title","visible","tabsCtrl","stopPropagation","predicateFactory","Node","Object","assign","relKey","relationships","rel","predicate","create","isPicture","isPerson","isProperty","isCustomField","setDirection","direction","toString","symmetrical","reverse","toUpperCase","flip","isDirectional","$resource","settings","root","method","get","getWithRels","getRelationships","getOne","getList","save","saveProps","saveRels","saveWikipagename","saveMultiple","del","destroy","restore","getProps","getImages","getImageRelationships","getAll","getDistinctLabels","neoClient","that","getGraph","q","returnArray","$promise","toJSON","dir","getAllRelationships","nodeIds","getIds","returnType","join","getUser","userLookup","getDistinctLabelsQuery","$q","anonUser","roles","Public","signedIn","signingIn","signIn","username","password","authenticate","localStorage","PreReg","failMessage","reject","signOut","Array","diff","a","ids","hasAny","unique","current","refreshTypes","refreshPredicates","isType","isSystemInfo","Type","personTypes","pictureTypes","tabSettings","nodeHeader@admin","node@admin","nodeimages@admin","properties@admin.main.node","relationships@admin.main.node","editproperties@admin.main.node","editrelationships@admin.main.node","$state","go","newNode","temp","nodeLookupText","addNodeToGraph","Graph","newData","graphView","nodeFactory","lastLoadedNode","setPropsAndTabsFromLabels","setPropsAndTabs","addrelprops","when","limit","Wikipagename","isGroup","trimmed","delete","deferred","resolve","promise","txt","graphNodeFromNeoNode","neoNode","yf","yearFrom","yt","yearTo","y","level","startYear","endYear","step","cnt","size","status","group","mass","radius","borderWidth","image","thumbUrl","shape","fontSize","fontColor","color","background","border","graphEdgeFromNeoEdge","neoEdge","hideEdge","from","to","opacity","style","labelAlignment","defaultEdgeType","fromType","toType","widthSelectionMultiplier","hierarchicalLayout","levelSeparation","nodeSpacing","dataManipulation","initiallyVisible","physics","barnesHut","gravitationalConstant","centralGravity","springLength","springConstant","damping","repulsion","nodeDistance","hierarchicalRepulsion","onDelete","callback","toGraphData","graphData","r","getSelectedNodeId","selectNodes","focusOnNode","scale","animation","duration","easingFunction","onConnect","start","end","properties","Weight","DataSet","zoomExtent","senderId","hide","nodeids","edgeids","nodeid","getSelectedNodes","_getNodeAt","pageX","pageY","dataNode","freezeSimulation","clear","gArr","extend","update","queryPresets","Query","render","body","connectAll","generators","nodeGraph","nodeFilter","favouritesFilter","queryFactory","publishChange","listeners","queries","queryService","Schema","AddedRecently","AddedRecentlyPictures","Overview","OverViewDense","British Influence","British Only","French Only","French Painter influence","Cezanne 3 gen","Cezanne 3 gen outbound","Cezanne 3 gen inbound","French-English Painters","German","NorthernEurope","Italian","Spanish","American","Pop","Impressionism","Landscape","Modern","Rennaissance","editable","defaultpreset","preset","getData","generated","nodeChanged","g2","querys","creationQueries","propname","art_genre","mid","art_subject","period_or_movement","locations","date_begun","date_completed","artworks","quotations","influenced","influenced_by","associated_periods_or_movements","peers","date_of_birth","date_of_death","_getTopic","freebaseId","service_url","getJSON","response","_getPersonData","props","result","arr","split","property","valuetype","vals","values","v","getImage","prop","imageId","getText","FB_ID","blurb","allowedLength","indIs","indWas","stopSpc","substring","stopCr","until","shortname","Name","str","short","full","FB_blurb","trim","FB_blurb_full","getTopic","getPersonData","getCreationData","getId","API_KEY","ispicture","Title","domain","error","FB_date_of_birth","YearFrom","FB_date_of_death","YearTo","getBlurb","Description","Text","blurbOnly","updated","updatedPerson","nid","reselect","FB_name","loaded","getFreebase","disambiguation","newView","h","graphOptions","yq","preview","isLabel","hasData","isEmptyObject","openGridTab","allLabels","every","originalLabels","copy","addLabel","removeLabel","restored","restoreNode","deleted","deleteNode","destroyNode","saveNode","links","labelled","beforechange","nodeTypes","$watchCollection","selectedTypes","class","setType","addRelationship","wikiTabs","page","$wikiDOM","redirect","padding-right","padding-bottom","appendTo","margin-bottom","margin-top","float","overflow","display","margin-right","font-size","margin","parent","replaceWith","html","max-width","next","cursor","nextUntil","andSelf","$introTab","header","content","$tab","marginBottom","getWiki","uselang","getPage","wikiservice","setActiveTab","activeTab","savePage","$digest","dropdown","load","getFilters","enabledFilters","labelQuery","lab","labs","b","nodechanged","openNode","getNode","getQuerys","prevselection"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module(\"templates\",[]);\r\nvar app = angular\r\n    .module(\"Neograph\", \r\n    [\r\n    \"templates\",\r\n    'publishSubscribe',\r\n    'ui.router',\r\n    'ngSanitize',\r\n    'neograph.common',\r\n    'neograph.edge',\r\n    'neograph.interaction',\r\n    'neograph.layout',\r\n    'neograph.neo',\r\n    'neograph.node',\r\n    'neograph.query'\r\n    ])\r\n    .config( ($stateProvider, $urlRouterProvider)=> {\r\n\r\n\r\n        $stateProvider\r\n          \r\n            .state('admin',{\r\n                url:'/admin',\r\n                templateUrl:'app/partials/admin.html'\r\n            })\r\n            .state('admin.main',{\r\n                url:'/main?querypreset',\r\n                views:{\r\n                    'nodeSearch@admin':{\r\n                        controller:'NodeSearchCtrl',\r\n                        templateUrl:'app/node/node.search.html'\r\n                    }\r\n                    ,\r\n                    'query@admin':{\r\n                        controller:'QueryCtrl',\r\n                        templateUrl:'app/query/query.html'\r\n                    }\r\n                    \r\n                }\r\n\r\n            })\r\n    \r\n\r\n        $urlRouterProvider.otherwise(\"/admin/main\");\r\n\r\n    })\r\n    .controller(\"AdminController\", ['$scope', 'neo', 'queryPresets', 'utils','session', \r\nfunction ($scope,  neo, presets, utils,session) {\r\n\r\n    //SWAP ADMIRES FOR INSPIRES\r\n    //MATCH (n)-[r:ADMIRES]->(m) CREATE (m)-[r2:INSPIRES]->(n) SET r2 = r WITH r DELETE r\r\n\r\n   \r\n        \r\n\r\n    $scope.subscribe(\"hover\", function (node) {\r\n\r\n        $scope.selection.hoverNode = node;\r\n\r\n    });\r\n\r\n   \r\n\r\n    //= function () {\r\n\r\n    //    var view = newView($scope.selection.selectedNode.Lookup, \"Grid\");\r\n    //    view.queryGenerators.nodeFilter.options = { node: $scope.selection.selectedNode };\r\n    //    view.queryGenerator = view.queryGenerators.nodeFilter;\r\n    //    $scope.activeViewKey = view.key;\r\n\r\n    //}\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n   \r\n function shouldEnabledAddToGraph() {\r\n\r\n        $scope.enableAddToGraph = $scope.selection.selectedNode &&\r\n            $scope.selection.selectedNode.id &&\r\n            $scope.activeView.type == \"Graph\" &&\r\n            !$scope.activeView.data.nodes[$scope.selection.selectedNode.id];\r\n\r\n\r\n    }\r\n \r\n\r\n   \r\n\r\n\r\n    $scope.$watch('selection.selectedEdge', function (edge) {\r\n\r\n        if (edge) {\r\n            $scope.selection.selectedNode = undefined;\r\n            $scope.selection.multiple = undefined;\r\n            $scope.selection.images = [];\r\n\r\n        }\r\n\r\n    });\r\n\r\n    $scope.subscribe(\"favourite\", function (node) {\r\n\r\n        neo.saveFavourite(node, session.user);\r\n\r\n    });\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    ////published by graph ondelete\r\n    //$scope.subscribe(\"deleting\", function () {\r\n\r\n    //    if (confirm(\"Delete Confirm ? \")) {\r\n    //        //TODO: WHY DOES THIS FIRE 3 TIMES ??\r\n    //        if ($scope.selection.selectedNode) {\r\n\r\n    //            $scope.deleteNode($scope.selection.selectedNode);\r\n\r\n    //        }\r\n    //        else if ($scope.selection.selectedEdge) {\r\n\r\n    //            $scope.deleteEdge($scope.selection.selectedEdge);\r\n    //        }\r\n    //    }\r\n\r\n    //})\r\n\r\n\r\n\r\n    //published by graph onconnecting\r\n    //the new edge shows in the properties window and must then be saved \r\n    $scope.subscribe(\"newEdge\", function (newEdge) {\r\n\r\n        $scope.$apply(function () {\r\n\r\n            $scope.selection.selectedEdge = newEdge;\r\n            $scope.tabs = [\"Properties\"];\r\n            $scope.selectedTab = \"Properties\";\r\n\r\n        })\r\n\r\n\r\n    });\r\n\r\n/*\r\n    $scope.defaultpreset = presets[\"British Only\"];\r\n  \r\n   \r\n    setTimeout(function(){\r\n        var initNode = {id:78550};\r\n        \r\n         $scope.nodeLookup=initNode;\r\n        $scope.publish(\"selected\", \r\n        {\r\n            selection:{nodes:[initNode]}\r\n        }\r\n        );\r\n        \r\n        $scope.selectedTab = \"Images\";\r\n        \r\n    },1000);\r\n*/\r\n\r\n}])\r\n   .run(function ($rootScope, PubSubService) {\r\n      PubSubService.Initialize($rootScope);\r\n  });\r\n   \r\n\r\n","\r\n\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n\r\n    $('#btn').click(function () {\r\n\r\n        chrome.tabs.executeScript(null, { file: \"angular.min.js\" });\r\n        chrome.tabs.executeScript(null, { file: \"jquery.js\" });\r\n        chrome.tabs.executeScript(null, { file: \"scraper/controller.js\" });\r\n        chrome.tabs.executeScript(null, { file: \"scraper/scraper.js\" });\r\n\r\n\r\n    });\r\n\r\n\r\n    var addDependencies = function () {\r\n\r\n\r\n chrome.tabs.insertCSS(null, { file: \"ext/lib/bootstrap-button.css\" });\r\n        chrome.tabs.insertCSS(null, { file: \"ext/lib/bootstrap-dropdown.css\" });\r\n        chrome.tabs.insertCSS(null, { file: \"ext/style.css\" });\r\n        chrome.tabs.executeScript(null, { file: \"ext/lib/jquery.js\" });\r\n        chrome.tabs.executeScript(null, { file: \"ext/lib/bootstrap.js\" });\r\n        chrome.tabs.executeScript(null, { file: \"ext/lib/angular.min.js\" });\r\n        chrome.tabs.executeScript(null, { file: \"ext/lib/angular-resource.min.js\" });\r\n        chrome.tabs.executeScript(null, { file: \"ext/lib/angular-sanitize.min.js\" });\r\n        chrome.tabs.executeScript(null, { file: \"modules.js\" });\r\n        chrome.tabs.executeScript(null, { file: \"filters/filters.js\" });\r\n        chrome.tabs.executeScript(null, { file: \"factories/neoHelper.js\" });\r\n        chrome.tabs.executeScript(null, { file: \"factories/utils.js\" });\r\n        chrome.tabs.executeScript(null, { file: \"factories/neo.js\" });\r\n        chrome.tabs.executeScript(null, { file: \"directives/typeahead.js\" });\r\n\r\n    }\r\n\r\n\r\n    $('#google').click(function () {\r\n        addDependencies();\r\n        chrome.tabs.executeScript(null, { file: \"ext/google.js\" });\r\n    });\r\n\r\n    $('#tate').click(function () {\r\n        addDependencies();\r\n        chrome.tabs.executeScript(null, { file: \"ext/tate.js\" });\r\n    });\r\n\r\n});\n","angular.module(\"publishSubscribe\",[])\r\n.service('PubSubService', function () {\r\n\r\n      return {Initialize:Initialize};\r\n\r\n      function Initialize (scope) {\r\n          //Keep a dictionary to store the events and its subscriptions\r\n          var publishEventMap = {};\r\n\r\n          //Register publish events\r\n          scope.constructor.prototype.publish =  scope.constructor.prototype.publish \r\n           || function () {\r\n               var _thisScope = this,\r\n                   handlers, \r\n                   args, \r\n                   evnt;\r\n               //Get event and rest of the data\r\n               args = [].slice.call(arguments);\r\n               evnt = args.splice(0, 1);\r\n               //Loop though each handlerMap and invoke the handler\r\n               angular.forEach((publishEventMap[evnt] || []), function (handlerMap) {\r\n                   handlerMap.handler.apply(_thisScope, args);\r\n               })\r\n           }\r\n\r\n          //Register Subscribe events\r\n          scope.constructor.prototype.subscribe = scope.constructor.prototype.subscribe \r\n             || function (evnt, handler) {\r\n                 var _thisScope = this,\r\n                     handlers = (publishEventMap[evnt] = publishEventMap[evnt] || []);\r\n\r\n                 //Just keep the scopeid for reference later for cleanup\r\n                 handlers.push({ $id: _thisScope.$id, handler: handler });\r\n                 //When scope is destroy remove the handlers that it has subscribed.  \r\n                 _thisScope.$on('$destroy', function () {\r\n                     for(var i=0,l=handlers.length; i<l; i++){\r\n                         if (handlers[i].$id === _thisScope.$id) {\r\n                             handlers.splice(i, 1);\r\n                             break;\r\n                         }\r\n                     }\r\n                 });\r\n             }\r\n\r\n      }\r\n  });","angular.module('neograph.settings',[])\r\n.factory(\"settings\", function () {\r\n\r\n    return {\r\n        apiRoot : 'http://localhost:1337'\r\n    }\r\n\r\n});\r\n","angular.module('neograph.common',[\r\n    'neograph.common.filter',\r\n    'neograph.common.filters',\r\n    'neograph.common.images',\r\n   'neograph.common.labels',\r\n     'neograph.common.network',\r\n    'neograph.common.nodeArray',\r\n   'neograph.common.typeahead',\r\n   'neograph.common.typeaheadSimple'\r\n    ]);","angular.module('neograph.common.filter',[])\r\n.directive('filter', function () {\r\n    return {\r\n        replace: true,\r\n        restrict: 'E',\r\n        templateUrl: 'app/common/filter.html',\r\n        scope: {\r\n\r\n            init: '='//an array of labels\r\n            ,\r\n            enabled: '='\r\n            ,\r\n            process: '&'\r\n\r\n\r\n\r\n\r\n        },\r\n        link: function ($scope, $element, $attrs) {\r\n\r\n            $scope.filters = {}\r\n\r\n            $scope.$watch('init', function (labels) {\r\n\r\n                var filters = {};\r\n                angular.forEach(labels, function (f) {\r\n                    filters[f] = 0;\r\n                });\r\n\r\n                $scope.filters = filters;\r\n\r\n            });\r\n\r\n            $scope.getFilterClass = function (value) {\r\n\r\n                if (value === 1)\r\n                    return 'label-success';\r\n                else if (value === 0)\r\n                    return 'label-info';\r\n                else return '';\r\n            }\r\n\r\n            $scope.toggleFilter = function (label) {\r\n                if ($scope.filters[label] == 1) {\r\n                    $scope.filters[label] = 0;\r\n\r\n                }\r\n                else if ($scope.filters[label] == 0) {\r\n                    $scope.filters[label] = 1;\r\n\r\n                }\r\n                else if ($scope.filters[label] == -1) {\r\n                    for (var f in $scope.filters) {\r\n                        $scope.filters[f] = 0;\r\n                    };\r\n                    $scope.filters[label] = 1;\r\n                }\r\n\r\n                var labels = [];\r\n                for (var f in $scope.filters) {\r\n\r\n                    if ($scope.filters[f] === 1) {\r\n                        labels.push(f);\r\n                    }\r\n\r\n                }\r\n\r\n\r\n                $scope.process({ labels: labels })\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n            $scope.$watch(\"enabled\", function (labels) {//labels = selectable labels following filtering\r\n\r\n                if (labels && labels.length) {\r\n                    for (var f in $scope.filters) {\r\n\r\n                        if ($.inArray(f, labels) == -1) {//disable filter if not in list\r\n                            $scope.filters[f] = -1;\r\n                        }\r\n                        else if ($scope.filters[f] == -1) {//enable filter if in list and previously disabled\r\n                            $scope.filters[f] = 0;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n\r\n                    for (var f in $scope.filters) {\r\n                        $scope.filters[f] = 0;\r\n                    }\r\n                }\r\n\r\n            })\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n})","angular.module('neograph.common.filters', []).filter('checkmark', function () {\r\n    return function (input) {\r\n        return input ? '\\u2713' : '\\u2718';\r\n    };\r\n}).filter('predicate', function () {\r\n    return function (input) {\r\n        return input ? '\\u2713' : '\\u2718';\r\n    };\r\n});","angular.module('neograph.common.images',['neograph.neo','neograph.session'])\r\n.directive('images', ['neo','session', function (neo) {\r\n    return {\r\n        replace: true,\r\n        restrict: 'E',\r\n        templateUrl: 'app/common/images.html',\r\n        scope: {\r\n            editing: '='\r\n            , nodes: '=' //must be an array to preserve sort order\r\n            , active: '='\r\n            , updatemasonry: '='//required to update masonry on resize\r\n\r\n        },\r\n        link: function ($scope, $element, $attrs) {\r\n\r\n            var $ul = $($element).find('ul');\r\n\r\n            $scope.items = {};\r\n\r\n            $scope.$watch('nodes', function (nodes) {\r\n                $ul.removeClass('masonryLoaded');\r\n                $scope.items = nodes;\r\n                applyMasonry();\r\n\r\n            })\r\n\r\n            $scope.$watch('updatemasonry', function () {\r\n                if ($ul.hasClass('masonry')) {\r\n                    $ul.masonry('reload');\r\n                }\r\n            });\r\n\r\n            $scope.$watch('active',applyMasonry);\r\n\r\n            var applyMasonry = function () {\r\n\r\n            //    if ($scope.updatemasonry) {\r\n\r\n                    setTimeout(function () {\r\n\r\n                        if ($ul.hasClass('masonry')) {\r\n                            $ul.masonry('reload');\r\n                        }\r\n                        else {\r\n                            $ul.masonry({\r\n                                nodeselector: 'li'\r\n                                //,\r\n                                //columnWidth: 1,\r\n                                //\"isFitWidth\": true\r\n                            });\r\n                        }\r\n\r\n                        $ul.addClass('masonryLoaded');\r\n\r\n\r\n                    }, 100);\r\n             //   }\r\n           //     else {\r\n                 //   $ul.addClass('masonryLoaded');\r\n           ///     }\r\n            }\r\n\r\n            $scope.navigate = function (label) {\r\n                $scope.publish(\"query\", {\r\n                    name: label,\r\n                    view: label,\r\n                    type: \"Grid\",\r\n                   queryGenerator: { id: \"nodeFilter\", options: { node: { Label: label } } } \r\n                });\r\n\r\n            }\r\n\r\n            $scope.selectAll = function () {\r\n\r\n                if ($ul.find(\"li.ui-selected\").length < $ul.find(\"li\").length) {\r\n                    $ul.find(\"li\").addClass(\"ui-selected\");\r\n                    $scope.selected = $scope.nodes.map(function (e, i) { return i });\r\n                }\r\n                else {\r\n                    $ul.find(\"li\").removeClass(\"ui-selected\");\r\n                    $scope.selected = [];\r\n                }\r\n            }\r\n\r\n            //this assumes that we are looking at a view of not deleted items\r\n            $scope.subscribe(\"deleted\", function (params) {\r\n\r\n                // alternatively i could have a deep watch on nodearray and update that \r\n                removeItems(params.selection.nodes);\r\n            });\r\n\r\n            //this assumes that we are looking at a view of deleted items\r\n            $scope.subscribe(\"restored\", function (params) {\r\n\r\n                // alternatively i could have a deep watch on nodearray and update that \r\n                removeItems(params.selection.nodes);\r\n            });\r\n\r\n\r\n            var removeItems = function (items) {\r\n\r\n                if (items && items.length) {\r\n                    angular.forEach(items, function (node) {\r\n                        var sel = \"li[nodeid='\" + node.id + \"']\";\r\n                        console.log(sel);\r\n                        $ul.find(sel).remove();\r\n                    });\r\n                    applyMasonry();\r\n\r\n                }\r\n            }\r\n     \r\n\r\n\r\n            $scope.getFilterClass = function (value) {\r\n\r\n                if (value === 1)\r\n                    return 'label-success';\r\n                else if (value === 0)\r\n                    return 'label-info';\r\n                else return '';\r\n            }\r\n\r\n            $scope.toggleFilter = function (label) {\r\n                if ($scope.filters[label] == 1) {\r\n                    $scope.filters[label] = 0;\r\n                    refreshContent();\r\n                }\r\n                else if ($scope.filters[label] == 0) {\r\n                    $scope.filters[label] = 1;\r\n                    refreshContent();\r\n                }\r\n                else if ($scope.filters[label] == -1) {\r\n                    for (var f in $scope.filters) {\r\n                        $scope.filters[f] = 0;\r\n                    };\r\n\r\n                    $scope.filters[label] = 1;\r\n                    refreshContent();\r\n                }\r\n\r\n\r\n            }\r\n\r\n            //triggered by selecting a filter\r\n            $scope.$watch('filterBy', function (label) {\r\n                if (label) {\r\n                    $scope.filters[label] = 1;\r\n                    $scope.filterBy = undefined;\r\n                    refreshContent();\r\n                }\r\n\r\n            });\r\n\r\n      \r\n\r\n            //triggered by selecting one or more images\r\n            $scope.$watch('selected', function (selected) {// NB selected is now an array of node indexes\r\n\r\n                if (selected && selected.length) {\r\n\r\n             \r\n                    var selectedNodes = selected.map(function (i) {\r\n                        return $scope.nodes[i];\r\n                    });\r\n\r\n            //NB if there are multiple instances of the images directive (as typically) it wont be possible ot know which one the event was sent from\r\n                    //but mainly we need to know that it wasnt sent from the graph or controller, as images currently doesnt substribe to selected event\r\n                    $scope.publish(\"selected\", { sender: \"Images\", selection: { nodes: selectedNodes} })\r\n        \r\n\r\n\r\n                }\r\n\r\n\r\n            });\r\n\r\n            $scope.makeFavourite = function (node) {\r\n                console.log(node);\r\n                $scope.publish(\"favourite\", node);\r\n\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n}])","angular.module('neograph.common.labels',['neograph.neo','neograph.utils'])\r\n.directive('labels', ['neo', 'utils', function (neo, utils) {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'app/common/labels.html',\r\n        scope: {\r\n            node: '=?'\r\n            ,\r\n            labels: '=?'\r\n            ,\r\n            items: '=?'\r\n            ,\r\n            navpath: '@'\r\n            ,\r\n            highlight:'@?'\r\n        },\r\n        link: function ($scope, $element, $attrs) {\r\n\r\n            $scope.$watch('node', function (node) {\r\n                if (node) {\r\n                    $scope.labels = $scope.node.labels;\r\n                }\r\n          \r\n            });\r\n\r\n            $scope.$watch('items', function (items) {\r\n                if (items) {\r\n                    $scope.labels = $scope.items.map(function (x) {return x.label });\r\n                }\r\n              \r\n            });\r\n\r\n\r\n    \r\n           \r\n            $scope.getClass = function (label) {\r\n                    if (label === $attrs['highlight']) { \r\n                        return 'label-warning';\r\n                    }\r\n                    else\r\n                return utils.getLabelClass($scope.node, label);\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n}]);","angular.module(\"neograph.common.network\",[])\r\n.directive(\"network\",function(){\r\n    return {\r\n        \r\n        restrict:\"E\",\r\n        template:\"<div></div>\",\r\n        scope:{\r\n            graph:'=',\r\n            options:'=',\r\n            network:'=',\r\n            width:'@',\r\n            height:'@'\r\n        }\r\n        ,\r\n        link:function($scope,$element){\r\n            \r\n             $scope.network = new vis.Network($element, $scope.graph, $scope.options);\r\n             $scope.network.setSize($scope.width + \"px\", $scope.height + \"px\");\r\n        }\r\n        \r\n        \r\n    }\r\n    \r\n});","angular.module('neograph.common.nodeArray',['neograph.utils'])\r\n    .directive('nodeArray', ['utils', function (utils) {\r\n    return {\r\n        replace: true,\r\n        restrict: 'EA',\r\n        templateUrl: 'app/common/nodeArray.html',\r\n        scope: {\r\n\r\n            items: '='//an array of string or  items with label property \r\n            ,\r\n            enabled: '='\r\n            ,\r\n            onselected: '&?'\r\n            ,\r\n            node: '=?'\r\n            ,\r\n            directbinding: '@?'//set this to false if passing in array of strings\r\n            ,\r\n            width: '@?'\r\n\r\n        },\r\n        link: function ($scope, $element, $attrs) {\r\n\r\n            var directBinding = $attrs[\"directbinding\"]==\"false\" ? false : true;\r\n     \r\n            $scope.nodes = [];\r\n\r\n         \r\n\r\n            $scope.$watch('items', function (items) {\r\n\r\n                if (items && items.length) {\r\n                     console.log(items);\r\n                    \r\n\r\n                    if (items[0] && (items[0].label || items[0].lookup)) {\r\n                     \r\n                        $scope.nodes = items;\r\n\r\n                    }\r\n                    else {\r\n                        directBinding = false;\r\n                        $scope.nodes = items.map(function (e) { return { label: e } });\r\n\r\n\r\n                    }\r\n                    \r\n                    console.log($scope.nodes);\r\n                    \r\n                    \r\n                }\r\n                else {\r\n                    if (directBinding) {\r\n                        $scope.nodes = items;\r\n                    }\r\n                    else {\r\n                        $scope.nodes = [];\r\n                    }\r\n                  \r\n                }\r\n            })\r\n\r\n            $($element).on('click', function () {\r\n                $($element).find('input').focus();\r\n            });\r\n\r\n            ////update items array (needed as items can be array of text items not nodes)\r\n            //$scope.$watch('nodes', function (nodes) {\r\n            //    if (!directBinding) {\r\n            //        mappingNodesToItems = true;\r\n            //        $scope.items = nodes.map(function (n) { return n.Label; })\r\n            //        mappingNodesToItems = false;\r\n            //    }\r\n\r\n            //}, true)\r\n\r\n            //$scope.getWidth = function () {\r\n            //    if ($scope.nodes) {\r\n            //        return $attrs[\"width\"] ? $attrs[\"width\"] : $scope.nodes.length > 5 ? '495px' : '230px'\r\n            //    }\r\n            //    else {\r\n            //        return null;\r\n            //    }\r\n            //}\r\n\r\n            $scope.getClass = function (node) {\r\n                return utils.getLabelClass($scope.node, node.label);\r\n            }\r\n\r\n            $scope.clickable = $attrs[\"onselected\"] != undefined;\r\n\r\n            $scope.nodeClicked = function (node) {\r\n         \r\n                if ($attrs[\"onselected\"]) {\r\n\r\n                    $scope.onselected({ item: node });\r\n\r\n                }\r\n            }\r\n\r\n            var indexOf = function (node) {\r\n\r\n                var ind = -1;\r\n\r\n                $($scope.nodes).each(function (i, e) {\r\n\r\n                    if ((node.label && e.label === node.label) || node.lookup && e.lookup == node.lookup) {\r\n                        ind = i;\r\n                        return;\r\n                    }\r\n                });\r\n\r\n                return ind;\r\n\r\n            }\r\n\r\n            $scope.addNode = function (node) {\r\n                console.log(node);\r\n                console.log(directBinding);\r\n                if (indexOf(node) == -1) {\r\n                    console.log('node adding');\r\n                    $scope.nodes.push(node);\r\n  \r\n                    if (!directBinding) {\r\n                        console.log('item adding');\r\n                        $scope.items.push(node.label)\r\n\r\n                    }\r\n\r\n                }\r\n\r\n\r\n                //else highlight the node momentarily\r\n\r\n\r\n            }\r\n\r\n            $scope.removeNode = function (node) {\r\n                console.log(node);\r\n                var ind = indexOf(node);\r\n                console.log(ind);\r\n                if (ind > -1) {\r\n                    $scope.nodes.splice(ind, 1);\r\n\r\n                    if (!directBinding) {\r\n                        $scope.items.splice($scope.items.indexOf(node.label||node.lookup), 1);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        }\r\n    }\r\n}]);","angular.module('neograph.common.typeahead',['neograph.utils','neograph.node.service'])\r\n    .directive('typeahead', ['utils', 'nodeService', function (utils, nodeService) {\r\n    return {\r\n        restrict: 'E',\r\n        replace: true,\r\n        scope: {\r\n            choice: '=?',   //the choice should be an object for 2 way binding with lookup property\r\n            watchvalue: '=?',  //watchvalue should be a text string  -just for updating the textbox value when the value changes, not fed back\r\n            text: '=?', //to feed back the text value when it changes (when no item has been selected)\r\n            restrict: '=?',//options to retrict the items that can be selected = Type,Predicate,User,custom object array with lookup property\r\n            onselected: '&?',\r\n            autosize:'@?'\r\n\r\n        },\r\n        template: '<input type=\"text\" class=\"form-control\" />',\r\n        link: function ($scope, element, attrs) {\r\n\r\n            var placeholderDefault = \"Node...\";\r\n\r\n            var $input = $(element);//.find('input');\r\n            $input.attr(\"placeholder\", attrs[\"placeholder\"] || placeholderDefault);\r\n\r\n            $scope.$watch('choice', function (n) {\r\n                if (n) {\r\n                    $input.val(n.Label || n.lookup);\r\n                }\r\n            })\r\n\r\n            if (!attrs[\"choice\"]) {\r\n                $scope.$watch('watchvalue', function (n) {\r\n                    $input.val(n);\r\n                })\r\n            }\r\n\r\n            if (attrs[\"autosize\"]) {\r\n\r\n                $input.css({ width: '10px' });\r\n                $input.attr(\"placeholder\", \"+\");\r\n                $input.on(\"focus\", function () {\r\n                    $input.css({ width: '100px' });\r\n                    $input.attr(\"placeholder\", attrs[\"placeholder\"] || placeholderDefault);\r\n                    setTimeout(function () {\r\n                        $input.css({ width: '100px' });\r\n                        $input.attr(\"placeholder\", attrs[\"placeholder\"] || placeholderDefault);\r\n                    }, 100)\r\n                  \r\n                });\r\n                $input.on(\"blur\", function () {\r\n                    $input.css({ width: '10px' });\r\n                    $input.attr(\"placeholder\", \"+\");\r\n                    $input.val('');\r\n                })\r\n              \r\n            }\r\n\r\n            $input.typeahead({\r\n                source: getSource(),\r\n\r\n                matcher: function (obj) {\r\n\r\n                    var item = JSON.parse(obj);\r\n\r\n                    return ~item.lookup.toLowerCase().indexOf(this.query.toLowerCase())\r\n                }\r\n                ,\r\n                sorter: function (items) {\r\n                    var beginswith = [], caseSensitive = [], caseInsensitive = [],aItem, item;\r\n                    while (aItem = items.shift()) {\r\n                        var item = JSON.parse(aItem);\r\n                        if (!item.lookup.toLowerCase().indexOf(this.query.toLowerCase())) beginswith.push(JSON.stringify(item));\r\n                        else if (~item.lookup.indexOf(this.query)) caseSensitive.push(JSON.stringify(item));\r\n                        else caseInsensitive.push(JSON.stringify(item));\r\n                    }\r\n\r\n                    return beginswith.concat(caseSensitive, caseInsensitive)\r\n\r\n                },\r\n                highlighter: function (obj) {\r\n                    var item = JSON.parse(obj);\r\n                    var query = this.query.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\r\n                    var out;\r\n\r\n                    if (attrs[\"restrict\"] == \"Predicate\") {\r\n                        out = new utils.Predicate(item.lookup).ToString().replace(new RegExp('(' + query + ')', 'ig'), function ($1, match) {\r\n                            return '<strong>' + match + '</strong>'\r\n                        });\r\n\r\n                    }\r\n                    else {\r\n                      \r\n                        out = item.lookup.replace(new RegExp('(' + query + ')', 'ig'), function ($1, match) {\r\n                            return '<strong>' + match + '</strong>'\r\n                        }) + \" <div style='float:right;margin-left:8px;color:#ccc'>\" + item.class + \"</div>\";\r\n                       \r\n                    }\r\n\r\n                    return out;\r\n                },\r\n                updater: function (obj) {\r\n\r\n                    itemSelected = true;\r\n\r\n                    var item = JSON.parse(obj);\r\n\r\n                    $scope.$apply(function () {\r\n\r\n                        if (attrs[\"choice\"]) {\r\n                            $scope.choice = item;\r\n                            //if (attrs[\"clearonselect\"]) {\r\n                            //    $scope.choice = undefined;\r\n                            //    $scope.text = \"\";\r\n                            //}\r\n                        }\r\n\r\n                        if (attrs[\"onselected\"]) {\r\n                            $scope.onselected({ item: item });\r\n                        }\r\n\r\n                    });\r\n\r\n\r\n                    if (!attrs[\"clearonselect\"]) {\r\n   \r\n                        return item.lookup;\r\n                    }\r\n\r\n                }\r\n            });\r\n\r\n            var itemSelected = false;\r\n\r\n\r\n            $input.on('keydown', function (e) {\r\n                itemSelected = false;\r\n                if (e.keyCode == 13) {//enter\r\n\r\n                    setTimeout(function () {\r\n\r\n                        $scope.$apply(function () {\r\n                            if (!itemSelected) {\r\n                                $scope.text = $input.val();\r\n                                $input.val('');\r\n                            }\r\n                        });\r\n\r\n\r\n                    }, 100);\r\n\r\n                \r\n\r\n                }\r\n\r\n            });\r\n\r\n            function getSource() {\r\n\r\n                if (attrs[\"restrict\"] == \"Type\") {\r\n                    //convert types object to array\r\n                    var source = [];\r\n                    for (var key in utils.types) {\r\n                        source.push(JSON.stringify(utils.types[key]));\r\n                    }\r\n                    return source;\r\n                }\r\n                else if (attrs[\"restrict\"] == \"Predicate\") {\r\n                    //convert predicates object to array\r\n                    var source = [];\r\n                    for (var key in utils.predicates) {\r\n                        source.push(JSON.stringify(utils.predicates[key]));\r\n                    }\r\n\r\n                    return source;\r\n                  \r\n                }\r\n                else return nodeSource;\r\n\r\n            }\r\n\r\n            //Globals & users or one or the other depending on value of restrict\r\n            var nodeSource = function (query, process) {\r\n\r\n                if ($scope.restrict && $.isArray($scope.restrict) && $scope.restrict.lenth > 0) {\r\n\r\n                    if ($scope.restrict[0].lookup) {\r\n                        return $scope.restrict.map(function (d) { return JSON.stringify(d); });\r\n                    }\r\n                    else {\r\n                        return $scope.restrict.map(function (d) { return JSON.stringify({ lookup: d }); });\r\n                    }\r\n                }\r\n                else {\r\n                    nodeService.search(query, attrs[\"restrict\"]).then(function (nodes) {\r\n\r\n                        console.log(nodes);\r\n                        process(nodes.map(function (d) {\r\n                            return JSON.stringify(d);\r\n                        }));\r\n                    });\r\n                }\r\n\r\n            }\r\n\r\n            $scope.$watch('restrict', function () {\r\n                $input.data('typeahead').source = getSource();\r\n            }, true);\r\n\r\n\r\n\r\n        }\r\n    };\r\n}]);\r\n","angular.module('neograph.common.typeaheadSimple',[])\r\n.directive('typeaheadSimple', [function () {\r\n    return {\r\n        restrict: 'E',\r\n        replace: true,\r\n        scope: {\r\n            ngModel: '=?',   //the choice should be an object for 2 way binding with Lookup property\r\n            source: '='\r\n        },\r\n        template: '<input type=\"text\" />',\r\n        link: function ($scope, element, attrs) {\r\n\r\n            var placeholderDefault = \"\";\r\n\r\n            var $input = $(element);//.find('input');\r\n            $input.attr(\"placeholder\", attrs[\"placeholder\"] || placeholderDefault);\r\n\r\n\r\n            $input.typeahead({\r\n                source: $scope.source,\r\n                updater: function (item) {\r\n\r\n\r\n                    $scope.$apply(function () {\r\n\r\n\r\n                        $scope.ngModel = item;\r\n\r\n\r\n                    });\r\n\r\n\r\n\r\n                    return item;\r\n\r\n\r\n                }\r\n            });\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n    };\r\n}]);\r\n","angular.module('neograph.edge',['neograph.neo', 'neograph.utils','ui.router'])\r\n    .config(function($stateProvider){\r\n         $stateProvider.state('admin.main.edge',{\r\n            url:'/edge/:edge',\r\n            //abstract:true,\r\n            views:{\r\n                    'edgeHeader@admin':{\r\n                        controller:function ($scope,$stateParams) {\r\n                            if ($stateParams.edge){\r\n                                $scope.edge=JSON.parse($stateParams.edge);\r\n                            }\r\n                        },\r\n                        templateUrl:'app/edge/edge.header.html'\r\n                    }\r\n                    ,\r\n                      'edge@admin':{\r\n                        controller:function($scope){\r\n                             $scope.tabs = [\"Properties\"];\r\n                             $scope.selectedTab = \"Properties\";\r\n                             $scope.selectTab = function (tab) {\r\n                                    $scope.selectedTab = tab;\r\n                                }\r\n                        }\r\n                        ,\r\n                        templateUrl:'app/edge/edge.html'\r\n                    }\r\n            }\r\n            \r\n        })\r\n        .state('admin.main.edge.view',{\r\n            url:'/view',\r\n            views:{\r\n                     'properties@admin.main.edge':{\r\n                        templateUrl:'app/edge/properties.html',\r\n                        controller:function ($scope,$stateParams) {\r\n                            if ($stateParams.edge){\r\n                                $scope.edge=JSON.parse($stateParams.edge);\r\n                            }\r\n                        }\r\n                    }\r\n            }\r\n            \r\n        })\r\n        .state('admin.main.edge.edit',{\r\n            url:'/edit',\r\n            views:{\r\n          \r\n                    'editproperties@admin.main.edge':{\r\n                       templateUrl:'app/edge/properties.edit.html',\r\n                       controller:'EditEdgeCtrl'\r\n                    }\r\n                    \r\n            }\r\n            \r\n        });\r\n      \r\n    })\r\n\r\n    .controller('EditEdgeCtrl', function (neo, utils,$stateParams,$scope) {\r\n   \r\n            \r\n           if ($stateParams.edge){\r\n                $scope.edge=JSON.parse($stateParams.edge);\r\n                $scope.predicateType = utils.predicates[$scope.edge.type];\r\n           }\r\n\r\n           $scope.$watch(\"predicateType\", function (predicateType) {\r\n               if (predicateType) {\r\n                   $scope.edge.type = predicateType.Lookup;\r\n               }\r\n           });\r\n\r\n           $scope.deleteEdge = function (e) {\r\n\r\n               neo.deleteEdge(e,\r\n                           $scope.activeView.data.nodes[e.startNode],\r\n                           $scope.activeView.data.nodes[e.endNode])\r\n                   .then(function () {\r\n\r\n\r\n                       //let view handle its own data ?\r\n                       delete $scope.activeView.data.edges[e.id];\r\n                       if ($scope.selection.selectedEdge && $scope.selection.selectedEdge.id === e.id) {\r\n                           $scope.selection.selectedEdge = null;\r\n                       }\r\n\r\n                       $scope.publish(\"deleted\", { selection: { edges: [e] } });\r\n\r\n                   });\r\n\r\n           }\r\n\r\n           $scope.saveEdge = function (e) {\r\n\r\n               neo.saveEdge(e)\r\n               .then(\r\n                   function (g) {\r\n\r\n                       $scope.publish(\"dataUpdate\", g)\r\n\r\n                       //update cache\r\n                       for (key in g.nodes) {\r\n                           $scope.activeView.data.nodes[key] = g.nodes[key];\r\n                       }\r\n\r\n                       for (key in g.edges) {\r\n                           $scope.activeView.data.edges[key] = g.edges[key];\r\n\r\n                           if ($scope.selection.selectedEdge && (key === $scope.selection.selectedEdge.id || !$scope.selection.selectedEdge.id)) {\r\n                               $scope.selection.selectedEdge = g.edges[key];\r\n                           }\r\n\r\n                       }\r\n                   });\r\n           }\r\n\r\n});\r\n    \r\n","angular.module('neograph.interaction.draggable',[])\r\n    .directive('draggable', function () {\r\n    return {\r\n\r\n        link: function ($scope, element, attrs) {\r\n          \r\n            var initLeft = $(element).position().left;\r\n\r\n            $(element).draggable({ \r\n                axis: \"x\" ,  \r\n                drag: function() {\r\n                \r\n                    var change = initLeft - $(element).position().left;\r\n                  \r\n                    $scope.$apply(function () {\r\n                        $scope.window.tabsWidth = $scope.window.tabsWidth + change;\r\n                    });\r\n                   \r\n\r\n                    initLeft = $(element).position().left;\r\n\r\n                    }\r\n            });\r\n        }\r\n    };\r\n});\r\n","angular.module('neograph.interaction',[\r\n    'neograph.interaction.draggable',\r\n    'neograph.interaction.resizable',\r\n    'neograph.interaction.selectable'\r\n])","angular.module('neograph.interaction.resizable',[])\r\n.directive('resizable', function ($window) {\r\n    return {\r\n        scope: {\r\n            window: '='\r\n        },\r\n        controller: function ($scope, $element) {\r\n\r\n            var w = angular.element($window);\r\n            var getWindowDimensions = function () {\r\n                var width = w.width();\r\n                var height = w.height();\r\n                return {\r\n                    'height': height,\r\n                    'width': width,\r\n                    'tabsWidth': $scope.window.tabsWidth,\r\n                    'tabsWidthInner': $scope.window.tabsWidth-10,\r\n                    'graphWidth': width - $scope.window.tabsWidth,\r\n                    'graphHeight': height - $scope.window.topBarHeight,\r\n                    'topBarHeight': $scope.window.topBarHeight,\r\n                    'tabsHeight': height - $scope.window.topBarHeight\r\n                };\r\n            };\r\n\r\n            $scope.window = getWindowDimensions();\r\n\r\n            $scope.$watch(getWindowDimensions, function (newValue, oldValue) {\r\n\r\n                $scope.window = newValue;\r\n\r\n            }, true);\r\n\r\n            w.bind('resize', function () {\r\n                $scope.$apply();\r\n            });\r\n   \r\n            //w.bind(\"debouncedresize\", function (event) {\r\n            //    $scope.$apply();\r\n\r\n            //});\r\n\r\n        }\r\n    }\r\n});\r\n\r\n","angular.module('neograph.interaction.selectable',[])\r\n.directive('selectable', function () {\r\n    return {\r\n        scope: {\r\n            selected: '='\r\n\r\n        },\r\n        link: function ($scope, element, attrs) {\r\n\r\n            $scope.$watch($(element).find(\"li.ui-selected\").length, function (i) {\r\n\r\n\r\n\r\n\r\n\r\n\r\n                $(element).selectable({\r\n                    filter: \"li\",\r\n                    stop: function (event, ui) {\r\n\r\n\r\n                        var selected = [];\r\n\r\n\r\n                        $(element).find(\"li.ui-selected\").each(function (i, e) {\r\n                            selected.push(parseInt($(e).attr(\"nodeindex\")));\r\n                        });\r\n\r\n                        $scope.$apply(function () {\r\n\r\n                            $scope.selected = selected;\r\n\r\n                        });\r\n\r\n                    }\r\n                    ,\r\n                    cancel: '.badge, .label'\r\n\r\n\r\n\r\n                });\r\n\r\n\r\n            });\r\n\r\n\r\n        }\r\n    }\r\n});\r\n\r\n\r\n\r\n\r\n\r\n","angular.module('neograph.layout',[])\r\n.directive('tabs', function () {\r\n    return {\r\n        restrict: 'E',\r\n        transclude: true,\r\n        scope: {\r\n            tabs:'=',//required to remove panes no longer available\r\n            selected: '=?'\r\n        },\r\n        controller: function ($scope) {\r\n            var panes = $scope.panes = [];\r\n            var self = this;\r\n\r\n            $scope.select = function (pane) {\r\n                angular.forEach(panes, function (pane) {\r\n                    pane.selected = false;\r\n                });\r\n                pane.selected = true;\r\n                $scope.selected = pane.key;\r\n            };\r\n\r\n            this.add = function (pane) {\r\n                if (panes.length === 0) {\r\n                    $scope.select(pane);\r\n                }\r\n                panes.push(pane);\r\n            };\r\n\r\n            this.remove = function (pane) {\r\n                //console.log('remove')\r\n                //console.log(pane);\r\n                angular.forEach(panes, function (p, i) {\r\n                    if (pane.key == p.key) {\r\n                        panes.splice(i, 1);\r\n                        if (pane.selected) {\r\n                            pane.selected = false;\r\n                            $scope.select($scope.panes[0]);\r\n                        }\r\n\r\n\r\n                    }\r\n                });\r\n\r\n            }\r\n\r\n            $scope.$watch('selected', function (key) {//the title of the selected pane\r\n               \r\n                if (key) {\r\n                    angular.forEach(panes, function (pane) {\r\n                       \r\n                        pane.selected = pane.key === key;\r\n                    });\r\n                }\r\n\r\n            });\r\n\r\n\r\n            //remove tabs not in list (child pane only adds them)\r\n            $scope.$watch('tabs', function (tabs) {//the title of the selected pane\r\n\r\n                if (tabs) {\r\n                    angular.forEach(panes, function (pane) {\r\n\r\n                        if (tabs.indexOf(pane.key) === -1) {\r\n\r\n                            self.remove(pane);\r\n                        }\r\n                    });\r\n                }\r\n\r\n            });\r\n\r\n\r\n        },\r\n        templateUrl: 'app/layout/tabs.html'\r\n    };\r\n})\r\n.directive('tabPane', function () {\r\n    return {\r\n        require: '^tabs',\r\n        restrict: 'E',\r\n        transclude: true,\r\n        scope: {\r\n            key:'@',\r\n            title: '=',\r\n            visible: '=',\r\n            active: '=?',\r\n            window:'='\r\n        },\r\n        link: function ($scope, element, attrs, tabsCtrl) {\r\n\r\n\r\n               tabsCtrl.add($scope);\r\n\r\n\r\n            //$scope.$watch('visible', function (visible) {\r\n\r\n            //    if (visible) {\r\n            //        tabsCtrl.addPane($scope);\r\n            //    }\r\n            //    else {\r\n            //        tabsCtrl.removePane($scope);\r\n\r\n            //    }\r\n\r\n            //});\r\n\r\n         \r\n            $scope.$watch('active', function (active) {//the title of the selected pane\r\n\r\n                $scope.selected = active;\r\n             \r\n            });\r\n\r\n\r\n        },\r\n        templateUrl: 'app/layout/tabPane.html'\r\n    };\r\n})\r\n.directive('noBubble', function () {\r\n    return {\r\n\r\n        link: function ($scope, element, attrs, tabsCtrl) {\r\n\r\n\r\n            \r\n            $(element).on('keydown', function (event) {\r\n  \r\n                event.stopPropagation()\r\n            });\r\n\r\n        },\r\n        templateUrl: 'app/layout/tabPane.html'\r\n    };\r\n\r\n\r\n});","  angular.module(\"neograph.models.node\",[\"neograph.models.predicate\"])\r\n  .factory(\"nodeFactory\",function(predicateFactory){\r\n      \r\n    function Node(data){\r\n        \r\n        this.labels=[];\r\n         \r\n        Object.assign(this,data);\r\n\r\n        //instead i think i should call the service to get the reverse\r\n        for (var relKey in this.relationships) {\r\n            var rel = this.relationships[relKey];\r\n            rel.predicate = predicateFactory.create(rel.predicate);\r\n        }\r\n        \r\n        if (!this.label && this.lookup){\r\n            this.label = this.lookup;\r\n        }\r\n                        \r\n        \r\n    }\r\n        \r\n    Node.prototype.isPicture = function(){\r\n        \r\n        return this.labels.indexOf(\"Picture\") > -1;\r\n\r\n    };\r\n    \r\n     Node.prototype.isPerson = function(){\r\n        \r\n        return this.labels.indexOf(\"Person\") > -1;\r\n\r\n    };\r\n    \r\n     Node.prototype.isProperty = function(){\r\n        \r\n        return this.labels.indexOf(\"Property\") > -1;\r\n\r\n    };\r\n    \r\n     \r\n    \r\n    Node.prototype.isCustomField = function(key){\r\n    \r\n            return key != 'lookup' \r\n            && key != 'class' \r\n            && key != 'label' \r\n            && key != 'description' \r\n            && key != 'text' && \r\n            key != 'name' && \r\n            key != 'systemInfo' &&\r\n            key != 'labels' &&\r\n            key != 'id' &&\r\n            key != 'created' &&\r\n            key != 'image' &&\r\n            key != 'relationships' &&\r\n            key != 'labelled';\r\n  \r\n    }\r\n    \r\n\r\n    return {\r\n        create:function(data){\r\n            return new Node(data);\r\n        }\r\n    }\r\n        \r\n      \r\n  });\r\n  \r\n  \r\n  ","  angular.module(\"neograph.models.predicate\",[])\r\n  .factory(\"predicateFactory\",function(){\r\n      \r\n      function Predicate(data){\r\n          \r\n        Object.assign(this,data);\r\n        \r\n    }\r\n        \r\n    Predicate.prototype.setDirection = function(direction){\r\n        this.direction = direction;\r\n        return this;\r\n    };\r\n \r\n    Predicate.prototype.toString = function(){\r\n        if (this.direction===\"in\" && !this.symmetrical){\r\n             if (this.reverse){//use reverse if present\r\n                return this.reverse.replace(/_/g, ' ').toLowerCase();\r\n            }\r\n            else{\r\n                var lookup = this.lookup.toUpperCase();\r\n                if (lookup === \"CREATED\" || lookup===\"CREATES\")\r\n                    return \"created by\";\r\n                else if (lookup === \"INFLUENCES\")\r\n                    return \"influenced by\";\r\n                else if (lookup === \"INSPIRES\")\r\n                    return \"inspired by\";\r\n                else if (lookup === \"ANTICIPATES\")\r\n                    return \"anticipated by\";\r\n                else if (lookup === \"DEVELOPS\")\r\n                    return \"developed by\";\r\n                else if (lookup === \"DEPICTS\")\r\n                    return \"depicted by\";\r\n                else if (lookup === \"TYPE_OF\")\r\n                    return \"type(s)\";\r\n                else\r\n                    return \"(\" + this.lookup.replace(/_/g, ' ').toLowerCase() + \")\";\r\n            }\r\n        }\r\n        \r\n       // if (!this.isDirectional || !this.direction || this.direction === \"out\") {\r\n       return this.lookup.replace(/_/g, ' ').toLowerCase();\r\n       \r\n        \r\n    };\r\n    \r\n    Predicate.prototype.flip = function () {\r\n    \r\n        if (!this.isDirectional) {\r\n            return;\r\n        }\r\n        if (this.direction === \"in\") {\r\n            this.setDirection(\"out\");\r\n        }\r\n        else {\r\n            this.setDirection(\"in\");\r\n        }\r\n        return this;\r\n\r\n    };\r\n\r\n    return {\r\n        create:function(data){\r\n            return new Predicate(data);\r\n        }\r\n    }\r\n        \r\n      \r\n  });\r\n  \r\n  \r\n  ","angular.module('neograph.neo.client',['ngResource','neograph.settings'])\r\n.factory(\"neoClient\", ['$resource','settings', function ($resource,settings) {\r\n    //return $resource('http://localhost:1337/node/match', {txt:'@txt',restrict:'@restrict'}, {\r\n    //    matchNodes: {\r\n    //        method: 'POST',\r\n    //        isArray:true\r\n    //    }\r\n    //});\r\n\r\n    //return $resource(null,null, {\r\n    //    matchNodes: {\r\n    //        url: 'http://localhost:1337/node/match',\r\n    // //       params: {txt:'',restrict:''},\r\n    //        method: 'POST',\r\n    //        isArray: true\r\n    //    }\r\n    //});\r\n\r\n    var root = settings.apiRoot;\r\n\r\n    return {\r\n\r\n        node:$resource(null,null, {\r\n            search: {\r\n                url: root+'/search',\r\n            \r\n                method: 'POST',\r\n                isArray: true\r\n            }\r\n            ,\r\n            get: {\r\n                url: root+'/node/get/:id',\r\n                method: 'GET',\r\n            }\r\n            ,\r\n            getWithRels: {\r\n                url: root + '/node/getWithRels/:id',\r\n                method: 'GET',\r\n            }\r\n                   ,\r\n            getRelationships: {\r\n                url: root + '/node/relationships/:id',\r\n                method: 'GET',\r\n            }\r\n            ,\r\n            getOne: {\r\n                url: root + '/node/single',\r\n                method: 'POST',\r\n            }\r\n            ,\r\n            getList: {\r\n                url: root + '/node/list',\r\n                method: 'POST',\r\n                isArray:true\r\n            }\r\n            ,\r\n            save: {\r\n                url: root + '/node/save',\r\n        \r\n                method: 'POST'\r\n            },\r\n            saveProps: {\r\n                url: root + '/node/saveProps',\r\n          \r\n                method: 'POST'\r\n            },\r\n            saveRels: {\r\n                url: root + '/node/saveRels',\r\n        \r\n                method: 'POST'\r\n            },\r\n            saveWikipagename: {\r\n                url: root + '/node/saveWikipagename',\r\n        \r\n                method:'POST'\r\n            }\r\n            ,\r\n            saveMultiple: {\r\n                url: root + '/node/saveMultiple',\r\n           \r\n                method: 'POST'\r\n            }\r\n            ,\r\n            del: {\r\n                url: root + '/node/delete',\r\n          \r\n                method: 'POST'\r\n            }\r\n            ,\r\n            destroy: {\r\n                url: root + '/node/destroy',\r\n          \r\n                method: 'POST'\r\n            },\r\n            restore: {\r\n                url: root + '/node/restore',\r\n\r\n                method: 'POST'\r\n            }\r\n            ,\r\n            getProps: {\r\n                url: root + '/node/getProps',\r\n\r\n                method: 'POST'\r\n\r\n            }\r\n               ,\r\n            getImages: {\r\n                url: root + '/node/getImages',\r\n                isArray:true,\r\n                method: 'POST'\r\n\r\n            }\r\n                \r\n\r\n\r\n        }),\r\n        edge: $resource(null, null, {\r\n            save: {\r\n                url: root + '/edge/save',\r\n                method: 'POST'\r\n            }\r\n            ,\r\n            del: {\r\n                url: root + '/edge/delete',\r\n                method: 'POST'\r\n\r\n            }\r\n            ,\r\n            getImageRelationships: {\r\n                url: root + '/edge/imagerelationships',\r\n                method: 'POST'\r\n            }\r\n        })\r\n        ,\r\n        user:$resource(null, null, {\r\n            saveFavourite: {\r\n                url: root + '/user/saveFavourite',\r\n        \r\n                method: 'POST'\r\n              \r\n            },\r\n            get: {\r\n                url: root + '/user/:user',\r\n                method: 'GET'\r\n            }\r\n        })\r\n        ,\r\n        graph: $resource(null, null, {\r\n            get: {\r\n                url: root + '/graph',\r\n     \r\n                method: 'POST'\r\n            }\r\n        })\r\n            ,\r\n        type: $resource(null, null, {\r\n            getAll: {\r\n                url: root + '/types',\r\n                method: 'GET'\r\n            }\r\n        })\r\n        ,\r\n       predicate: $resource(null, null, {\r\n            getAll: {\r\n                url: root + '/predicates',\r\n                method: 'GET'\r\n            }\r\n        })\r\n        ,\r\n        utils:$resource(null, null, {\r\n            getDistinctLabels: {\r\n                url: root + '/utils/distinctLabels',\r\n                isArray:true,\r\n                method: 'POST'\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n}])\r\n","angular.module(\"neograph.neo\",[\"neograph.utils\",\"neograph.neo.client\"])\r\n.factory(\"neo\", [\"neoClient\",  \"utils\",function (neoClient, utils) {\r\n\r\n\r\n    var that = {\r\n \r\n        getGraph: function (q,returnArray) {\r\n\r\n            return neoClient.graph.get({ q: q, returnArray: returnArray }).$promise.then(function (data) {\r\n\r\n                var out = data.toJSON();\r\n                console.dir(out);\r\n                return out;\r\n\r\n            });\r\n        }\r\n       ,\r\n        //returns all relationships between supplied nodes, which can be vis.Dataset or graph data object\r\n        getAllRelationships: function (nodes) {\r\n            var nodeIds = \"\";\r\n\r\n            if (nodes.getIds) //if vis.DataSet\r\n            {\r\n                nodeIds = nodes.getIds({ returnType: 'Array' }).join(\",\");\r\n            }\r\n            else { //otherwise data object\r\n\r\n                for (var key in nodes) {\r\n                    if (nodeIds.length) {\r\n                        nodeIds += \",\";\r\n                    }\r\n                    nodeIds += key;\r\n                }\r\n            }\r\n\r\n            var q = \"MATCH a -[r]- b WHERE id(a) IN[\" + nodeIds + \"] and id(b) IN[\" + nodeIds + \"] and not (a-[:TYPE_OF]-b) return r\";\r\n\r\n            return that.getGraph(q);\r\n\r\n        }\r\n  \r\n             ,\r\n        getRelationships: function (id) {\r\n\r\n                return neoClient.node.getRelationships({ id: id }).$promise.then(function (data) {\r\n                    return data.toJSON();\r\n                });\r\n            \r\n\r\n        }\r\n\r\n        ,\r\n        saveMultiple: function (multiple) {\r\n\r\n        \r\n            return neoClient.node.saveMultiple({ multiple: multiple }).$promise.then(function (data) {\r\n                return data.toJSON();\r\n            });\r\n\r\n\r\n        }\r\n           ,\r\n        //saves edge to neo (update/create)\r\n        //TODO: according to certain rules labels will need to be maintained when relationships are created. (update not required as we always delete and recreate when changing start/end nodes)\r\n        //tag a with label b where:\r\n        // a=person and b=provenance (eg painter from france)\r\n        // a=person and n=group, period (eg painter part of les fauves / roccocco)\r\n        // a=picture and b=non-person (eg picture by corot / of tree) - although typically this will be managed through labels directly (which will then in turn has to keep relationships up to date)\r\n        saveEdge: function (e) {//startNode and endNode provide the full node objects for the edge\r\n\r\n            return neoClient.edge.save({ edge: e }).$promise.then(function (data) {\r\n                return data.toJSON();\r\n            });\r\n        }\r\n        ,\r\n        saveFavourite: function (node, user) {\r\n\r\n           \r\n            return neoClient.user.saveFavourite({ user: user, node: node }).$promise.then(function (data) {\r\n                return data.toJSON();\r\n            });\r\n\r\n\r\n        }\r\n\r\n        ,\r\n        deleteEdge: function (edge) {\r\n\r\n            if (edge && edge.id) {\r\n\r\n                return neoClient.edge.delete({ edge: edge }).$promise.then(function (data) {\r\n                    return data.toJSON();\r\n                });\r\n            \r\n\r\n            }\r\n\r\n        }\r\n        ,\r\n        getUser: function (userLookup) {\r\n          \r\n            return neoClient.user.get({ user: userLookup }).$promise.then(function (data) {\r\n        \r\n                return data.toJSON();\r\n            });\r\n\r\n        }\r\n        ,\r\n\r\n        getOne: function (q) {//q must be a match return a single entity n\r\n\r\n          \r\n\r\n            return neoClient.node.getOne({ q: q }).$promise.then(function (data) {\r\n                return data.toJSON();\r\n            });\r\n\r\n        }\r\n\r\n     ,\r\n        getImageRelationships: function (edge) { //loks up id/label first then call get by label\r\n\r\n            return neoClient.edge.getImageRelationships({ edge: edge }).$promise.then(function (data) {\r\n                return data.toJSON();\r\n            });\r\n\r\n        }\r\n\r\n        ,\r\n        //Alternatively i could query the actual labels and merge them into a distinct array\r\n        getDistinctLabels: function (labels) {\r\n\r\n          \r\n            return neoClient.utils.getDistinctLabels({ labels: labels }).$promise;//returns array\r\n            \r\n\r\n\r\n        }\r\n        ,\r\n        getDistinctLabelsQuery: function (q) {\r\n\r\n            return neoClient.utils.getDistinctLabels({ q: q }).$promise;//returns array\r\n\r\n        }\r\n\r\n    }\r\n\r\n    return that;\r\n\r\n}]);\r\n","angular.module('neograph.session',['neograph.neo'])\r\n    .factory('session', ['neo', '$q', function (neo, $q) {\r\n\r\n    var anonUser = {\r\n        Lookup: 'Anonymous',\r\n        roles: { \"Public\": {}}\r\n    }\r\n\r\n\r\n    var session = {\r\n\r\n        init: function () {\r\n\r\n            neo.getUser(\"Julian\").then(function (user) {\r\n\r\n                session.user = user;\r\n                session.signedIn = true;\r\n            });\r\n\r\n            return session;\r\n\r\n        }\r\n        ,\r\n        signingIn: false\r\n        ,\r\n        signedIn: false\r\n        ,\r\n        user: anonUser\r\n        ,\r\n        signIn: function (username, password) {\r\n\r\n            return neo.authenticate(username, password).then(function (user) {\r\n\r\n                session.user = user;\r\n\r\n\r\n                console.log(session.user)\r\n             //   session.apps = service.getApps(session.user.roles);\r\n\r\n\r\n                localStorage.username = session.user.username;\r\n\r\n\r\n                session.signedIn = true;\r\n\r\n                if (user.roles.PreReg) {\r\n                    $('body').addClass('prereg');\r\n                }\r\n                else {\r\n                    $('body').removeClass('prereg');\r\n                }\r\n\r\n\r\n\r\n            }, function (failMessage) {\r\n                console.log(failMessage);\r\n                return $q.reject(failMessage);\r\n            });\r\n\r\n        }\r\n        ,\r\n        signOut: function () {\r\n\r\n            session.user = anonUser;\r\n            localStorage.username = \"\";// = JSON.stringify(session.user);\r\n            session.signedIn = false;\r\n          //  session.apps = service.getApps(session.user.roles);\r\n\r\n        }\r\n    }\r\n\r\n\r\n\r\n    if (localStorage.username) {\r\n        session.user = neo.getUser(localStorage.username);\r\n    }\r\n\r\n    if (session.user.name != 'Anonymous') {\r\n        session.signedIn = true;\r\n    }\r\n\r\n //   session.apps = service.getApps(session.user.roles);\r\n\r\n    return session.init();\r\n\r\n\r\n}])","angular.module(\"neograph.utils\",[\"neograph.neo.client\",\"neograph.query.presets\"])\r\n    .factory(\"utils\", [\"neoClient\",\"queryPresets\", function (neoClient,presets) {\r\n\r\n\r\n    Array.prototype.diff = function (a) {\r\n        return this.filter(function (i) { return a.indexOf(i) < 0; });\r\n    };\r\n\r\n    Array.prototype.ids = function () {\r\n        return this.map(function (e) { return e.id });\r\n    }\r\n\r\n    Array.prototype.hasAny = function (a) {\r\n        return this.filter(function (i) { return a.indexOf(i) > -1; }).length > 0;\r\n    };\r\n\r\n    Array.prototype.unique = function () {\r\n        var a = [];\r\n        for (i = 0; i < this.length; i++) {\r\n            var current = this[i];\r\n            if (a.indexOf(current) < 0) a.push(current);\r\n        }\r\n        return a;\r\n    }\r\n\r\n  \r\n\r\n\r\n   \r\n \r\n  \r\n\r\n    var utils = {\r\n\r\n        init: function () {\r\n\r\n            utils.refreshTypes();\r\n            utils.refreshPredicates();\r\n            return utils;\r\n\r\n\r\n        }\r\n        ,\r\n        types: {}\r\n     \r\n        ,\r\n        predicates: {}\r\n        ,\r\n        isType: function (label) {\r\n            return utils.types[label] != undefined;\r\n        }\r\n        ,\r\n        refreshTypes: function () {\r\n\r\n            return neoClient.type.getAll().$promise.then(function (types) {\r\n                utils.types = types;\r\n                return types;\r\n            });\r\n        }\r\n    ,\r\n        refreshPredicates: function () {//consider creating lookup nodes for relationship types so that i can store properties for them\r\n\r\n            return neoClient.predicate.getAll().$promise.then(function (predicates) {\r\n                utils.predicates = predicates.toJSON();\r\n               // console.log(utils.predicates);\r\n                return utils.predicates;\r\n            });\r\n\r\n  \r\n\r\n\r\n        }\r\n     ,\r\n        isSystemInfo: function (label) {\r\n\r\n            return label == \"Global\" || label == \"Type\" || label == \"Label\" || label == \"SystemInfo\";\r\n\r\n        },\r\n        getLabelClass: function (node, label) {\r\n\r\n\r\n\r\n\r\n\r\n            if (node && label === node.Type) {\r\n                return 'label-warning';\r\n            }\r\n\r\n            if (utils.isSystemInfo(label)) {\r\n                return 'label-system';\r\n            }\r\n\r\n            if (utils.isType(label)) {\r\n                return 'label-inverse pointer';\r\n            }\r\n\r\n\r\n            return 'label-info';\r\n\r\n        }\r\n\r\n        ,\r\n        personTypes: ['Painter',\r\n                'Illustrator',\r\n                'Philosopher',\r\n                'Poet',\r\n                'FilmMaker',\r\n               'Sculptor',\r\n                'Writer',\r\n               'Patron',\r\n                 'Leader',\r\n                 'Explorer',\r\n                 'Composer',\r\n                'Scientist',\r\n                'Caricaturist',\r\n                 'Mathematician']\r\n        ,\r\n        pictureTypes: ['Painting', 'Illustration', 'Drawing', 'Print']\r\n        ,\r\n        isPerson: function (type) {\r\n\r\n            return type == 'Painter' ||\r\n                type == 'Illustrator' ||\r\n                type == 'Philosopher' ||\r\n                type == 'Poet' ||\r\n                type == 'FilmMaker' ||\r\n                type == 'Sculptor' ||\r\n                type == 'Writer' ||\r\n                type == 'Patron' ||\r\n                type == 'Leader' ||\r\n                type == 'Explorer' ||\r\n                type == 'Composer' ||\r\n                type == 'Scientist' ||\r\n                type == 'Caricaturist' ||\r\n                type == 'Mathematician';\r\n\r\n        }\r\n\r\n      \r\n            //mopve to 'state' object\r\n            ,\r\n            tabSettings: {}\r\n            ,\r\n            selectedTab:\"Properties\"\r\n \r\n      \r\n\r\n\r\n    }\r\n    return utils.init();\r\n\r\n}]);\r\n","angular.module('neograph.node',[\r\n    'neograph.node.graphpanel',\r\n    'neograph.node.favourites',\r\n    'neograph.node.freebase',\r\n    'neograph.node.graphpanel',\r\n    'neograph.node.images',\r\n    'neograph.node.wikipedia',\r\n    'neograph.node.multiple',\r\n    'neograph.node.service',\r\n    'neograph.node.properties',\r\n    'neograph.node.relationships',\r\n    'ui.router'\r\n    \r\n])\r\n.config(function($stateProvider){\r\n    $stateProvider\r\n        .state('admin.main.node',{\r\n            url:'/node/:node',\r\n            //abstract:true,\r\n            views:{\r\n                    'nodeHeader@admin':{\r\n                        controller:'NodeHeaderCtrl',\r\n                        templateUrl:'app/node/node.header.html'\r\n                    }\r\n                     ,\r\n                      'node@admin':{\r\n                        controller:'NodeCtrl',\r\n                        templateUrl:'app/node/node.html'\r\n                    }\r\n                    ,\r\n                      'nodeimages@admin':{\r\n                        controller:'NodeImagesCtrl',\r\n                        templateUrl:'app/node/images/node.images.html'\r\n                    }\r\n             \r\n            }\r\n            \r\n        })\r\n        .state('admin.main.node.view',{\r\n            url:'/view',\r\n            views:{\r\n                     'properties@admin.main.node':{\r\n                        templateUrl:'app/node/properties/node.properties.html',\r\n                        controller:function ($scope,$stateParams,nodeService) {\r\n                            if ($stateParams.node){\r\n                                nodeService.get($stateParams.node,true).then(function(node){\r\n                                        $scope.node = node;\r\n                                    }); \r\n                            }\r\n                        }\r\n                    }\r\n                    ,\r\n                     'relationships@admin.main.node':{\r\n                        templateUrl:'app/node/relationships/node.relationships.html',\r\n                        controller:function ($scope,$stateParams,nodeService) {\r\n                            if ($stateParams.node){\r\n                                nodeService.get($stateParams.node,true).then(function(node){\r\n                                        $scope.node = node;\r\n                                        console.log(node);\r\n                                    }); \r\n                            }\r\n                        }\r\n                    }\r\n            }\r\n            \r\n        })\r\n        .state('admin.main.node.edit',{\r\n            url:'/edit',\r\n            views:{\r\n          \r\n                    'editproperties@admin.main.node':{\r\n                       templateUrl:'app/node/properties/node.properties.edit.html',\r\n                       controller:'EditPropertiesCtrl'\r\n                    },\r\n                       'editrelationships@admin.main.node':{\r\n                       templateUrl:'app/node/relationships/node.relationships.edit.html',\r\n                       controller:'EditRelationshipsCtrl'\r\n                    }\r\n                    \r\n            }\r\n            \r\n        });\r\n})\r\n.controller('NodeSearchCtrl',function($scope,$state,nodeService){\r\n        \r\n    $scope.selection = {\r\n        selectedNode: null,\r\n        selectedEdge: null,\r\n        hoverNode: null\r\n    }\r\n        \r\n     $scope.$watch('nodeLookup', function (n) {\r\n\r\n        if (n && n.id) {\r\n             nodeService.get(n.label,true).then(function(node){\r\n                 $scope.selection.selectedNode = node;\r\n                 $state.go('admin.main.node.view',{node:n.label});\r\n             })    \r\n          \r\n        }\r\n    });\r\n    \r\n    $scope.newNode = function () {\r\n\r\n        var newNode = {\r\n            id: -1,\r\n            labels: [],\r\n            Type: \"\",\r\n            temp: {\r\n                tabs: [\"Properties\"]\r\n            }\r\n        }\r\n\r\n        if ($scope.nodeLookupText && (!$scope.selection.selectedNode || $scope.nodeLookupText != $scope.selection.selectedNode.Lookup)) {\r\n            newNode.Lookup = $scope.nodeLookupText;\r\n        }\r\n\r\n        $scope.selection.selectedNode = newNode;\r\n        $scope.tabs = $scope.selection.selectedNode.temp.tabs;\r\n\r\n        $scope.selectedTab = 'Properties';\r\n\r\n\r\n    }\r\n    \r\n    $scope.addNodeToGraph = function (node) {\r\n        console.log('add node to graph');\r\n        //check node is not already in graph\r\n        if (!$scope.views.Graph.data.nodes[node.id]) {\r\n            console.log('get relationships');\r\n            //pull in relationships\r\n            neo.getRelationships(node.id).then(function (g) {\r\n                console.log('got relationships');\r\n                console.dir(g);\r\n\r\n                var newData = {\r\n                    edges: g.edges,\r\n                    nodes: {}\r\n                }\r\n                newData.nodes[node.id] = node;\r\n\r\n\r\n                $scope.publish(\"dataUpdate\", newData);\r\n\r\n\r\n                if (node.id === $scope.selection.selectedNode.id) {\r\n                    $scope.publish(\"selected\", { selection: { nodes: [node.id] } });\r\n                    $scope.publish(\"focus\", node.id)\r\n                }\r\n\r\n            });\r\n\r\n            $scope.activeView = graphView;\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n        \r\n})\r\n.controller('NodeHeaderCtrl',function($scope,$stateParams,nodeService){\r\n        \r\n    $scope.selection = {\r\n        selectedNode: null,\r\n        selectedEdge: null,\r\n        hoverNode: null\r\n    }\r\n\r\n     if ($stateParams.node){\r\n          \r\n           nodeService.get($stateParams.node,true).then(function(node){\r\n                 $scope.selection.selectedNode = node;\r\n            });\r\n                \r\n      }\r\n   \r\n\r\n        \r\n})\r\n.controller('NodeCtrl',function($scope,$stateParams,nodeService){\r\n\r\n       $scope.selection = {\r\n            selectedNode: null,\r\n            selectedEdge: null,\r\n            hoverNode: null\r\n        }\r\n        \r\n      \r\n      if ($stateParams.node){\r\n          \r\n           nodeService.get($stateParams.node,true).then(function(node){\r\n                 $scope.selection.selectedNode = node;\r\n            });\r\n                \r\n      }\r\n      \r\n\r\n  \r\n\r\n/*\r\n    //respond to published event from other component\r\n     $scope.subscribe(\"selected\", function (params) {//params is object containing array of nodes and array of edges\r\n\r\n\r\n        //avoid feedback loop by checking that sender is not self\r\n        if (params.sender != \"Controller\") {\r\n\r\n            if (params.selection.nodes.length == 1) {\r\n\r\n                if (params.selection.nodes[0].id) {\r\n\r\n                 \r\n                    neo.getNode(params.selection.nodes[0].id, true)\r\n                   .then(function (loadedNode) {\r\n                 \r\n                       $scope.selection.selectedNode = loadedNode;\r\n                       $scope.tabs = $scope.selection.selectedNode.temp.tabs;\r\n                    \r\n\r\n                   \r\n                   });\r\n                }\r\n                else if (params.selection.nodes[0].Label) {\r\n\r\n                    neo.getNodeByLabel(params.selection.nodes[0].Label, true)\r\n                   .then(function (loadedNode) {\r\n                      \r\n                       $scope.selection.selectedNode = loadedNode;\r\n                       $scope.tabs = $scope.selection.selectedNode.temp.tabs;\r\n                       \r\n                   });\r\n                }\r\n\r\n            }\r\n            else if (params.selection.nodes.length > 1)//multiple node selection\r\n            {\r\n                $scope.selection.multiple = params.selection.nodes;\r\n                $scope.selection.selectedNode = undefined;\r\n                $scope.selection.selectedEdge = undefined;\r\n                $scope.tabs = [\"Properties\"];\r\n                $scope.selectedTab = $scope.tabs[0];\r\n\r\n            }\r\n            else if (params.selection.edges.length == 1) {\r\n                $scope.selection.selectedNode = undefined;\r\n                $scope.selection.selectedEdge = params.selection.edges[0];\r\n                $scope.tabs = [\"Properties\", \"Images\"];\r\n                $scope.selectedTab = $scope.tabs[0];\r\n\r\n            }\r\n        }\r\n    });\r\n    */\r\n\r\n    $scope.tabs = [\"Properties\",\"Relationships\",\"Images\"];\r\n    $scope.selectedTab = \"Properties\";\r\n    $scope.selectTab = function (tab) {\r\n        $scope.selectedTab = tab;\r\n    }\r\n\r\n\r\n    \r\n    \r\n}) ","angular.module('neograph.node.service',['neograph.utils','neograph.neo.client','neograph.models.node'])\r\n.factory('nodeService', ['neoClient',  'utils','$q','nodeFactory',function (neoClient, utils,$q,nodeFactory) {\r\n\r\n    var lastLoadedNode = {};\r\n    \r\n\r\n    var that = {\r\n        setPropsAndTabsFromLabels: function (node) {\r\n            return neoClient.node.setPropsAndTabs({ node:node}).$promise.then(function (data) {\r\n                return data.toJSON();\r\n            });\r\n        }\r\n        ,\r\n        get: function (label, addrelprops) {\r\n\r\n        \r\n            \r\n            if (addrelprops) {\r\n                \r\n                if (lastLoadedNode && (label===lastLoadedNode.Label || label ===lastLoadedNode.id)){\r\n                    return $q.when(lastLoadedNode);\r\n                }\r\n                else{\r\n                \r\n                    return neoClient.node.getWithRels({ id: label }).$promise.then(function (node) {\r\n                        \r\n                     \r\n                        lastLoadedNode = nodeFactory.create(node.toJSON());\r\n                        console.log(lastLoadedNode);\r\n                        return lastLoadedNode;\r\n                    });\r\n                }\r\n\r\n               \r\n            }\r\n            else {\r\n                return neoClient.node.get({ id: label }).$promise.then(function (node) {\r\n                    return node.toJSON();\r\n                });\r\n            }\r\n\r\n        }\r\n        ,\r\n        getList: function (q, limit) {//q = match (n) & where only (without return)\r\n\r\n            return neoClient.node.getList({ q: q, limit: limit }).$promise;//returns array\r\n        }\r\n          ,\r\n        saveWikipagename: function (n)//short version for freebase prop saving\r\n        {\r\n            return neoClient.node.saveWikipagename({ \r\n                id: n.id, \r\n                name: n.Wikipagename \r\n            }).$promise.then(function (data) {\r\n                return data.toJSON();\r\n            });\r\n        }\r\n        ,\r\n        getImages:function(node){\r\n        \r\n            return neoClient.node.getImages({\r\n                id: node.id,\r\n                isPicture: node.temp.isPicture,\r\n                isGroup: node.temp.isGroup\r\n            }).$promise;//returns array\r\n        }\r\n        ,\r\n        saveProps: function (n)//short version for freebase prop saving\r\n        {\r\n            return neoClient.node.saveProps({ node: n, user: user }).$promise.then(function (data) {\r\n                return data.toJSON();\r\n            });\r\n        \r\n        }\r\n        ,\r\n        getProps: function (labels) {\r\n\r\n            return neoClient.node.getProps({ labels: labels }).$promise.then(function (data) {\r\n                return data.toJSON();\r\n            });\r\n        }\r\n        ,\r\n        save: function (n, user) {\r\n            if (n.temp.trimmed) {\r\n                throw ('Node is trimmed - cannot save');\r\n            }\r\n            return neoClient.node.save({ node: n, user: user }).$promise.then(function (data) {\r\n                return data.toJSON();\r\n            });\r\n        }\r\n        ,\r\n        saveRels: function (n) {\r\n            return neoClient.node.saveRels({ node: n }).$promise.then(function (data) {\r\n                return data.toJSON();\r\n            });\r\n\r\n        }\r\n        ,\r\n        //deletes node and relationships forever\r\n        destroy: function (node) {\r\n\r\n            return neoClient.node.destroy({ node: node }).$promise.then(function (data) {\r\n                return data.toJSON();\r\n            });\r\n\r\n        }\r\n        ,\r\n       //only supports 1 node at the mo\r\n        delete: function (node) {\r\n\r\n             var deferred = $q.deferred();\r\n                \r\n            if (node && node.id) {\r\n                \r\n                return neoClient.node.delete({ node: node }).$promise.then(function (data) {\r\n                   deferred.resolve(data.toJSON());\r\n                });\r\n            }\r\n            else { \r\n                deferred.resolve({});\r\n            }\r\n        }\r\n        ,\r\n           //only supports 1 node at the mo\r\n        restore: function (node) {\r\n\r\n            var deferred = $q.deferred();\r\n            \r\n            if (node && node.id) {\r\n                neoClient.node.restore({ node: node }).$promise.then(function (data) {\r\n                    deferred.resolve(data.toJSON());\r\n                });\r\n            }\r\n            else { \r\n                deferred.resolve({});\r\n                \r\n            }\r\n\r\n            return deferred.promise;\r\n\r\n        }\r\n        ,\r\n        search: function (txt, restrict) { //restrict = labels to restrict matches to\r\n\r\nconsole.log(txt);\r\n            if (txt) {\r\n                return neoClient.node.search({ txt: txt, restrict: restrict }).$promise;//returns array\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return that;\r\n\r\n}]);\r\n","angular.module('neograph.query.graph',['ui.router','neograph.models.node'])\r\n .factory('graphService',function(nodeFactory){\r\n        \r\n        var graphNodeFromNeoNode = function (neoNode) {\r\n\r\n        neoNode = nodeFactory.create(neoNode);\r\n        \r\n        var type = neoNode.class;\r\n        var yf = parseInt(neoNode.yearFrom);\r\n        var yt = parseInt(neoNode.yearTo);\r\n\r\n        var y = yt;\r\n\r\n        if (yf && yt) {\r\n            y = yt - ((yt - yf) / 2);\r\n        }\r\n\r\n        var level = 0;\r\n\r\n        var startYear = 1400;\r\n        var endYear = 2000;\r\n        var step = 5;\r\n        var cnt = 1;\r\n        for (var i = startYear; i < endYear; i += step) {\r\n            if (y >= i && y < i + step) {\r\n                level = cnt;\r\n            }\r\n\r\n            cnt += 1;\r\n        }\r\n\r\n        if (y > endYear) {\r\n            level = cnt;\r\n        }\r\n\r\n\r\n        var node = {\r\n            id: neoNode.id,\r\n            label: neoNode.label || neoNode.lookup,\r\n            size: neoNode.status / 10,\r\n            group: neoNode.class,\r\n            // color: ==='Group' ? 'orange': 'pink',\r\n            mass: type == 'Group' ? 0.5 : 1,\r\n            radius: neoNode.isPerson() ? neoNode.status : 1,\r\n            //    title: neoNode.FB_blurb,//neoNode.Lookup + \" - \" + type + \" - \" + neoNode.Status,\r\n            level: level //for hiearchichal layout,\r\n            ,borderWidth:0\r\n        }\r\n\r\n        var image = (type === 'Painting' || type === 'Picture') ? neoNode.temp.thumbUrl : null;\r\n\r\n        if (image) {\r\n            node.image = image;\r\n            node.shape = 'image';\r\n        }\r\n        else if (type == \"Provenance\") {\r\n            node.fontSize = 50;\r\n            node.fontColor = 'lightgray';\r\n            node.color = 'transparent';\r\n        }\r\n        else if (type == \"Iconography\" || type == \"Place\") {\r\n            node.shape = 'ellipse';\r\n        }\r\n        else if (type == \"Quotation\") {\r\n\r\n            node.shape = 'box';\r\n            node.color = 'transparent';\r\n            node.label = neoNode.text;\r\n        }\r\n        else if (type == \"User\") {\r\n            node.shape = 'star';\r\n            node.size = 20;\r\n        }\r\n        else if (type == \"Link\") {\r\n            node.label = neoNode.name;\r\n            node.shape = 'box';\r\n            node.color = 'transparent';\r\n        }\r\n        else {\r\n            node.shape =  neoNode.isPerson() ? 'dot' : neoNode.isProperty() ? 'circle' : 'box';\r\n        }\r\n\r\n        node.color= {background:node.color || \"#97C2FC\",border: \"transparent\"};\r\n        if (neoNode.isProperty()){\r\n            node.color.background = \"lightgreen\";\r\n        }\r\n        return node;\r\n\r\n    };\r\n\r\n    var graphEdgeFromNeoEdge = function (neoEdge) {\r\n        //id, from, to, type, properties\r\n\r\n        var type = neoEdge.type;\r\n\r\n        var symmetrical = type === \"ASSOCIATED_WITH\";\r\n                \r\n\r\n        var hideEdgeLabel =\r\n            type == \"BY\" || \"INFLUENCES\" ||\r\n              type == \"INSPIRES\" ||\r\n              type == \"DEALS_WITH\" ||\r\n            type == \"PART_OF\" ||\r\n            type == \"MEMBER_OF\" ||\r\n            type == \"ASSOCIATED_WITH\" ||\r\n            type == \"ACTIVE_DURING\" ||\r\n            type == \"FROM\" ||\r\n            type == \"DEVELOPS\" ||\r\n            type == \"LEADS\" ||\r\n            type == \"FOUNDS\" ||\r\n            type == \"DEPICTS\" ||\r\n            type == \"WORKS_IN\" ||\r\n            type == \"STUDIES\" || type == \"STUDIES_AT\" ||\r\n            type == \"TEACHES\" || type == \"TEACHES_AT\"; //displayed in light green\r\n\r\n        var hideEdge = type == \"FROM\";\r\n\r\n        var edge = {\r\n            id: neoEdge.id,\r\n            from: neoEdge.startNode,\r\n            to: neoEdge.endNode,\r\n            label: (type != \"EXTENDS\" && type !=\"PROPERTY\" && type != \"INFLUENCES\" && type != \"ASSOCIATED_WITH\") ? type.toLowerCase():null,\r\n            fontColor: 'blue',\r\n            //  width: neoEdge.Weight/2 ,\r\n            color: type == \"FROM\" ? \"#EEEEEE\"\r\n                : type == \"INFLUENCES\" ? 'pink'\r\n                : (type == \"TEACHES\" || type == \"TEACHES_AT\" || type===\"PROPERTY\") ? 'green'\r\n                : 'blue',\r\n            opacity: hideEdge ? 0 : 1,//type == \"INFLUENCES\" ? 1 : 0.7,\r\n            style: symmetrical ? 'dash-line' : 'arrow',//arrow-center' ,\r\n            type: ['curved'],\r\n            labelAlignment: 'line-center'\r\n\r\n        }\r\n\r\n        return edge;\r\n\r\n    }\r\n\r\n\r\n        return {\r\n               \r\n            defaultEdgeType : function (fromType, toType) {\r\n                if (toType == \"Provenance\") {\r\n                    return \"FROM\";\r\n                }\r\n                else if (toType == \"Painter\") {\r\n                    return \"INFLUENCES\";\r\n                }\r\n\r\n                return \"ASSOCIATED_WITH\";\r\n\r\n            }\r\n            ,\r\n              options:   {\r\n            //  configurePhysics:true,\r\n            edges: { widthSelectionMultiplier: 4 }\r\n                ,\r\n            hierarchicalLayout: {\r\n                enabled: false,\r\n                levelSeparation: 10,//make this inversely proportional to number of nodes\r\n                nodeSpacing: 200,\r\n                direction: \"UD\",//LR\r\n                //    layout: \"hubsize\"\r\n            }\r\n                ,\r\n            dataManipulation: {\r\n                enabled: true,\r\n                initiallyVisible: true\r\n            }\r\n    ,\r\n            //stabilize: true,\r\n            //stabilizationIterations: 1000,\r\n            physics: {\r\n                barnesHut: {\r\n                    enabled: true,\r\n                    gravitationalConstant: -6000,\r\n                    centralGravity: 1,\r\n                    springLength: 20,\r\n                    springConstant: 0.04,\r\n                    damping: 0.09\r\n                },\r\n                repulsion: {\r\n                    centralGravity: 0.1,\r\n                    springLength: 0.5,\r\n                    springConstant: 0.05,\r\n                    nodeDistance: 100,\r\n                    damping: 0.09\r\n                }\r\n                ,\r\n                hierarchicalRepulsion: {\r\n                    enabled: false,\r\n                    centralGravity: 0,\r\n                    springLength: 270,\r\n                    springConstant: 0.01,\r\n                    nodeDistance: 300,\r\n                    damping: 0.09\r\n                }\r\n            }\r\n             \r\n                ,\r\n            onDelete: function (data, callback) {\r\n                //   $scope.publish(\"deleting\");\r\n            }\r\n        }\r\n            ,\r\n            //transforms neo graph data object into object containing array of nodes and array of edges renderable by vis network\r\n             toGraphData : function (g) {\r\n                var graphData = {\r\n                    nodes: [],\r\n                    edges: []\r\n                }\r\n                for (var n in g.nodes) {\r\n                    var node = graphNodeFromNeoNode(g.nodes[n])\r\n                    graphData.nodes.push(node);\r\n                }\r\n\r\n                for (var r in g.edges) {\r\n                    var edge = graphEdgeFromNeoEdge(g.edges[r]);\r\n                    graphData.edges.push(edge);\r\n                }\r\n                return graphData;\r\n            }\r\n            \r\n        }\r\n    })\r\n    .directive('graph', ['graphService','$state', function (service,$state) {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'app/query/graph.html',\r\n        scope: {\r\n            data: '=',\r\n            active: '=',\r\n            network: '='\r\n        },\r\n        link: function ($scope, $element, $attrs) {\r\n            \r\n            $scope.$on(\"$stateChangeSuccess\", function updateSelectedNode() {\r\n                console.log($state.params);\r\n                //look for node with label $state.params.node in $scope.data\r\n                //get node id\r\n                if ($state.params.node){\r\n                    for (var key in $scope.data.nodes){\r\n                        if ($scope.data.nodes[key].label === $state.params.node){\r\n                            if ($scope.data.nodes[key].id != getSelectedNodeId()){\r\n                                   network.selectNodes([key]);\r\n                            network.focusOnNode(key, { scale: 1.5, animation: { duration: 1000, easingFunction: 'easeOutCubic' } });\r\n\r\n                            }\r\n                         \r\n                        }\r\n                    }\r\n                }\r\n                \r\n                \r\n                \r\n              \r\n            });      \r\n            \r\n            var graphWidth= 1300;\r\n            var graphHeight=$(window).height()-80;\r\n            var topBarHeight=150;\r\n\r\n\r\n            var options = service.options;\r\n            options.onConnect= function (data, callback) {\r\n\r\n                var newEdge = {\r\n                    start: $scope.data.nodes[data.from],\r\n                    type: service.defaultEdgeType($scope.data.nodes[data.from].Type, $scope.data.nodes[data.to].Type),\r\n                    end: $scope.data.nodes[data.to],\r\n                    properties: { Weight: 3 }\r\n                }\r\n                $scope.publish(\"newEdge\", newEdge);\r\n            }\r\n\r\n            $scope.data = {\r\n                nodes: {},\r\n                edges:{}\r\n            }\r\n\r\n            var graph = {\r\n                nodes: new vis.DataSet(),\r\n                edges: new vis.DataSet()\r\n            };\r\n\r\n            var network = new vis.Network($element.find('.graphContainer')[0], graph, options);\r\n\r\n\r\n\r\n            //network.on('startStabilization', function () {//should be network.on('NewData')\r\n            //    $window.setTimeout( function () {  network.zoomExtent();},2000);\r\n\r\n            //});\r\n\r\n\r\n            //set size to window size\r\n            $scope.$watch('window', function (w) {\r\n                network.setSize(graphWidth + \"px\", graphHeight + \"px\");\r\n            });\r\n\r\n            //fit to screen on resize\r\n            network.on('resize', function (params) {\r\n                if (getSelectedNodeId()) {\r\n                    network.focusOnNode(getSelectedNodeId(), { scale: 1, animation: { duration: 1000, easingFunction: 'easeOutCubic' } });\r\n                }\r\n                else {\r\n                    network.zoomExtent({ duration: 1000, easingFunction: 'easeOutCubic' });\r\n                }\r\n            });\r\n\r\n            graph.nodes.on('*', function (event, properties, senderId) {\r\n                //  console.log('event:', event, 'properties:', properties, 'senderId:', senderId);\r\n                if (graph.nodes.length) {\r\n                    $(\".network-manipulationUI.connect\").css(\"display\", \"inline-block\");\r\n                }\r\n                else {\r\n                    $(\".network-manipulationUI.connect\").hide();\r\n                }\r\n\r\n            });\r\n\r\n       \r\n\r\n            // add event listeners\r\n            network.on('select', function (params) {\r\n              \r\n                    \r\n                    console.log($scope.data.nodes[params.nodes[0]]);\r\n                    if (params.nodes.length===1){\r\n                        let label = $scope.data.nodes[params.nodes[0]].label;\r\n                        if (label){\r\n                                  $state.go('admin.main.node.view',{node:label});\r\n                        }\r\n                    \r\n                    }\r\n                    else if (params.edges.length===1){\r\n                        \r\n                        var id=params.edges[0];\r\n                        var startNode=$scope.data.nodes[$scope.data.edges[id].startNode];\r\n                        var endNode =$scope.data.nodes[$scope.data.edges[id].endNode];\r\n                        var edge ={\r\n                            id: id,\r\n                            start: {lookup:startNode.lookup},\r\n                            end:  {lookup:endNode.lookup},\r\n                            type: $scope.data.edges[id].type,\r\n                            properties: $scope.data.edges[id].properties\r\n                        }\r\n                        \r\n                        $state.go('admin.main.edge.view',{edge:JSON.stringify(edge)});\r\n                    }\r\n                    \r\n\r\n\r\n\r\n                    \r\n                  \r\n                \r\n            });\r\n\r\n            $scope.subscribe(\"deleted\", function (params) {\r\n                console.log(params);\r\n                if (params.selection.nodes && params.selection.nodes.length) {\r\n                    var nodeids = params.selection.nodes.map(function (n) { return n.id });\r\n                    graph.nodes.remove(nodeids);\r\n                }\r\n                if (params.selection.edges && params.selection.edges.length) {\r\n                    var edgeids = params.selection.edges.map(function (n) { return n.id });\r\n                    graph.edges.remove(edgeids);\r\n                }\r\n            });\r\n\r\n            $scope.subscribe(\"focus\", function (nodeid) {\r\n\r\n                network.focusOnNode(nodeid, { scale: 1, animation: { duration: 1000, easingFunction: 'easeOutCubic' } });\r\n\r\n            });\r\n\r\n\r\n\r\n\r\n            var getSelectedNodeId = function () {\r\n\r\n                var selectedNodes = network.getSelectedNodes();\r\n                if (selectedNodes.length == 1) {\r\n                    return selectedNodes[0];\r\n                }\r\n                else return undefined;\r\n\r\n            }\r\n\r\n            $(\".network-manipulationUI.connect\").hide();\r\n\r\n            //capture hover node\r\n            $scope.hoverNode = undefined;\r\n            $('.graphContainer').on('mousemove',\r\n                function (event) {\r\n                    var n = network._getNodeAt({ x: event.pageX, y: event.pageY - topBarHeight - 55 });\r\n                    $scope.$apply(function () {\r\n                        if (n) {\r\n                            var dataNode = $scope.data.nodes[n.id];\r\n                            $scope.hoverNode = dataNode;\r\n                            $scope.publish(\"hover\", dataNode);\r\n                        }\r\n                        else {\r\n                            $scope.publish(\"hover\", undefined);\r\n                            $scope.hoverNode = undefined;\r\n\r\n                        }\r\n                    });\r\n                });\r\n\r\n\r\n            //freeze simulation if not active\r\n            $scope.$watch('active',\r\n                function (active) {\r\n                    if (active != undefined) {\r\n                        network.freezeSimulation(!active);\r\n                    }\r\n                });\r\n\r\n          \r\n\r\n\r\n         \r\n\r\n           $scope.$watch('data', function () {\r\n                console.log('new change')\r\n                if ($scope.active) {\r\n                    console.log('drawing new graph');\r\n                    graph.nodes.clear();\r\n                    graph.edges.clear();\r\n                    console.log($scope.data)\r\n                    var gArr = service.toGraphData($scope.data);\r\n                    graph.nodes.add(gArr.nodes);\r\n                    graph.edges.add(gArr.edges);\r\n                }\r\n            })\r\n\r\n            //updates existing data (not replace)\r\n            $scope.subscribe(\"dataUpdate\", function (g) {\r\n                console.log('graph: dataUpdate');\r\n                if ($scope.active && $scope.data) {\r\n                    console.log('updating graph');\r\n                    $.extend($scope.data.edges, g.edges);\r\n                    $.extend($scope.data.nodes, g.nodes);\r\n                    var gArr = service.toGraphData(g);\r\n                    graph.edges.update(gArr.edges);\r\n                    graph.nodes.update(gArr.nodes);\r\n                }\r\n\r\n            });\r\n\r\n       \r\n\r\n        }\r\n\r\n    }\r\n}])","angular.module('neograph.query',['neograph.query.presets','neograph.queryInput','neograph.query.graph'])\r\n.factory(\"queryFactory\",function(queryPresets){\r\n    \r\n     function Query (key, render) {\r\n\r\n\r\n\r\n        this.key = key;\r\n        this.name = key;\r\n        this.render = render;\r\n\r\n        this.data = {\r\n            nodes: {},\r\n            edges: {}\r\n        }\r\n        \r\n        this.body = {q:\"\",connectAll:false}\r\n\r\n\r\n       this.presets = queryPresets;\r\n       this.generators = {};\r\n            \r\n        if (render === \"Graph\") {\r\n         \r\n            this.generators.nodeGraph = {\r\n                type: \"nodeGraph\",\r\n                options: {}\r\n            }\r\n        }\r\n\r\n        if (render === \"Grid\") {\r\n            this.generators.nodeFilter = {\r\n                type: \"nodeFilter\",\r\n                options: {}\r\n            }\r\n            this.generators.favouritesFilter = {\r\n                type: \"favouritesFilter\",\r\n                options: {}\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n        return {\r\n              create : function (key, type) {\r\n                var query = new Query(key, type);\r\n                return query;\r\n            }\r\n        }\r\n      \r\n})\r\n    .factory('queryService',function(queryFactory){\r\n        \r\n        var active = queryFactory.create(\"Query\",\"Graph\");\r\n        var queries = {};\r\n        queries[active.key] = active;\r\n\r\n        var clonequery = function () {\r\n            queries[$scope.queries[active].generators.nodeFilter.options.node.lookup] = angular.copy(queries[active]);\r\n        }\r\n        \r\n        var listeners = [];\r\n        \r\n        \r\n        function publishChange(){\r\n            \r\n            for (var i =0;i<listeners.length;i++){\r\n                listeners[i](active);\r\n            }\r\n        }\r\n        \r\n        \r\n        return {\r\n            queries:queries,\r\n            active:active,\r\n            update:function(key){\r\n                active = queries[key];\r\n                publishChange();\r\n            }\r\n            ,\r\n            subscribe:function(callback){\r\n                listeners.push(callback);\r\n            }\r\n        }\r\n        \r\n    })   \r\n\r\n    .controller('QueryCtrl',function($scope,queryService){\r\n        \r\n        queryService.subscribe(function(active){\r\n            $scope.active = active;\r\n        })\r\n        \r\n        $scope.queries = queryService.queries;\r\n        $scope.active = queryService.active;\r\n        \r\n        $scope.selectedTab = $scope.active.key;\r\n\r\n        $scope.$watch('selectedTab',function(key){\r\n            queryService.update(key);\r\n        });\r\n        \r\n    })","angular.module('neograph.query.presets',[])\r\n.factory(\"queryPresets\", function () {\r\n\r\n    return {\r\n        \"Schema\":{\r\n            q: \"match (n:Schema) optional match (n)-[r]-(m:Schema) return n,r,m\"\r\n        }\r\n        ,\r\n        \"AddedRecently\": {\r\n\r\n            q: \"match (n:Global) where n.created is not null return n order by n.created desc limit 100\"\r\n\r\n        },  \"AddedRecentlyPictures\": {\r\n            //MATCH (p:Label) - [:ASSOCIATED_WITH|:PART_OF|:FOUNDS|:LEADS|:MEMBER_OF|:REPRESENTS] - (g:Group), (p) -- (i:Picture) where ID(g) = \" + n.id + \" return p.Name,collect(i)[0..5],count(*) as count order by p.Name\r\n            q: \"MATCH  (p:Label) -- (i:Picture) where p.created is not null return p.created,collect(i)[0..5],count(*) as count  order by p.created desc limit 500\"\r\n\r\n        },\r\n        \"Overview\": {\r\n            q: \"match (n) - [r] - (m) where (n:Global and m:Global) and (n.Status is null or n.Status > 6) and (m.Status is null or m.Status > 6) and not (n-[:INSTANCE_OF]-m) RETURN r\"\r\n        }\r\n        ,\r\n        \"OverViewDense\": {\r\n            q: \"match (n) - [r] - (m) where (n:Global and m:Global) and (n.Status is null or n.Status > 3) and (m.Status is null or m.Status > 3) and not (n-[:INSTANCE_OF]-m) RETURN r\"\r\n        }\r\n        ,\r\n        \"British Influence\": {\r\n            q: \"MATCH (c:Global)-[r]-(d:Global) where (c:English or c:Scottish) and not (c-[:INSTANCE_OF]-d) and not d.Lookup='English' and not c.Lookup='English'  return c,d,r\"\r\n        },\r\n        \"British Only\": {\r\n            q: \"MATCH (c:Global)-[r]-(d:Global) where (c:English or c:Scottish) and  (d:English or d:Scottish) and not (c-[:INSTANCE_OF]-d) and not d.Lookup='English' and not c.Lookup='English'  return c,d,r\"\r\n            ,\r\n            connectAll: true\r\n        }\r\n           ,\r\n        \"French Only\": {\r\n            q: \"MATCH (c:Global:French)-[r]-(d:Global:French) where  not (c-[:INSTANCE_OF]-d) and not d.Lookup='French' and not c.Lookup='French'  return c,d,r\"\r\n             ,\r\n            connectAll: true\r\n        }\r\n        ,\r\n        \"French Painter influence\": {\r\n            q: \"MATCH (c:Global:French:Painter)-[r]-(d:Painter) where not (c-[:INSTANCE_OF]-d) and not d.Lookup='French' and not c.Lookup='French'  return c,d,r\"\r\n                    ,\r\n            connectAll: true\r\n        }\r\n        ,\r\n        \"Cezanne 3 gen\": {\r\n            q: \"MATCH (c {Lookup:'Cezanne'})-[r]-(d:Painter)  -[s]-(e:Painter)  -[t]-(f:Painter) return c,d,e,f,r,s,t\"\r\n            ,\r\n            connectAll: true\r\n        }\r\n            ,\r\n        \"Cezanne 3 gen outbound\": {\r\n            q: \"MATCH (c {Lookup:'Cezanne'})-[r]->(d:Painter)  -[s]->(e:Painter)  -[t]->(f:Painter) return c,d,e,f,r,s,t\"\r\n            ,\r\n            connectAll: true\r\n        }\r\n            ,\r\n        \"Cezanne 3 gen inbound\": {\r\n            q: \"MATCH (c {Lookup:'Cezanne'})<-[r]-(d:Painter)  <-[s]-(e:Painter)  <-[t]-(f:Painter) return c,d,e,f,r,s,t\"\r\n                    ,\r\n            connectAll: true\r\n        }\r\n               ,\r\n        \"French-English Painters\": {\r\n            q: \"MATCH (c:Global:French:Painter)-[r]-(d:Global:English:Painter) where  not (c-[:INSTANCE_OF]-d) and not d.Lookup='French' and not c.Lookup='French'  return c,d,r\"\r\n             ,\r\n            connectAll: true\r\n        }\r\n                 ,\r\n        \"German\": {\r\n            q: \"MATCH (c:Global:German)-[r]-(d:Global) where  not (c-[:INSTANCE_OF]-d) and not d.Lookup='German' and not c.Lookup='German'  return c,d,r\"\r\n        }\r\n                  ,\r\n        \"NorthernEurope\": {\r\n            q: \"MATCH (c:Global)-[r]-(d:Global) where (c:NorthernEurope or c:German or c:Dutch or c:English or c:Scottish) and  (d:NorthernEurope or d:German or d:Dutch or d:English or d:Scottish) and not c:Provenance and not d:Provenance and not (c-[:INSTANCE_OF]-d)   return c,d,r\"\r\n        }\r\n                 ,\r\n        \"Italian\": {\r\n            q: \"MATCH (c:Global:Italian)-[r]-(d:Global) where  not (c-[:INSTANCE_OF]-d) and not d.Lookup='Italian' and not c.Lookup='Italian'  return c,d,r\"\r\n        }\r\n                 ,\r\n        \"Spanish\": {\r\n            q: \"MATCH (c:Global:Spanish)-[r]-(d:Global) where  not (c-[:INSTANCE_OF]-d) and not d.Lookup='Spanish' and not c.Lookup='Spanish'  return c,d,r\"\r\n        }\r\n                  ,\r\n        \"American\": {\r\n            q: \"MATCH (c:Global:American)-[r]-(d:Global) where  not (c-[:INSTANCE_OF]-d) and not d.Lookup='American' and not c.Lookup='American'  return c,d,r\"\r\n        }\r\n                 ,\r\n        \"Pop\": {\r\n            q: \"match (n {Lookup:'Pop'}) -[r]-(m:Global) -[s]-(p:Global) where not (n-[:INSTANCE_OF]-m) and not (m-[:INSTANCE_OF]-p) and (m:Painter or m:Group) and (p:Painter or p:Group) and not m:Provenance and not p:Provenance return n,r,m,s,p\"\r\n        }\r\n               ,\r\n        \"Impressionism\": {\r\n            q: \"match (n {Lookup:'Impressionist'}) -[r]-(m:Global) -[s]-(p:Global) where not (n-[:INSTANCE_OF]-m) and not (m-[:INSTANCE_OF]-p) and (m:Painter or m:Group) and (p:Painter or p:Group) and not m:Provenance and not p:Provenance return n,r,m,s,p\"\r\n            ,\r\n            connectAll: true\r\n        }\r\n               ,\r\n        \"Landscape\": {\r\n            q: \"MATCH (c:Global:Landscape)-[r]-(d:Global)  where not (c-[:INSTANCE_OF]-d)  and not d.Lookup='Landscape' and (d:Landscape or d:Provenance or d:Group or d:Iconography or d:Place) return c,d,r\"\r\n        }\r\n               ,\r\n        \"Modern\": {\r\n            q: \"MATCH (c:Global)-[r]-(d:Global) where  not (c-[:INSTANCE_OF]-d) and c.YearTo > 1870  and d.YearTo > 1870 return c,d,r\"\r\n        }\r\n                  ,\r\n        \"Rennaissance\": {\r\n            q: \"MATCH (c:Global)-[r]-(d:Global) where  not (c-[:INSTANCE_OF]-d) and c.YearTo > 1400 and c.YearTo<1700 and d.YearTo > 1400 and d.YearTo<1700 return c,d,r\"\r\n        }\r\n\r\n\r\n        // $scope.query =;\r\n\r\n        // $scope.query = \"match (n) - [r:INFLUENCES|:PART_OF|:MEMBER_OF|:ASSOCIATED_WITH|:INSPIRES|:ADMIRES|:FROM|:DEVELOPS|:ANTICIPATES|:FOUNDS|:LEADS|:WORKS_IN] - (m) where (n:Global and m:Global) and (n:Greatest or n:Group or n:Theme or n:School or n:Iconography or n:Provenance) and (m:Greatest or m:Group  or m:Theme or m:School or m:Iconography or m:Provenance) RETURN r\";//\"match (n) - [r:INFLUENCES|:PART_OF|:MEMBER_OF] - (m) where (n:Greatest or n:Group) and (m:Greatest or m:Group) RETURN r\";\r\n\r\n        //BRITSH\r\n        // $scope.query = ;\r\n\r\n        //IMPRESSIONISM\r\n        // MATCH (c:Global:Impressionist)-[r]-(d:Global:Impressionist) where  not (c-[:INSTANCE_OF]-d)   return c,d,r\r\n        //need to use connect all:\r\n        //  match (n {Lookup:'Impressionism'}) -[r]-(m:Global) -[s]-(p:Global) where not (n-[:INSTANCE_OF]-m) and not (m-[:INSTANCE_OF]-p) and (m:Painter or m:Group) and (p:Painter or p:Group) return n,r,m,s,p\r\n        //match (n {Lookup:'Impressionism'}) -[r]-(m:Global) -[s]-(p:Global) where not (n-[:INSTANCE_OF]-m) and not (m-[:INSTANCE_OF]-p) and (m:Painter or m:Group) and (p:Painter or p:Group) and not m:Provenance and not p:Provenance return n,r,m,s,p\r\n        //only follow links to next gen for above given weight ?\r\n\r\n        //LANDSCAPE\r\n        //\"MATCH (c:Global:Landscape)-[r]-(d:Global)  where not (c-[:INSTANCE_OF]-d)  and not d.Lookup='Landscape' and (d:Landscape or d:Provenance or d:Group or d:Iconography or d:Place) return c,d,r\"\r\n\r\n        //DATE FILTER\r\n        //   $scope.query =\r\n\r\n        //  var initQueryText = \"match (n:Greatest) - [r:INFLUENCES] - (m:Greatest) RETURN r\";//\"match (n:Painter) return n.Name\"\r\n\r\n        //   $scope.query = \"match (n) - [r:INFLUENCES|:PART_OF|:MEMBER_OF|:ASSOCIATED_WITH|:INSPIRES|:ADMIRES|:FROM|:DEVELOPS|:ANTICIPATES|:FOUNDS|:LEADS|:WORKS_IN] - (m) where (n:Global and m:Global and n.YearTo is not null and m.YearTo is not null) and (n:Great or n:Group or n:School  or n:Period) and (m:Great or m:Group  or m:School or m:Period) RETURN r\";\r\n\r\n        // $scope.query = \"match (n) - [r:INFLUENCES|:PART_OF|:MEMBER_OF|:ASSOCIATED_WITH|:INSPIRES|:ADMIRES|:FROM|:DEVELOPS|:ANTICIPATES|:FOUNDS|:LEADS|:WORKS_IN] - (m) where (n:Global and m:Global and n.YearTo is not null and m.YearTo is not null) and (n:Greatest or n:Group or n:Theme or n:School or n:Iconography or n:Provenance) and (m:Greatest or m:Group  or m:Theme or m:School or m:Iconography or m:Provenance) RETURN r\";\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n})","angular.module('neograph.queryInput',['neograph.neo', 'neograph.query.presets','neograph.query.generator'])\r\n.directive('queryinput', ['neo', 'queryPresets',function (neo,presets) {\r\n        return {\r\n            replace: true,\r\n            restrict: 'E',\r\n            templateUrl: 'app/query/queryInput.html',\r\n            scope: {\r\n                query: '=',\r\n                editable: '=?',\r\n                defaultpreset: '=?'\r\n\r\n            },\r\n            link: function ($scope, $element, $attrs) {\r\n                \r\n                console.log($scope.query);\r\n          \r\n                   \r\n                $scope.$watch('preset', function (preset) {\r\n                    console.log('p')\r\n                    if (preset) {\r\n                        console.log('preset change')\r\n                        $scope.query.body = preset;\r\n                    }\r\n                })\r\n                \r\n                if ($scope.defaultpreset)\r\n                {\r\n                    $scope.preset=presets[$scope.defaultpreset];\r\n                }\r\n\r\n                $scope.$watch('query.body', function (body) {\r\n                    if (body && body.q) {\r\n                        console.log('query Change');\r\n                        $scope.getData();\r\n                    }\r\n\r\n                });\r\n                \r\n                $scope.generated = {q:\"\"};\r\n                $scope.$watch('generated', function (generated) {\r\n                    if (generated) {\r\n                        $scope.query.body = generated;\r\n                    }\r\n                });\r\n                \r\n                $scope.nodeChanged = function (node) {\r\n                    if (node) {\r\n                        $scope.query.name = node.Label || node.Lookup;\r\n                \r\n                    }\r\n                }\r\n                \r\n                $scope.connectAll = function () {\r\n                    neo.getAllRelationships($scope.query.data.nodes)\r\n                    .then(function (g) {\r\n                        $.extend($scope.query.data.edges, g.edges);//add to cached data\r\n                        $scope.publish(\"dataUpdate\", g)\r\n                    });\r\n                }\r\n                \r\n                $scope.getData = function () {\r\n                    \r\n                    var body = $scope.query.body;\r\n                    \r\n                    if (body && body.q) {\r\n                        console.log('get data')\r\n                        \r\n                        //if grid query then return results as array to preserve sort order\r\n                        var returnArray = $scope.query.type === 'Grid' ? true : false;\r\n                        \r\n                        neo.getGraph(body.q, returnArray)\r\n                        .then(function (g) {\r\n                            \r\n                            if (body.connectAll) {\r\n                                \r\n                                neo.getAllRelationships(g.nodes)\r\n                                    .then(function (g2) {\r\n                                    \r\n                                    $.extend(g.edges, g2.edges);\r\n                                    $scope.query.data = g;\r\n\r\n                                });\r\n                            }\r\n                            else {\r\n                                $scope.query.data = g;\r\n                                console.log(g);\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n\r\n            }\r\n        }\r\n    }])","angular.module('neograph.node.favourites',[])\r\n    .directive('favourites', function () {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'app/node/favourites/node.favourites.html',\r\n        scope: {\r\n            node: '=',\r\n            query: '='\r\n        }\r\n        ,\r\n        link: function ($scope) {\r\n\r\n\r\n        \r\n\r\n            $scope.$watch('node', function (node) {\r\n\r\n                var querys = [];\r\n\r\n                if (node) {\r\n\r\n                    querys.push(\r\n                         {\r\n                             name: \"Pictures\",\r\n                             view: node.Lookup + \" favourites\",\r\n                             type:\"Grid\",\r\n                             queryGenerator: { id: \"favouritesFilter\", options: { user: node } }\r\n                         })\r\n\r\n\r\n                    querys.push(\r\n                      {\r\n                          name: \"People\",\r\n                          q: \"MATCH (c:\" + node.Lookup + \":Favourite)-[]->(d) - [] - (n:Person)    return n\", // or MATCH (a:User {Lookup:'Julian'}) - [r:FAVOURITE] -> (f) - [] -> (d)  return d\r\n                          connectAll: true,\r\n                          view: \"Graph\"\r\n                      });\r\n\r\n                    querys.push(\r\n                              {\r\n                                  name: \"People + 1\",\r\n                                  q: \"MATCH (c:\" + node.Lookup + \":Favourite)-[]->(d) - [] - (n:Person) -[]-(m:Person)   return n,m\", // or MATCH (a:User {Lookup:'Julian'}) - [r:FAVOURITE] -> (f) - [] -> (d)  return d\r\n                                  connectAll: true,\r\n                                  view: \"Graph\"\r\n                              });\r\n\r\n                    querys.push(\r\n                   {\r\n                       name: \"People and groups\",\r\n                       q: \"MATCH (c:\" + node.Lookup + \":Favourite)-[]->(d) - [] - (n) where (n:Person or n:Period or n:Group or n:Provenance)   return n\", // or MATCH (a:User {Lookup:'Julian'}) - [r:FAVOURITE] -> (f) - [] -> (d)  return d\r\n                       connectAll: true,\r\n                       view: \"Graph\"\r\n                   });\r\n\r\n                    querys.push(\r\n                       {\r\n                           name: \"People and groups + 1 \",\r\n                           q: \"MATCH (c:\" + node.Lookup + \":Favourite)-[]->(d) - [] - (n) - [] - (m) where (n:Person or n:Period or n:Group or n:Provenance) and  (m:Person or m:Period or m:Group or m:Provenance)  return n,m\", // or MATCH (a:User {Lookup:'Julian'}) - [r:FAVOURITE] -> (f) - [] -> (d)  return d\r\n                           connectAll: true,\r\n                           view: \"Graph\"\r\n                       });\r\n\r\n\r\n\r\n                    querys.push(\r\n                       {\r\n                           name: \"Everything\",\r\n                           q: \"MATCH (c:\" + node.Lookup + \":Favourite)-[]->(d) - [] - (n:Global)  return n\", // or MATCH (a:User {Lookup:'Julian'}) - [r:FAVOURITE] -> (f) - [] -> (d)  return d\r\n                           connectAll: true,\r\n                           view: \"Graph\"\r\n                       });\r\n\r\n\r\n                    querys.push(\r\n                       {\r\n                           name: \"Everything + 1\",\r\n                           q: \"MATCH (c:\" + node.Lookup + \":Favourite)-[]->(d) - [] - (n:Global) - [] - (m:Global)   return n,m\", // or MATCH (a:User {Lookup:'Julian'}) - [r:FAVOURITE] -> (f) - [] -> (d)  return d\r\n                           connectAll: true,\r\n                           view: \"Graph\"\r\n                       });\r\n\r\n\r\n\r\n                }\r\n\r\n                console.log(querys);\r\n\r\n                $scope.querys = querys;\r\n\r\n            });\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n})","angular.module('neograph.node.freebase',['neograph.neo'])\r\n    .factory('freebase.service',\r\n    function(){\r\n        \r\n        \r\n    var creationQueries = [];\r\n\r\n    //creationQueries.push({\r\n    //    name: \"Description\",\r\n    //    propname: \"description\",\r\n    //    query: {\r\n    //        \"type\": \"/common/topic\",\r\n    //        \"description\": [{ \"mid\": null, \"name\": null }]\r\n    //    }\r\n    //});\r\n    //creationQueries.push({\r\n    //    name: \"Image\",\r\n    //    propname: \"image\",\r\n    //    query: {\r\n    //        \"type\": \"/common/topic\",\r\n    //        \"image\": [{ \"mid\": null, \"name\": null }]\r\n    //    }\r\n    //});\r\n    creationQueries.push({\r\n        name: \"About\",\r\n        propname: [\"type\", \"art_genre\", \"\", \"art_subject\", \"period_or_movement\", \"locations\", \"date_begun\", \"date_completed\"],\r\n        query: {\r\n            \"type\": \"/visual_art/artwork\",\r\n            \"art_genre\": [{ \"mid\": null, \"name\": null }],\r\n            \"art_subject\": [{ \"mid\": null, \"name\": null }],\r\n            \"period_or_movement\": [{ \"mid\": null, \"name\": null }],\r\n            \"locations\": [{ \"mid\": null, \"name\": null }],\r\n            \"date_begun\": null,\r\n            \"date_completed\": null\r\n        }\r\n    });\r\n\r\n    //creationQueries.push({\r\n    //    name: \"About\",\r\n    //    propname: [\"type\",\"art_genre\",\"\",\"art_subject\",\"period_or_movement\",\"locations\",\"date_begun\",\"date_completed\"],\r\n    //    query: {\r\n    //        \"type\": \"/visual_art/artwork\",\r\n    //        \"art_genre\": [{ \"mid\": null, \"name\": null }],\r\n    //        \"art_subject\": [{ \"mid\": null, \"name\": null }],\r\n    //        \"period_or_movement\": [{ \"mid\": null, \"name\": null }],\r\n    //        \"locations\": [{ \"mid\": null, \"name\": null }],\r\n    //        \"date_begun\": null,\r\n    //        \"date_completed\":null\r\n    //    }\r\n    //});\r\n\r\n    ///visual_art/artwork/art_genre\r\n    ///visual_art/artwork/art_subject\r\n    ///visual_art/artwork/period_or_movement\r\n    ///visual_art/artwork/dimensions_meters\r\n    ///visual_art/artwork/locations\r\n    //visual_art/artwork/date_begun\r\n    //visual_art/artwork/date_completed\r\n\r\n\r\n\r\n\r\n\r\n    //queries that return lists\r\n    var queries = [];\r\n\r\n    //queries.push({\r\n    //    name: \"Description\",\r\n    //    propname: \"description\",\r\n    //    query: {\r\n    //        \"type\": \"/common/topic/description\",\r\n    //        \"description\": [{ \"mid\": null, \"name\": null }]\r\n    //    }\r\n    //});\r\n    //queries.push({\r\n    //    name: \"Image\",\r\n    //    propname: \"image\",\r\n    //    query: {\r\n    //        \"type\": \"/common/topic/image\",\r\n    //        \"image\": [{ \"mid\": null, \"name\": null }]\r\n    //    }\r\n    //});\r\n\r\n\r\n\r\n    queries.push({\r\n        name: \"Artworks\",\r\n        propname: \"artworks\",\r\n        query: {\r\n            \"type\": \"/visual_art/visual_artist\",\r\n            \"artworks\": [{ \"mid\": null, \"name\": null }]\r\n        }\r\n    });\r\n\r\n\r\n    queries.push({\r\n        name: \"Quotations\",\r\n        propname: \"quotations\",\r\n        query: {\r\n            \"type\": \"/people/person\",\r\n            \"quotations\": [{ \"mid\": null, \"name\": null }]\r\n        }\r\n    });\r\n\r\n    queries.push({\r\n        name: \"Influence\",\r\n        propname: \"influenced\",\r\n        query: {\r\n            \"type\": \"/influence/influence_node\",\r\n            \"influenced\": [{ \"mid\": null, \"name\": null }]\r\n        }\r\n    });\r\n\r\n    queries.push({\r\n        name: \"Influenced by\",\r\n        propname: \"influenced_by\",\r\n        query: {\r\n            \"type\": \"/influence/influence_node\",\r\n            \"influenced_by\": [{ \"mid\": null, \"name\": null }]\r\n        }\r\n    });\r\n    queries.push({\r\n        name: \"Periods or Movements\",\r\n        propname: \"associated_periods_or_movements\",\r\n        query: {\r\n            \"type\": \"/visual_art/visual_artist\",\r\n            \"associated_periods_or_movements\": [{ \"mid\": null, \"name\": null }]\r\n        }\r\n    });\r\n    queries.push({\r\n        name: \"Peers\",\r\n        propname: \"peers\",\r\n        query: {\r\n            \"type\": \"/influence/influence_node\",\r\n            \"peers\": [{ \"mid\": null, \"name\": null }]\r\n        }\r\n    });\r\n\r\n\r\n\r\n    //queries for single-value results\r\n    queries.push({\r\n        name: \"Date of Birth\",\r\n        propname: \"date_of_birth\",\r\n        query: {\r\n            \"type\": \"/people/person\",\r\n            \"date_of_birth\": null\r\n        }\r\n    });\r\n\r\n    queries.push({\r\n        name: \"Date of Death\",\r\n        propname: \"date_of_death\",\r\n        query: {\r\n            \"type\": \"/people/deceased_person\",\r\n            \"date_of_death\": null\r\n        }\r\n    });\r\n\r\n\r\n    var getTopic = function (freebaseId, filter, callback) {\r\n\r\n        var service_url = 'https://www.googleapis.com/freebase/v1/topic';\r\n        var params = {\r\n            'key': 'AIzaSyDKAx-gsd84J-0ebWuGI3QMG2N7daVyqLE',\r\n            'filter': filter\r\n            //  , 'filter': 'suggest'\r\n        }\r\n\r\n        $.getJSON(service_url + freebaseId + '?callback=?', params, function (response) {\r\n\r\n            callback(response);\r\n\r\n\r\n\r\n\r\n\r\n        });\r\n\r\n    }\r\n\r\n\r\n\r\n    var runQuery = function (q, callback) {\r\n\r\n        var API_KEY = 'AIzaSyDKAx-gsd84J-0ebWuGI3QMG2N7daVyqLE';\r\n        var service_url = 'https://www.googleapis.com/freebase/v1/mqlread';\r\n\r\n\r\n        var params = {\r\n            'key': API_KEY,\r\n            'query': JSON.stringify(q)\r\n        };\r\n        // console.log(params);\r\n\r\n        $.getJSON(service_url + '?callback=?', params, function (response) {\r\n\r\n            //var out = { results: [], error: undefined };\r\n            //if (response.result && response.result[q.propname]) {\r\n            //    out.result = response.result[q.propname];\r\n            //}\r\n\r\n            callback(response.result);\r\n        });\r\n\r\n    }\r\n\r\n    var getPersonData = function (freebaseId, callback) {\r\n\r\n        var filters = [];\r\n\r\n        filters.push(\r\n            {\r\n                filter: \"/visual_art/visual_artist\",\r\n                props: [\r\n                    \"associated_periods_or_movements\"\r\n                ]\r\n            }\r\n            )\r\n\r\n        filters.push({\r\n            filter: \"/influence/influence_node\",\r\n            props: [\"influenced\",\r\n                \"peers,/influence/peer_relationship/peers\",\r\n                \"influenced_by\"\r\n            ]\r\n\r\n        })\r\n\r\n        filters.push({\r\n            filter: \"/people/person\",\r\n            props: [\"date_of_birth\",\r\n                \"gender\",\r\n                \"nationality\",\r\n             //   \"parents\",\r\n                \"place_of_birth\",\r\n                \"places_lived,/people/place_lived/location\",\r\n            //    \"profession\",\r\n             //   \"religion\",\r\n             //   \"sibling_s,/people/sibling_relationship/sibling\",\r\n                \"quotations\"\r\n            ]\r\n\r\n        })\r\n\r\n        filters.push({\r\n            filter: \"/people/deceased_person\",\r\n            props: [\"date_of_death\"\r\n                , \"place_of_death\"]\r\n\r\n        })\r\n\r\n\r\n\r\n        var results = {};\r\n        var cnt = 0;\r\n   \r\n\r\n        var out = {};\r\n\r\n        angular.forEach(filters, function (f) {\r\n\r\n            getTopic(freebaseId, f.filter, function (result) {\r\n\r\n                angular.forEach(f.props, function (p) {\r\n\r\n                    arr = p.split(',');\r\n\r\n                    var propname = f.filter + \"/\" + arr[0];\r\n\r\n                \r\n                    if (!result || !result.property || !result.property[propname])\r\n                    { console.log('property not available: ' + propname); }\r\n                    else {\r\n                           var val = result.property[propname];\r\n\r\n                        if (val.valuetype == \"compound\") {\r\n                            vals = [];\r\n                            angular.forEach(val.values, function (v) {\r\n                                vals.push(v.property[arr[1]].values[0].text);\r\n                            });\r\n\r\n                            out[\"FB_\" + arr[0]] = vals;\r\n                        }\r\n                        else {\r\n\r\n                            vals = [];\r\n                            angular.forEach(val.values, function (v) {\r\n                                vals.push(v.text);\r\n                            });\r\n                            out[\"FB_\" + arr[0]] = vals;\r\n                        }\r\n\r\n                        if (arr[0] == \"date_of_death\" || arr[0] == \"place_of_death\" || arr[0] == \"place_of_birth\" || arr[0] == \"date_of_birth\" || arr[0] == \"gender\" || arr[0] == \"nationality\") {\r\n                            out[\"FB_\" + arr[0]] = out[\"FB_\" + arr[0]][0];\r\n                        }\r\n\r\n                      \r\n\r\n                    }\r\n\r\n                });\r\n\r\n                cnt += 1;\r\n        \r\n                if (cnt == filters.length) {\r\n                   \r\n                    callback(out);\r\n                }\r\n\r\n\r\n            });\r\n        });\r\n\r\n\r\n    }\r\n\r\n \r\n\r\n\r\n    return {\r\n\r\n       \r\n        getImage: function (freebaseId, width, height, callback) {\r\n\r\n            //first get image ids\r\n\r\n            getTopic(freebaseId, \"/common/topic/image\", function (prop) {\r\n                console.log(prop);\r\n                var imageId = prop.values[0].id;\r\n\r\n                var service_url = \"https://usercontent.googleapis.com/freebase/v1/image\";\r\n\r\n                var params = {\r\n                    'key': 'AIzaSyDKAx-gsd84J-0ebWuGI3QMG2N7daVyqLE'\r\n                    //maxwidth=225&maxheight=225&mode=fillcropmid\r\n                }\r\n                width = width || 225;\r\n                height = height || 400;\r\n\r\n                callback(service_url + imageId + \"?mode=fillcropmid&maxwidth=\" + width + \"&maxheight=\" + height);\r\n\r\n                //$.getJSON(service_url + imageId + '?callback=?', params, function (response) {\r\n\r\n                //    console.log(response);\r\n                //    callback(response);\r\n                //});\r\n\r\n\r\n            });\r\n\r\n        }\r\n        ,\r\n        getText: function (node, callback) {\r\n\r\n            var prop = '/common/topic/description';\r\n\r\n            var service_url = 'https://www.googleapis.com/freebase/v1/topic';\r\n            var params = {\r\n                'key': 'AIzaSyDKAx-gsd84J-0ebWuGI3QMG2N7daVyqLE',\r\n                'filter': prop\r\n                //  , 'filter': 'suggest'\r\n            }\r\n\r\n            $.getJSON(service_url + node.FB_ID + '?callback=?', params, function (response) {\r\n                //var out = { results: [], error: undefined };\r\n                //if (response.result && response.result[q.propname]) {\r\n                //    out.result = response.result[q.propname];\r\n                //}\r\n                // console.log(response);\r\n\r\n                if (!response[\"property\"])\r\n                {\r\n                    console.log('no blurb found for ' + node.Name)\r\n                    callback({});\r\n                }\r\n                else{\r\n\r\n                    console.log(response);\r\n\r\n                var blurb = response[\"property\"][prop].values[0].value;\r\n\r\n                var allowedLength = 20;\r\n\r\n                var indIs = blurb.indexOf(' is ');\r\n                var indWas = blurb.indexOf(' was ');\r\n                if (indIs > -1 && (indIs < indWas || indWas == -1)) { indWas = indIs; }\r\n                if (indWas === -1) { indWas = 0; };\r\n\r\n                if ($.inArray(\"Person\", node.labels) == -1) {\r\n                    indWas = 0;\r\n                }\r\n\r\n\r\n                var stopSpc = blurb.substring(allowedLength + indWas, blurb.length).indexOf('. ') + 1;\r\n                var stopCr = blurb.substring(allowedLength + indWas, blurb.length).indexOf('.\\n') + 1;\r\n\r\n                var stop = (stopCr>0 &&stopCr < stopSpc )? stopCr : stopSpc;\r\n\r\n                //console.log(blurb);\r\n                //console.log(indIs);\r\n                //console.log(indWas);\r\n                //console.log(stop);\r\n\r\n                var until = stop > 0 ? allowedLength + indWas + stop : blurb.length;\r\n\r\n\r\n                var shortname = node.Lookup;\r\n\r\n                if (shortname.replace(/ /g, '').toLowerCase() == node.Name.toLowerCase()) {\r\n                    shortname = node.name\r\n                }\r\n                else {\r\n                    shortname=shortname.replace(/([A-Z])/g, ' $1').replace(/^./, function (str) { return str.toUpperCase(); });\r\n                }\r\n\r\n                  \r\n\r\n\r\n\r\n                var short = (indWas > 0 ? (shortname) : \"\") + blurb.substring(indWas, until);\r\n                var full = blurb.substring(until, blurb.length);\r\n\r\n                if (short != full)\r\n                {\r\n                    callback(\r\n                    {\r\n                        \"FB_blurb\": short.trim(),\r\n                        \"FB_blurb_full\": full.trim()\r\n                   \r\n                    });\r\n                }\r\n                else{\r\n                    callback(\r\n                      {\r\n                          \"FB_blurb\": short.trim(),\r\n                          \"FB_blurb_full\": null\r\n                    })\r\n                }\r\n\r\n    \r\n            }\r\n\r\n            });\r\n\r\n        }\r\n        ,\r\n        getTopic: function (freebaseId, callback) {\r\n\r\n            getTopic(freebaseId, callback);\r\n\r\n        }\r\n        ,\r\n        getPersonData: function (freebaseId, callback) {\r\n\r\n\r\n            getPersonData(freebaseId, callback);\r\n\r\n        }\r\n         ,\r\n        getCreationData: function (freebaseId, callback) {\r\n\r\n            getData(freebaseId, creationQueries, callback);\r\n\r\n\r\n\r\n        }\r\n        ,\r\n        getId: function (node, callback) {\r\n\r\n      \r\n            var API_KEY = 'AIzaSyDKAx-gsd84J-0ebWuGI3QMG2N7daVyqLE';\r\n            var service_url = 'https://www.googleapis.com/freebase/v1/search';\r\n\r\n            var ispicture = $.inArray('Picture', node.labels) ;\r\n\r\n            var params = {\r\n                'key': API_KEY,\r\n                'query': ispicture ? node.Title || node.Name : node.Lookup,\r\n               \r\n                'limit': 100\r\n            };\r\n\r\n            if ($.inArray(\"Person\", node.labels) > -1) {\r\n                params.filter = \"(any type:/people/person type:/people/deceased_person type:/book/author type:/visual_art/visual_artist )\";\r\n\r\n                //if ($.inArray(\"Painter\", node.labels) > -1) {\r\n                //    params.domain = \"/visual_art\";\r\n                //}\r\n\r\n            }\r\n            else if ($.inArray(\"Group\", node.labels) > -1 || $.inArray(\"Period\", node.labels) > -1 ) {\r\n\r\n                params.filter = \"(any type:/visual_art/art_period_movement type:/architecture/architectural_style  type:/time/event   type:/book/book_subject)\";\r\n     \r\n            }\r\n            else if ($.inArray(\"Provenance\", node.labels) > -1) {\r\n\r\n            \r\n                params.filter = \"(any type:/people/ethnicity type:/location/country )\";\r\n              //  params.query = node.Name + \" people\";\r\n            }\r\n            else if ( ispicture)\r\n            {\r\n                params.domain = \"/visual_art\";\r\n            }\r\n\r\n            var out = { id: undefined, error: undefined };\r\n\r\n            $.getJSON(service_url + '?callback=?', params, function (response) {\r\n\r\n                $(response.result).each(function (i, e) {\r\n\r\n\r\n                    if (e.name === node.Name || e.name == node.Wikipagename || e.name.indexOf(node.Name) > -1 || e.name.indexOf(node.Lookup) > -1)\r\n                        {\r\n                        out = e;\r\n                        return false;\r\n                    }\r\n                    //if (e.notable && (e.notable.name === type || e.notable.name.indexOf('Art') > -1)) {\r\n                    //    out = e.mid;\r\n                    //    return false;\r\n                    //}\r\n                });\r\n\r\n     \r\n                out.response = response.result;\r\n\r\n                callback(out);\r\n\r\n            });\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n    \r\n        \r\n    })\r\n    .directive('freebase', ['freebase.service', 'neo', function (service, neo) {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'app/node/freebase/node.freebase.html',\r\n        scope: {\r\n            node: '=',\r\n            active:'='\r\n        },\r\n        link: function ($scope) {\r\n\r\n            var getPersonData = function (node, callback) {\r\n\r\n                service.getPersonData(node.FB_ID, function (data) {\r\n\r\n                    $.extend(node, data);\r\n                    if (node.FB_date_of_birth && !node.YearFrom) {\r\n                        node.YearFrom = parseInt(node.FB_date_of_birth.split('-')[0]);\r\n                    }\r\n                    if (node.FB_date_of_death && !node.YearTo) {\r\n                        node.YearTo = parseInt(node.FB_date_of_death.split('-')[0]);\r\n                    }\r\n                    callback(node);\r\n\r\n                });\r\n\r\n            }\r\n\r\n            var getBlurb = function (node, callback) {\r\n\r\n\r\n                service.getText(node, function (blurb) {\r\n\r\n                    $scope.$apply(function () {\r\n                        $.extend(node, blurb);\r\n                        if (node.FB_blurb && !node.Description) {\r\n                            node.Description = node.FB_blurb;\r\n                        }\r\n                        if (node.FB_blurb_full && !node.Text) {\r\n                            node.Text = node.FB_blurb_full;\r\n                        }\r\n                    });\r\n\r\n                    callback(node);\r\n\r\n                });\r\n\r\n            }\r\n\r\n\r\n            var getData = function (node, blurbOnly) {\r\n\r\n                getBlurb(node, function (updated) {\r\n\r\n                    if ($.inArray(\"Person\", updated.labels) > -1 && !blurbOnly) {\r\n\r\n                        getPersonData(updated, function (updatedPerson) {\r\n\r\n                            console.dir(updatedPerson);\r\n                            neo.saveProps(updatedPerson)\r\n                             .then(function (nid) {\r\n                                 console.log(nid + \" saved\");\r\n                             });\r\n                        });\r\n                    }\r\n                    else {\r\n\r\n                        neo.saveProps(updated)\r\n                         .then(function (nid) {\r\n                             console.log(nid + \" saved\");\r\n                         });\r\n                    }\r\n\r\n                })\r\n\r\n            }\r\n\r\n            $scope.reselect = function (node, mid, name) {\r\n\r\n                $scope.clear(node);\r\n\r\n                node.FB_ID = mid;\r\n                node.FB_name = name;\r\n                getData(node);\r\n\r\n\r\n            }\r\n\r\n            $scope.clear = function (node) {\r\n\r\n                node.FB_ID = null;\r\n\r\n                if (node.Text === node.FB_blurb_full) {\r\n                    delete node.Text;\r\n                }\r\n\r\n                if (node.Description === node.FB_blurb) {\r\n                    delete node.Description\r\n                }\r\n\r\n                if (node.FB_date_of_birth && node.YearFrom == parseInt(node.FB_date_of_birth.split('-')[0])) {\r\n                    delete node.YearFrom;\r\n                }\r\n\r\n                if (node.FB_date_of_death && node.YearTo == parseInt(node.FB_date_of_death.split('-')[0])) {\r\n                    delete node.YearTo;\r\n                }\r\n\r\n                for (var prop in node) {\r\n                    if (prop.indexOf('FB_') == 0) {\r\n                        delete node[prop];\r\n                    }\r\n                }\r\n\r\n                neo.saveProps(node)\r\n                           .then(function (nid) {\r\n                               console.log(nid + \" saved\");\r\n                           });\r\n\r\n            }\r\n          \r\n            var loaded = false;\r\n\r\n            var getFreebase = function () {\r\n\r\n                service.getId($scope.node, function (result) {\r\n                   \r\n                    $scope.$apply(function () {\r\n                        $scope.disambiguation = result.response;\r\n                        loaded = true;\r\n                    })\r\n\r\n                });\r\n                \r\n\r\n            }\r\n\r\n            $scope.$watch('node', function (node) {\r\n\r\n                if (node) {\r\n\r\n                    loaded = false;\r\n\r\n                    if ($scope.active) {\r\n                        getFreebase();\r\n                    }\r\n                  \r\n                }\r\n            });\r\n\r\n            $scope.$watch('active', function (active) {\r\n\r\n                if (active && $scope.node && !loaded) {\r\n\r\n                    getFreebase();\r\n                }\r\n\r\n\r\n            })\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n}])","angular.module('neograph.node.graphpanel',['neograph.neo', 'neograph.utils'])\r\n    .directive('nodegraphpanel', ['neo', 'utils', function (neo, utils) {\r\n        return {\r\n            replace: true,\r\n            restrict: 'E',\r\n            templateUrl: 'app/node/graphpanel/node.graphpanel.html',\r\n            scope: {\r\n                node: '='\r\n                , active: '='\r\n                ,window: '=?'\r\n                ,width: '=?'\r\n                ,height: '=?'\r\n            },\r\n            link: function ($scope, $element, $attrs) {\r\n                \r\n                \r\n                \r\n                \r\n                var network;\r\n                \r\n                var graph = {\r\n                    nodes: new vis.DataSet(),\r\n                    edges: new vis.DataSet()\r\n                };\r\n                \r\n                $scope.view = utils.newView('NodeGraph', 'NodeGraph');\r\n                \r\n                $scope.view.queryGenerator = {\r\n                    type: \"nodeGraph\",\r\n                    options: { node: $scope.node }\r\n                }\r\n                \r\n                $scope.$watch('node', function (n) {\r\n                    $scope.view.queryGenerator.options = { node: n };\r\n                })\r\n                \r\n                $scope.w = 200;\r\n                $scope.h = 200;\r\n                \r\n                $scope.$watch('active', function (active) {\r\n                    if (active && !network) {\r\n                        \r\n                    \r\n                        if ($scope.width && $scope.height) {\r\n                              $scope.w = $scope.width;\r\n                            $scope.h = $scope.height;\r\n                            \r\n\r\n                        }\r\n                        else if ($scope.window) {\r\n                          $scope.w = $scope.window.width;\r\n                            $scope.h = $scope.window.height - 170;\r\n                        }\r\n                        \r\n                        \r\n                        network = new vis.Network($element.find('.graphContainer')[0], graph, utils.graphOptions);\r\n                        network.setSize(($scope.w) + \"px\", ($scope.h) + \"px\");\r\n                        //fit to screen on resize\r\n                        network.on('resize', function (params) {\r\n                            network.zoomExtent({ duration: 1000, easingFunction: 'easeOutCubic' });\r\n                        });\r\n                        \r\n                 \r\n                    //network.zoomExtent({ duration: 1000, easingFunction: 'easeOutCubic' });\r\n                    }\r\n                });\r\n                \r\n                \r\n                \r\n                \r\n                $scope.$watch('view.data', function (data) {\r\n                    if ($scope.active) {\r\n                        console.log('drawing new graph');\r\n                        graph.nodes.clear();\r\n                        graph.edges.clear();\r\n                        var gArr = utils.toGraphData(data);\r\n                        graph.nodes.add(gArr.nodes);\r\n                        graph.edges.add(gArr.edges);\r\n                    }\r\n\r\n                });\r\n                \r\n                \r\n                $scope.$watch('window', function (w) {\r\n                    \r\n                    if (network && w) {\r\n                        network.setSize(($scope.window.width) + \"px\", ($scope.window.height - 170) + \"px\");\r\n                        network.zoomExtent({ duration: 1000, easingFunction: 'easeOutCubic' });\r\n                    }\r\n              \r\n             \r\n                });\r\n                \r\n                \r\n                $scope.$watch('width', function () {\r\n                    \r\n                    if (network) {\r\n                        network.setSize(($scope.width) + \"px\", ($scope.height - 170) + \"px\");\r\n                        network.zoomExtent({ duration: 1000, easingFunction: 'easeOutCubic' });\r\n                    }\r\n              \r\n             \r\n                });\r\n                $scope.$watch('height', function () {\r\n                    \r\n                    if (network) {\r\n                        network.setSize(($scope.width) + \"px\", ($scope.height - 170) + \"px\");\r\n                        network.zoomExtent({ duration: 1000, easingFunction: 'easeOutCubic' });\r\n                    }\r\n              \r\n             \r\n                });\r\n   \r\n\r\n\r\n            }\r\n        }\r\n    }])","angular.module('node.graphTypes',['neograph.neo'])\r\n.directive('graphTypes', function () {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'app/node/graphtypes/node.graphTypes.html',\r\n        scope: {\r\n            node: '=',\r\n            window: '='\r\n        }\r\n        ,\r\n        link: function ($scope) {\r\n\r\n\r\n\r\n\r\n            $scope.$watch('node', function (node) {\r\n\r\n\r\n                if (node) {\r\n\r\n                    var querys = [];\r\n\r\n                    var Lookup = node.Lookup;\r\n\r\n\r\n                    //if ($.inArray('User', node.labels) > -1 || $.inArray('Picture', node.labels) > -1 || $.inArray('Favourite', node.labels) > -1) {\r\n                    //    querys.push(\r\n                    //                          {\r\n                    //                              name: \"All immediate relationships\",\r\n                    //                              q: \"MATCH (c)-[r]-(d) where ID(c) = \" + node.id + \" return c,d,r\"\r\n                    //                          })\r\n                    //}\r\n                    //else {\r\n\r\n                    //    querys.push(\r\n                    //                          {\r\n                    //                              name: \"All immediate relationships\",\r\n                    //                              q: \"MATCH (c)-[r]-(d:Global) where ID(c) = \" + node.id + \" return c,d,r\"\r\n                    //                          })\r\n\r\n                    //}\r\n\r\n\r\n                    if ($.inArray(\"Provenance\", node.labels) > -1) {\r\n\r\n                        querys.push(\r\n                            {\r\n                                name: \"Provenance\",\r\n                                q: \"MATCH (c:Global:\" + Lookup + \")-[r]-(d:Global) where  not (c-[:TYPE_OF]-d) and not d.Lookup='\" + Lookup + \"' and not c.Lookup='\" + Lookup + \"'  return c,d,r\"\r\n                            })\r\n                    }\r\n\r\n                    if ($.inArray(\"Period\", node.labels) > -1) {\r\n\r\n                        querys.push(\r\n                            {\r\n                                name: \"Period\",\r\n                                q: \"MATCH (c:Global:\" + Lookup + \")-[r]-(d:Global) where  not (c-[:TYPE_OF]-d) and not d.Lookup='\" + Lookup + \"' and not c.Lookup='\" + Lookup + \"'  return c,d,r\"\r\n                            })\r\n                    }\r\n\r\n                    if ($.inArray(\"Theme\", node.labels) > -1) {\r\n\r\n                        querys.push(\r\n                            {\r\n                                name: \"Theme\",\r\n                                q: \"MATCH (c:Global:\" + Lookup + \")-[r]-(d:Global) where  not (c-[:TYPE_OF]-d) and not d.Lookup='\" + Lookup + \"' and not c.Lookup='\" + Lookup + \"'  return c,d,r\"\r\n                            })\r\n                    }\r\n\r\n                    if ($.inArray(\"Person\", node.labels) > -1) {\r\n\r\n                        querys.push(\r\n                            {\r\n                                name: \"Outbound Influence\",\r\n                              //  q: \"MATCH (c {Lookup:'\" + Lookup + \"'})-[r]->(d:Painter)  -[s]->(e:Painter)  -[t]->(f:Painter) return c,d,e,f,r,s,t\",\r\n                                q:\"MATCH (c {Lookup:'\" + Lookup + \"'})-[r]->(d:Painter) with c,d,r optional  match(d) -[s]->(e:Painter) return c,d,r,s,e \",\r\n                                connectAll: true\r\n                            })\r\n\r\n                        querys.push(\r\n                          {\r\n                              name: \"Inbound Influence\",\r\n                          //    q: \"MATCH (c {Lookup:'\" + Lookup + \"'})<-[r]-(d:Painter)  <-[s]-(e:Painter)  <-[t]-(f:Painter) return c,d,e,f,r,s,t\",\r\n                              q: \"MATCH (c {Lookup:'\" + Lookup + \"'})<-[r]-(d:Painter) with c,d,r optional  match(d) <-[s]-(e:Painter) return c,d,r,s,e \",\r\n                              connectAll: true\r\n                          })\r\n\r\n                    }\r\n\r\n                    if ($.inArray(\"Group\", node.labels) > -1) {\r\n\r\n                        querys.push({\r\n                            name: 'Group',\r\n                            q: \"match (n {Lookup:'\" + Lookup + \"'}) -[r]-(m:Global) -[s]-(p:Global) where not (n-[:TYPE_OF]-m) and not (m-[:TYPE_OF]-p) and (m:Painter or m:Group) and (p:Painter or p:Group) and not m:Provenance and not p:Provenance return n,r,m,s,p\"\r\n    ,\r\n                            connectAll: true\r\n                        });\r\n\r\n                    }\r\n\r\n\r\n                    if ($.inArray(\"Iconography\", node.labels) > -1) {\r\n\r\n\r\n                        querys.push({\r\n                            name: 'Iconography',\r\n                            q: \"MATCH (c:Global:\" + Lookup + \")-[r]-(d:Global)  where not (c-[:TYPE_OF]-d)  and not d.Lookup='\" + Lookup + \"' and (d:\" + Lookup + \" or d:Provenance or d:Group or d:Iconography or d:Place) return c,d,r\"\r\n                          ,\r\n                            connectAll: true\r\n                        });\r\n\r\n                    }\r\n\r\n                    if (!node.temp.isPicture && node.YearFrom && node.YearTo) {\r\n\r\n                        var yq = \"MATCH (c:Global)-[r]-(d:Global) where  not (c-[:TYPE_OF]-d) and \";\r\n                        yq += \"((c.YearTo >= \" + node.YearFrom + \" and c.YearTo<= \" + node.YearTo + \") or (c.YearFrom >= \" + node.YearFrom + \" and c.YearFrom<= \" + node.YearTo + \"))\";\r\n                        yq += \"and ((d.YearTo >= \" + node.YearFrom + \" and d.YearTo<= \" + node.YearTo + \") or (d.YearFrom >= \" + node.YearFrom + \" and d.YearFrom<= \" + node.YearTo + \"))\";\r\n                        yq += \" return c,d,r\";\r\n                        querys.push({\r\n                            name: 'YearFromYearTo',\r\n                            q: yq\r\n\r\n                         ,\r\n                            connectAll: true\r\n                        });\r\n\r\n                    }\r\n\r\n                    angular.forEach(querys, function (query) {\r\n\r\n                        query.view = node.Lookup + \" - \" + query.name;\r\n                        query.type = \"Graph\";\r\n\r\n                    })\r\n\r\n\r\n                    $scope.querys = querys;\r\n\r\n\r\n                }\r\n                else {\r\n\r\n                    $scope.querys = [];\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n            });\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n})","angular.module('node.imageRelationships',['neograph.neo'])\r\n    .directive('imageRelationships', ['neo', function (neo) {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: '/app/node/imageRelationships/node.imageRelationships.html',\r\n        scope: {\r\n            node: '=',\r\n            query: '=',\r\n            window:'='\r\n        }\r\n        ,\r\n        link: function ($scope) {\r\n\r\n         \r\n\r\n\r\n            $scope.$watch('node', function (node) {\r\n\r\n\r\n                if (node) {\r\n\r\n\r\n\r\n                    var querys = [];\r\n\r\n                    querys.push(\r\n                         {\r\n                             name: \"Linked pictures\",\r\n                             q: \"MATCH (c)-[r]-(d:Picture) where ID(c) = \" + node.id + \" return d\"\r\n                         })\r\n\r\n\r\n                    if ( node.YearFrom || node.YearTo) {\r\n                        var yq;\r\n\r\n                        if (node.YearFrom && node.YearTo) {\r\n                            yq = {\r\n                                q: \"MATCH (c:Picture) where  (c.YearTo >= \" + node.YearTo + \" and c.YearTo<= \" + node.YearTo + \") or (c.YearFrom >= \" + node.YearFrom + \" and c.YearFrom<= \" + node.YearFrom + \") return c\"\r\n                            }\r\n                        }\r\n                        else if (node.YearTo) {\r\n                            yq = {\r\n                                q: \"MATCH (c:Picture) where  (c.YearTo = \" + node.YearTo + \" ) or (c.YearFrom = \" + node.YearTo + \" ) return c\"\r\n                            };\r\n                        }\r\n                        else if (node.YearFrom) {\r\n                            yq = {\r\n                                q: \"MATCH (c:Picture) where  (c.YearTo = \" + node.YearFrom + \") or (c.YearFrom = \" + node.YearFrom + \" ) return c\"\r\n                            };\r\n                        }\r\n                        yq.name = \"Contemporaneous\";\r\n                        yq.type = \"Grid\";\r\n\r\n\r\n                        yq.preview = yq.q + \" limit 3\";\r\n                        querys.push(yq);\r\n\r\n                    }\r\n\r\n\r\n                    angular.forEach(node.labels, function (label) {\r\n\r\n                        if (label != \"Picture\" && label != \"Painting\") {\r\n                            querys.push(\r\n                          {\r\n                              isLabel:true,\r\n                              name:  label,\r\n                              q: \"MATCH (c:Picture:\" + label + \") return c\",\r\n                              preview: \"MATCH (c:Picture:\" + label + \")  where ID(c)<>\" + node.id + \"  return c limit 3\",\r\n                              view: label,\r\n                              type:\"Grid\",\r\n                              queryGenerator: { id: \"nodeFilter\", options: { node: { Lookup: label } } }\r\n                          })\r\n\r\n                        }\r\n\r\n                    })\r\n\r\n                  \r\n                    //if (node.YearFrom && node.YearTo) {\r\n\r\n                    //    var yq = \"MATCH (c:Global)-[r]-(d:Global) where  not (c-[:TYPE_OF]-d) and \";\r\n                    //    yq += \"((c.YearTo >= \" + node.YearFrom + \" and c.YearTo<= \" + node.YearTo + \") or (c.YearFrom >= \" + node.YearFrom + \" and c.YearFrom<= \" + node.YearTo + \"))\";\r\n                    //    yq += \"and ((d.YearTo >= \" + node.YearFrom + \" and d.YearTo<= \" + node.YearTo + \") or (d.YearFrom >= \" + node.YearFrom + \" and d.YearFrom<= \" + node.YearTo + \"))\";\r\n                    //    yq += \" return c,d,r\";\r\n                    //    querys.push({\r\n                    //        name: 'YearFromYearTo',\r\n                    //        q: yq\r\n\r\n                    //     ,\r\n                    //        connectAll: true\r\n                    //    });\r\n\r\n                    //}\r\n\r\n\r\n\r\n                    $scope.querys = querys;\r\n\r\n                    angular.forEach(querys,function(query){\r\n                    \r\n                        neo.getGraph(query.preview || query.q)\r\n                       .then(function (g) {\r\n                                \r\n                           query.hasData = !$.isEmptyObject(g.nodes);\r\n                        \r\n\r\n                           query.data = g;\r\n                       });\r\n                    });\r\n\r\n\r\n                    //   console.log(querys);\r\n\r\n                }\r\n                else {\r\n\r\n                    $scope.querys = [];\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n            });\r\n\r\n\r\n\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n}])","angular.module('neograph.node.images',['neograph.neo'])\r\n    .controller('NodeImagesCtrl', ['neo', function (neo) {\r\n  \r\n\r\n            $scope.images = [];\r\n            \r\n            if ($stateParams.node){\r\n                nodeService.get($stateParams.node,true).then(function(node){\r\n                        $scope.node = node;\r\n                    }); \r\n            }\r\n\r\n            var loaded = false;\r\n\r\n            //load images on active change or on node change if active\r\n            $scope.$watch('active', function (active) {\r\n\r\n                if ($scope.node && active && !loaded) {\r\n                    getImages();\r\n                }\r\n            });\r\n\r\n            $scope.$watch('node', function (node) {\r\n                loaded = false;\r\n                if (!$scope.active) {\r\n                    $scope.images = [];\r\n                }\r\n                if (node && $scope.active) {\r\n                    getImages();\r\n                }\r\n            });\r\n\r\n            var getImages = function () {\r\n\r\n                neo.getImages($scope.node).then(function (images) {\r\n                    $scope.images = images;\r\n                    loaded = true;\r\n                })\r\n\r\n            }\r\n\r\n            $scope.openGridTab = function (node) {\r\n\r\n                $scope.publish(\"query\", {\r\n                    view: node.Lookup,\r\n                    type: \"Grid\",\r\n                    queryGenerator: { id: \"nodeFilter\", options: { node: node } }\r\n                });\r\n\r\n            }\r\n\r\n    \r\n}]);","angular.module('neograph.node.multiple',['neograph.neo', 'neograph.utils'])\r\n    .directive('multiple', ['neo', 'utils', function (neo, utils) {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'app/node/multiple/node.multiple.html',\r\n        scope: {\r\n            nodes: '='\r\n        },\r\n        link: function ($scope) {\r\n\r\n            $scope.$watch('nodes', function (nodes) {\r\n\r\n                if (nodes) {\r\n                    var allLabels = nodes.map(function (node) {\r\n                        return node.labels;\r\n                    });\r\n\r\n                    $scope.labels = allLabels.shift().filter(function (v) {\r\n                        return allLabels.every(function (a) {\r\n                            return a.indexOf(v) !== -1;\r\n                        });\r\n                    });\r\n\r\n                    $scope.originalLabels = angular.copy($scope.labels);//store for saving so we know what to change\r\n\r\n                }\r\n\r\n            });\r\n\r\n            $scope.addLabel = function (item) {\r\n\r\n                if ($scope.labels.indexOf(item.Label) === -1) {\r\n                    $scope.labels.push(item.Label);\r\n                }\r\n            }\r\n            $scope.removeLabel = function (label) {\r\n\r\n                var ind = $scope.labels.indexOf(label);\r\n                if (ind > -1) {\r\n                    $scope.labels.splice(ind, 1);\r\n                }\r\n\r\n            }\r\n\r\n            $scope.save = function () {\r\n                neo.saveMultiple({\r\n                    nodes: $scope.nodes,\r\n                    labels: $scope.labels,\r\n                    originalLabels: $scope.originalLabels\r\n                });\r\n            }\r\n\r\n            $scope.restore = function () {\r\n                var restored = [];\r\n                angular.forEach($scope.nodes, function (node) {\r\n                    neo.restoreNode(node).then(function () {\r\n                        restored.push(node);\r\n                        if (restored.length === $scope.nodes.length) {\r\n                            $scope.publish(\"restored\", { selection: { nodes: restored } });\r\n                            $scope.selection.multiple = undefined;\r\n                            $scope.tabs = [];\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n\r\n            $scope.delete = function () {\r\n                var deleted = [];\r\n                angular.forEach($scope.nodes, function (node) {\r\n                    neo.deleteNode(node).then(function () {\r\n                        deleted.push(node);\r\n                        if (deleted.length === $scope.nodes.length) {\r\n                            $scope.publish(\"deleted\", { selection: { nodes: deleted } });\r\n                            $scope.selection.multiple = undefined;\r\n                            $scope.tabs = [];\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n\r\n            $scope.destroy = function () {\r\n                var deleted = [];\r\n                angular.forEach($scope.nodes, function (node) {\r\n                    neo.destroyNode(node).then(function () {\r\n                        deleted.push(node);\r\n                        if (deleted.length === $scope.nodes.length) {\r\n                            $scope.publish(\"deleted\", { selection: { nodes: deleted } });\r\n                            $scope.selection.multiple = undefined;\r\n                            $scope.tabs = [];\r\n                        }\r\n                    });\r\n                });\r\n            }\r\n          \r\n\r\n            //$scope.selection.multiple = new (function (nodes, labels) {\r\n            //    var self = this;\r\n            //    this.nodes = nodes;\r\n            //    this.labels = labels;\r\n             \r\n\r\n             \r\n\r\n\r\n            //})(params.selection.nodes, labels);\r\n\r\n        }\r\n    }\r\n}]);","angular.module('neograph.node.properties',['neograph.node.service', 'neograph.session', 'neograph.utils'])\r\n    .controller('EditPropertiesCtrl',  function (nodeService, session, utils,$scope,$stateParams) {\r\n       \r\n                if ($stateParams.node){\r\n                    nodeService.get($stateParams.node,true).then(function(node){\r\n                            $scope.node = node;\r\n                        }); \r\n                }\r\n                \r\n                $scope.deleteNode = function (n) {\r\n                    \r\n                    nodeService.delete(n)\r\n                    .then(function (deleted) {\r\n                        \r\n                        $scope.selection.selectedNode = deleted;\r\n                        //this assumes that the current view is not of deleted items, otherwise this would be inconsistent\r\n                        //let view handle its own data ?\r\n                        delete $scope.activeView.data.nodes[n.id];\r\n                        $scope.publish(\"deleted\", { selection: { nodes: [n] } });\r\n\r\n                    });\r\n                }\r\n                \r\n                \r\n                $scope.destroyNode = function (n) {\r\n                    \r\n                    nodeService.destroy(n)\r\n                    .then(function (deleted) {\r\n                        \r\n                        $scope.selection.selectedNode = undefined;\r\n                        \r\n                        //this assumes that the current view is not of deleted items, otherwise this would be inconsistent\r\n                        //let view handle its own data ?\r\n                        delete $scope.activeView.data.nodes[n.id];\r\n                        \r\n                        $scope.publish(\"deleted\", { selection: { nodes: [n] } });\r\n\r\n                    });\r\n\r\n                }\r\n                \r\n                $scope.saveNode = function (n) {\r\n        \r\n                    nodeService.save(n, session.user)\r\n                    .then(function (node) {\r\n                        \r\n                        $scope.node = node;\r\n                        \r\n                        var newData = {};\r\n                        newData[node.id] = node;\r\n                        $scope.publish(\"dataUpdate\", newData)\r\n                        //if type, refresh types\r\n                        if (node.class == \"Type\") {\r\n                            utils.refreshTypes();\r\n                        }\r\n                        \r\n                        $(node.temp.links).each(function (i, e) { e.editing = undefined; })\r\n\r\n                    });\r\n                }\r\n                \r\n                \r\n                $scope.restoreNode = function (n) {\r\n                    nodeService.restore(n).then(function (node) {\r\n                        $scope.node = node;\r\n                        var newData = {};\r\n                        newData[node.id] = node;\r\n                        $scope.publish(\"dataUpdate\", newData)\r\n                    });\r\n                }\r\n                \r\n                \r\n                $scope.$watch(\"node\", function (node) {\r\n                    if (node) {\r\n                        \r\n                        node.labelled = node.labelled || [];\r\n                        \r\n                        $(\".labelEdit input\").val('');\r\n                        \r\n                        $scope.deleted = node.labels.indexOf('Deleted') > -1;\r\n                    }\r\n\r\n                });\r\n                \r\n                \r\n                \r\n                \r\n                //tie label value to lookup if empty or the same already\r\n                $scope.$watch(\"node.lookup\", function (lookup, beforechange) {\r\n                    if (lookup) {\r\n                        \r\n                        if ($scope.node.label != undefined && $scope.node.label.trim() == \"\" || $scope.node.label == beforechange) {\r\n                            $scope.node.label = lookup;\r\n\r\n                        }\r\n                 \r\n\r\n                    }\r\n\r\n                });\r\n\r\n              \r\n                \r\n                \r\n                $scope.nodeTypes = [];\r\n                \r\n                \r\n    //update tabs & properties if labels change\r\n    var settingPropsAndTabs = false;\r\n \r\n /*\r\n    //how can i stop this firing for newly loaded nodes ?\r\n    $scope.$watchCollection('selection.selectedNode.labels', function (labels) {\r\n     \r\n        if (labels && labels.length && !settingPropsAndTabs ) {\r\n\r\n            settingPropsAndTabs = true;\r\n\r\n            nodeService.getProps(labels).then(function (out) {\r\n\r\n                console.dir($scope.selection.selectedNode);\r\n                $scope.selection.selectedNode = $.extend(null,out.properties, $scope.selection.selectedNode);\r\n                $scope.selection.selectedNode.temp.tabs = out.tabs;\r\n                $scope.tabs = $scope.selection.selectedNode.temp.tabs;\r\n          \r\n                settingPropsAndTabs = false;\r\n            })\r\n        }\r\n    });\r\n    */\r\n                \r\n                $scope.$watchCollection(\"node.labels\", function (labels) {\r\n                    console.log('labels changed')\r\n                    console.log(labels);\r\n                    if (labels) {\r\n                        \r\n                        var selectedTypes = [];\r\n                        angular.forEach($scope.node.labels, function (l) {\r\n                            if (utils.types[l]) {\r\n                                selectedTypes.push({ lookup: l, class: 'Type' });\r\n                            }\r\n                        });\r\n                        \r\n                        $scope.nodeTypes = selectedTypes;\r\n                        \r\n                        //     console.log(selectedTypes);\r\n                        \r\n                        //set type if not yet set and one label added that is a type\r\n                        if (!$scope.node.class && $scope.nodeTypes.length === 1) {\r\n                            \r\n                            $scope.node.class = $scope.nodeTypes[0].lookup; //for types the lookup will always be the label\r\n\r\n                        }\r\n\r\n                    //get properties relating to chosen labels and extend node to enable them\r\n                    //nodeService.getProps(labels).then(function (out) {\r\n                    //    console.log('extending node');\r\n                    //    console.log(out);\r\n                    //    console.log(out.props);\r\n                    //    $scope.node = $.extend(out.props,$scope.node);\r\n                    //    console.log($scope.node);\r\n                    //});\r\n\r\n\r\n                    }\r\n\r\n                });\r\n                \r\n                //can be called from clicking label, in which case item is text value, or from the typeahead in which case it is an object with Lookup property\r\n                $scope.setType = function (item) {\r\n                    //   var itemtext = item.Label ||item.Lookup\r\n                    console.log(item);\r\n                    if (utils.isType(item.label)) {\r\n                        $scope.node.class = item.label;\r\n                    }\r\n                }\r\n                \r\n      \r\n                \r\n                $scope.$watch('newPredicate', function (v) {\r\n                    \r\n                    if (v) {\r\n                        $scope.addRelationship({ lookup: v.toUpperCase().replace(/ /g, \"_\") });\r\n                    }\r\n                });\r\n                \r\n                \r\n                \r\n                \r\n                $scope.addRelationship = function (item) {\r\n                    \r\n                    \r\n                    var p = predicateFactory.create({lookup:item.lookup,direction: \"out\"});//currently no way to select 'in' relationships\r\n                    \r\n              \r\n                    $scope.node.relationships = $scope.node.relationships || {};\r\n                    if (!$scope.node.relationships[p.toString()]) {\r\n                        $scope.node.relationships[p.toString()] = { predicate: p, items: [] };\r\n                    }\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n\r\n           \r\n\r\n\r\n            });","angular.module('neograph.node.relationships',['neograph.node.service', 'neograph.session', 'neograph.utils'])\r\n    .controller('EditRelationshipsCtrl',  function (nodeService, session, utils,$scope,$stateParams) {\r\n       \r\n                if ($stateParams.node){\r\n                    nodeService.get($stateParams.node,true).then(function(node){\r\n                            $scope.node = node;\r\n                        }); \r\n                }\r\n\r\n                $scope.$watch(\"node\", function (node) {\r\n                    if (node) {\r\n                        \r\n                        node.labelled = node.labelled || [];\r\n                        \r\n                        $(\".labelEdit input\").val('');\r\n                        \r\n                        $scope.deleted = node.labels.indexOf('Deleted') > -1;\r\n                    }\r\n\r\n                });\r\n                \r\n                \r\n                \r\n                \r\n             \r\n\r\n          \r\n                \r\n                \r\n                $scope.nodeTypes = [];\r\n                \r\n                \r\n    //update tabs & properties if labels change\r\n    var settingPropsAndTabs = false;\r\n \r\n /*\r\n    //how can i stop this firing for newly loaded nodes ?\r\n    $scope.$watchCollection('selection.selectedNode.labels', function (labels) {\r\n     \r\n        if (labels && labels.length && !settingPropsAndTabs ) {\r\n\r\n            settingPropsAndTabs = true;\r\n\r\n            nodeService.getProps(labels).then(function (out) {\r\n\r\n                console.dir($scope.selection.selectedNode);\r\n                $scope.selection.selectedNode = $.extend(null,out.properties, $scope.selection.selectedNode);\r\n                $scope.selection.selectedNode.temp.tabs = out.tabs;\r\n                $scope.tabs = $scope.selection.selectedNode.temp.tabs;\r\n          \r\n                settingPropsAndTabs = false;\r\n            })\r\n        }\r\n    });\r\n    */\r\n                \r\n             \r\n           \r\n      \r\n                \r\n                $scope.$watch('newPredicate', function (v) {\r\n                    \r\n                    if (v) {\r\n                        $scope.addRelationship({ lookup: v.toUpperCase().replace(/ /g, \"_\") });\r\n                    }\r\n                });\r\n                \r\n                \r\n                \r\n                \r\n                $scope.addRelationship = function (item) {\r\n                    \r\n                    \r\n                    var p = predicateFactory.create({lookup:item.lookup,direction: \"out\"});//currently no way to select 'in' relationships\r\n                    \r\n              \r\n                    $scope.node.relationships = $scope.node.relationships || {};\r\n                    if (!$scope.node.relationships[p.toString()]) {\r\n                        $scope.node.relationships[p.toString()] = { predicate: p, items: [] };\r\n                    }\r\n\r\n\r\n\r\n                }\r\n\r\n\r\n\r\n\r\n           \r\n\r\n\r\n            });","angular.module('neograph.node.wikipedia',['neograph.neo'])\r\n    .factory('wikiservice',function(){\r\n       \r\n       var wikiTabs = function (data,page) {\r\n\r\n        var tabs = [];\r\n\r\n        if (data.parse) {\r\n\r\n       //     console.log(data.parse.text[\"*\"]);\r\n            var $wikiDOM = $(\"<document>\" + data.parse.text[\"*\"] + \"</document>\");\r\n\r\n            // handle redirects\r\n            if ($wikiDOM.find('ul.redirectText').length > 0) {\r\n              \r\n                tabs = { redirect: $wikiDOM.find(\"ul.redirectText li a\").attr(\"title\") };\r\n\r\n                //$wikiDOM.find('li:contains(\"REDIRECT\") a').css(\"cursor\", \"pointer\");\r\n                //$wikiDOM.find('li:contains(\"REDIRECT\") a').each(function () {\r\n\r\n                //    $(this).replaceWith($(this).text());\r\n\r\n                //});\r\n\r\n                //if ($wikiDOM.find('li:contains(\"REDIRECT\")').length == 1) {\r\n                //    // self.getItem().wikiPageName = ;\r\n                //    var redirectTo = $wikiDOM.find('li:contains(\"REDIRECT\")').text().replace('REDIRECT', '').trim();\r\n\r\n                //    service.getWiki(redirectTo).done(function (data) {\r\n                //        self.populateWiki(data);\r\n                //    });\r\n\r\n\r\n                //}\r\n                //else {\r\n\r\n                //    self.wiki($wikiDOM);\r\n                //    self.loaded(true);\r\n                //    self.loading(false);\r\n\r\n\r\n                //}\r\n\r\n            }\r\n            else {\r\n\r\n                var images = $(\"<div></div>\");\r\n\r\n\r\n                $wikiDOM.find(\".image\").each(function (i, e) {\r\n\r\n                    $(e).attr(\"href\", $(e).attr(\"href\").replace(\"/wiki/\", \"https://en.wikipedia.org/wiki/\" + page.replace(\" \", \"_\") + \"#/media/\"))\r\n                    .attr(\"target\", \"_blank\").css({\"padding-right\": \"5px\",\"padding-bottom\": \"5px\"});\r\n\r\n                });\r\n\r\n\r\n                $wikiDOM.find(\".image\").appendTo(images);\r\n\r\n               \r\n\r\n                $wikiDOM.find(\"p\").css({ \"margin-bottom\": \"4px\", \"clear\": \"left\" });\r\n\r\n\r\n                //$wikiDOM.find(\"p,.thumb,.thumbinner\").css({ \"width\": \"340px\" });\r\n                $wikiDOM.find(\"p,.thumb,.thumbinner\").css({ \"width\": \"100%\" });\r\n\r\n                // $wikiDOM.find(\".gallery.p,.gallery.thumb,.gallery.thumbinner\").css({ \"width\": \"\" });\r\n\r\n                // $wikiDOM.find(\"h2,h3\").css({ \"margin-top\": \"4px\", \"float\": \"left\", \"clear\": \"left\" });\r\n                //$wikiDOM.find(\"h2,h3,h4\").css({ \"margin-top\": \"4px\", \"margin-bottom\": \"2px\", \"float\": \"left\", \"clear\": \"left\", \"width\": \"340px\", \"overflow\": \"hidden\" });\r\n                $wikiDOM.find(\"h2,h3,h4\").css({ \"margin-top\": \"4px\", \"margin-bottom\": \"2px\", \"float\": \"left\", \"clear\": \"left\", \"width\": \"100%\", \"overflow\": \"hidden\" });\r\n                $wikiDOM.find(\"#toc\").remove();\r\n                $wikiDOM.find(\".editsection\").remove();\r\n                $wikiDOM.find(\".magnify\").remove();\r\n                $wikiDOM.find(\".reflist\").remove();\r\n                $wikiDOM.find(\"img\").css({ \"display\": \"block\", \"float\": \"left\", \"margin-right\": \"3px\", \"margin-bottom\": \"3px\" });\r\n                $wikiDOM.find(\".thumb,.thumbinner\").css({ \"float\": \"left\", \"margin-right\": \"3px\", \"margin-bottom\": \"3px\" });\r\n                $wikiDOM.find(\".thumbcaption\").css({ \"font-size\": \"11px\" });\r\n                $wikiDOM.find(\".plainlinks\").remove();\r\n                $wikiDOM.find(\"#navbox\").remove();\r\n                $wikiDOM.find(\".rellink\").remove();\r\n                $wikiDOM.find(\".references\").remove();\r\n                $wikiDOM.find(\".IPA\").remove();\r\n                $wikiDOM.find(\"sup\").remove();\r\n                //$wikiDOM.find(\"dd,blockquote\").css({ \"margin\": \"10px\", \"width\": \"340px\", \"font-size\": \"11px\" });\r\n                $wikiDOM.find(\"dd,blockquote\").css({ \"margin\": \"0px\", \"width\": \"\", \"font-size\": \"11px\", \"margin-bottom\": \"10px\", \"margin-top\": \"7px\" });\r\n                $wikiDOM.find(\"blockquote p\").css({ \"font-size\": \"11px\" });\r\n                $wikiDOM.find(\".navbox, .vertical-navbox\").remove(); //nb this has interesting stuff in it\r\n                $wikiDOM.find(\"#persondata\").remove();\r\n                $wikiDOM.find(\"#Footnotes\").parent().remove();\r\n                $wikiDOM.find(\"#References\").parent().remove();\r\n                $wikiDOM.find(\"#Bibliography\").parent().remove();\r\n                $wikiDOM.find(\".refbegin\").remove();\r\n                $wikiDOM.find(\".dablink\").remove();\r\n                $wikiDOM.find(\"small\").remove(); //a bit too radical?\r\n                $wikiDOM.find(\"img[alt='Wikisource-logo.svg'], img[alt='About this sound'], img[alt='Listen']\").remove();\r\n                $wikiDOM.find(\".mediaContainer\").remove();\r\n                //remove links - todo:leave external links ?\r\n                $wikiDOM.find(\"a\").each(function () { $(this).replaceWith($(this).html()); })\r\n\r\n                $wikiDOM.find(\".gallery\").find(\"p\").css({ \"width\": \"\", \"font-size\": \"11px\", \"float\": \"left\", \"clear\": \"left\" });\r\n                $wikiDOM.find(\".gallery\").find(\".thumb\").css({ \"width\": \"\" });\r\n                $wikiDOM.find(\".gallerybox\").css(\"height\", \"220px\");\r\n                $wikiDOM.find(\".gallerybox\").css(\"float\", \"left\");\r\n\r\n                $wikiDOM.find(\"table\").css({ \"background\": \"none\", \"width\": \"\", \"max-width\": \"\", \"color\": \"\" });\r\n\r\n                $wikiDOM.find(\".gallery\").remove();\r\n                $wikiDOM.find(\"#gallery\").parent().remove();\r\n                $wikiDOM.find(\"#notes\").parent().remove();\r\n                $wikiDOM.find(\"#sources\").parent().remove();\r\n\r\n                //radical - remoces all tables\r\n                $wikiDOM.find(\"table\").remove();\r\n\r\n\r\n                $wikiDOM.find(\"h1,h2,h3,h4\").next().css({ \"clear\": \"left\" });\r\n\r\n                //remove description lists\r\n                $wikiDOM.find(\"dl\").remove();\r\n                //removes images\r\n                $wikiDOM.find(\".thumb\").remove();\r\n\r\n\r\n                $wikiDOM.find(\"ul,.cquote\").css({ \"float\": \"left\", \"clear\": \"left\" });\r\n\r\n\r\n\r\n                $wikiDOM.find(\".infobox, .vcard\").remove();\r\n                $wikiDOM.find(\".thumbimage\").css({ \"max-width\": \"150px\", \"height\": \"auto\" });\r\n\r\n                $wikiDOM.find(\".mw-editsection\").remove();\r\n\r\n\r\n                $wikiDOM.html($wikiDOM.html().replace('()', ''));\r\n                $wikiDOM.html($wikiDOM.html().replace('(; ', '('));\r\n\r\n\r\n\r\n                //    $wikiDOM.prepend(\"<h2>\" + self.query() + \"</h2>\");\r\n\r\n\r\n                $wikiDOM.find(\"h2\").css({ \"cursor\": \"pointer\", \"color\": \"rgba(0,85,128,1)\", \"font-size\": \"20px\" });\r\n                $wikiDOM.find(\"h3\").css({ \"font-size\": \"18px\" });\r\n                $wikiDOM.find('#Gallery').parent().nextUntil(\"h2\").andSelf().remove();\r\n                $wikiDOM.find('#See_also').parent().nextUntil(\"h2\").andSelf().remove();\r\n                $wikiDOM.find('#Notes').parent().nextUntil(\"h2\").andSelf().remove();\r\n                $wikiDOM.find('#External_links').parent().nextUntil(\"h2\").andSelf().remove();\r\n                $wikiDOM.find('#Selected_works').parent().nextUntil(\"h2\").andSelf().remove();\r\n                $wikiDOM.find('#Sources').parent().nextUntil(\"h2\").andSelf().remove();\r\n                $wikiDOM.find('#Other_reading').parent().nextUntil(\"h2\").andSelf().remove();\r\n                $wikiDOM.find('#Further_reading').parent().nextUntil(\"h2\").andSelf().remove();\r\n                $wikiDOM.find('#Resources').parent().nextUntil(\"h2\").andSelf().remove();\r\n                $wikiDOM.find('#Further_reading_and_sources').parent().nextUntil(\"h2\").andSelf().remove();\r\n                $wikiDOM.find('#List_of_paintings').parent().nextUntil(\"h2\").andSelf().remove();\r\n                $wikiDOM.find('#Self-portraits').parent().nextUntil(\"h2\").andSelf().remove();\r\n                $wikiDOM.find('#Selected_paintings').parent().nextUntil(\"h2\").andSelf().remove();\r\n                $wikiDOM.find('#References_and_sources').parent().nextUntil(\"h2\").andSelf().remove();\r\n                $wikiDOM.find('#Partial_list_of_works').parent().nextUntil(\"h2\").andSelf().remove();\r\n                $wikiDOM.find('#Notes_and_references').parent().nextUntil(\"h2\").andSelf().remove();\r\n\r\n                $wikiDOM.find('[id^=Selected_works]').parent().nextUntil(\"h2\").andSelf().remove();\r\n                $wikiDOM.find('[id^=Books]').parent().nextUntil(\"h2\").andSelf().remove();\r\n                //    $wikiDOM.find('#Books/Essays').parent().nextUntil(\"h2\").andSelf().remove();\r\n\r\n\r\n\r\n                //var $menu = $tabs.find(\"#tabmenu\");\r\n                //var $content = $tabs.find(\"#tabcontent\");\r\n\r\n                var $introTab = $(\"<div></div>\");\r\n                $wikiDOM.find(\"p:first\").nextUntil(\"h2\").andSelf().appendTo($introTab);\r\n                if ($introTab.text().indexOf(\"Redirect\") === -1 && $introTab.text().indexOf(\"may refer to\") === -1) {\r\n                    $introTab.find('ul').remove();\r\n                }\r\n                if ($introTab.html()) {\r\n                    tabs.push({\r\n                        header: \"Summary\",\r\n                        content: $introTab.html().replace('/; /g', '')\r\n                    });\r\n                }\r\n\r\n\r\n                $wikiDOM.find(\"h2\").each(function (i, e) {\r\n\r\n                    let $tab = $(\"<div></div>\");\r\n                    $(e).nextUntil(\"h2\").appendTo($tab);\r\n                    if ($tab.html()) {\r\n\r\n                        tabs.push({\r\n                            header: $(e).text(),\r\n                            content: $tab.html()\r\n                        });\r\n                    }\r\n\r\n                });\r\n\r\n                if (images.html()) {\r\n\r\n                    images.find(\"img\").css({ \"width\": \"250px\", \"marginBottom\": \"5px\" });\r\n\r\n                    tabs.push({\r\n                        header: \"Images\",\r\n                        content: images.html()\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n        return tabs;\r\n\r\n    }\r\n        \r\n        \r\n       var getWiki = function (page, callback) {\r\n\r\n            $.getJSON('http://en.wikipedia.org/w/api.php?action=parse&format=json&callback=?',\r\n                  {\r\n                      page: page,\r\n                      prop: 'text',\r\n                      //prop: 'wikitext',\r\n                      uselang: 'en'\r\n                  },\r\n                  function (data) {\r\n                      console.log(data);\r\n                      var tabs = wikiTabs(data, page);\r\n\r\n                      if (tabs.redirect) {\r\n\r\n                          getWiki(tabs.redirect, callback);\r\n\r\n                      }\r\n                      else {\r\n                          callback(tabs);\r\n                      }\r\n\r\n\r\n                  });\r\n       } \r\n                 \r\n                 \r\n        return {\r\n\r\n            getPage: function (page, callback) {\r\n\r\n                getWiki(page, callback);\r\n\r\n            }\r\n        }\r\n        \r\n        \r\n    })\r\n    .directive('wikipedia', ['wikiservice', 'neo',function (wikiservice,neo) {\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'app/node/wikipedia/node.wikipedia.html',\r\n        scope: {\r\n            node: '=',\r\n            window: '=',\r\n            active:'='\r\n        },\r\n        link: function ($scope,$element) {\r\n\r\n            $scope.tabs = [];\r\n\r\n            $scope.setActiveTab = function (tab) {\r\n                $scope.activeTab = tab;\r\n            }\r\n       \r\n            var loaded = false;\r\n            $scope.$watch('node', function (node) {\r\n                if (node) {\r\n                    loaded = false;\r\n                    $scope.page = node.Wikipagename || node.Name || node.Title;\r\n                }\r\n\r\n            });\r\n\r\n            $scope.savePage = function () {\r\n\r\n                $scope.node.Wikipagename = $scope.page;\r\n                neo.saveWikipagename($scope.node).then(function (node) {\r\n                    $scope.page = node.Wikipagename;\r\n                });\r\n\r\n            }\r\n\r\n            var getPage = function () {\r\n\r\n                wikiservice.getPage($scope.page, function (tabs) {\r\n\r\n                    $scope.tabs = tabs;\r\n                    $scope.activeTab = $scope.tabs[0];\r\n                    $scope.$digest();\r\n                    $($element).find('.wikidropdown').dropdown();\r\n                    loaded = true;\r\n                });\r\n            }\r\n\r\n            $scope.$watch('page', function (page) {\r\n\r\n                if (page && $scope.active) {\r\n\r\n                    getPage();\r\n                }\r\n                else {\r\n                    $scope.tabs = [];\r\n                }\r\n\r\n            });\r\n\r\n            $scope.$watch('active', function (active) {\r\n\r\n                if ($scope.page && active && !loaded) {\r\n\r\n                    getPage();\r\n\r\n                }\r\n\r\n\r\n            });\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n}])","angular.module('neograph.query.generator.favouritesFilter',['neograph.neo'])\r\n.directive('favouritesFilter', ['neo', function (neo) {\r\n\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'app/query/generator/favouritesFilter.html',\r\n        scope: {\r\n            options: '='\r\n            ,\r\n            generated: '='\r\n        },\r\n        link: function ($scope, $element, $attrs) {\r\n\r\n\r\n            $scope.filters = [];\r\n            $scope.node = {};\r\n            var labels = [];\r\n            $scope.$watch('options', function (options) {\r\n                if (options) {\r\n                    $scope.node = options.user;\r\n                }\r\n            });\r\n\r\n            $scope.$watch('node', function (user) {\r\n                load();\r\n            });\r\n\r\n            var load = function () {\r\n                if ($scope.node) {\r\n                    labels = [$scope.node.Lookup, 'Favourite'];\r\n                    getFilters();\r\n                    $scope.enabledFilters = [];\r\n                    $scope.process();\r\n                }\r\n\r\n            }\r\n\r\n            var getFilters = function () {\r\n                if (labels && labels.length) {\r\n\r\n                    var labelQuery = \"match (a:\" + labels.join(':') + \") - [] -> (b) return distinct(LABELS(b))\";\r\n\r\n                    neo.getDistinctLabelsQuery(labelQuery)\r\n                    .then(function (l) {\r\n\r\n                        //remove filter for this node as it is duplicating\r\n                        angular.forEach(labels, function (lab) {\r\n                            l.splice($.inArray(lab, l), 1);\r\n                        });\r\n                        $scope.filters = l;\r\n\r\n                    });\r\n                }\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n            $scope.process = function (labs) {\r\n\r\n                if ($scope.node) {\r\n\r\n                    labs = labs || [];\r\n\r\n                    var b = \"b\";\r\n                    if (labs.length) {\r\n                        b += \":\" + labs.join(\":\");\r\n                    }\r\n\r\n                    var q = \"match (a:\" + labels.join(':') + \") - [] -> (\" + b + \")\";\r\n\r\n                    \r\n                     \r\n                    $scope.generated = q + \" return b\";\r\n                 \r\n\r\n\r\n\r\n                    if (labs.length) {\r\n                        neo.getDistinctLabelsQuery(q + \" return distinct(LABELS(b))\")\r\n                          .then(function (l) {\r\n                              $scope.enabledFilters = l;\r\n\r\n                          });\r\n                    }\r\n                    else {\r\n                        $scope.enabledFilters = [];\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n\r\n        }\r\n    }\r\n}])","angular.module('neograph.query.generator.nodeFilter',['neograph.neo'])\r\n    .directive('nodeFilter', ['neo', function (neo) {\r\n\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'app/query/generator/nodeFilter.html',\r\n        scope: {\r\n            options: '='\r\n            ,\r\n            generated: '='\r\n            ,\r\n            nodechanged: '&?'\r\n        },\r\n        link: function ($scope, $element, $attrs) {\r\n\r\n\r\n            $scope.filters = [];\r\n            $scope.node = {};\r\n            var labels = [];\r\n\r\n            $scope.$watch('options', function (options) {\r\n\r\n                console.log('node filter options changed')\r\n                $scope.node = options.node;\r\n\r\n            });\r\n        \r\n\r\n            //$scope.$watch('options.node', function (node) {\r\n             \r\n            //    console.log('node filter options.node changed')\r\n                 \r\n              \r\n            //});\r\n\r\n            $scope.$watch('node', function (node) {\r\n                if ($scope.nodechanged) {\r\n                    $scope.nodechanged({ node: node });\r\n                }\r\n                load();\r\n            });\r\n        \r\n            $scope.openNode = function () {\r\n\r\n                if ($scope.node) {\r\n                    $scope.publish('selected',{selection:{nodes:[$scope.node]}})\r\n                }\r\n            }\r\n\r\n            var load = function () {\r\n                if ($scope.node) {\r\n                    labels = [$scope.node.Label, 'Picture'];\r\n                    getFilters();\r\n                    $scope.enabledFilters = [];\r\n                    $scope.process();\r\n                }\r\n            }\r\n\r\n            var getFilters = function () {\r\n                console.log('node filter - get filters')\r\n                console.log(labels);\r\n                if (labels && labels.length) {\r\n                    neo.getDistinctLabels(labels)\r\n                    .then(function (l) {\r\n\r\n                        //remove filter for this node as it is duplicating\r\n                        angular.forEach(labels, function (lab) {\r\n                            l.splice($.inArray(lab, l), 1);\r\n                        });\r\n\r\n                        $scope.filters = l;\r\n                        console.log($scope.filters )\r\n                    });\r\n                }\r\n            }\r\n\r\n\r\n            $scope.process = function (labs) {\r\n\r\n                if ($scope.node) {\r\n\r\n                    if (!labs || !labs.length) {\r\n                        labs = labels;\r\n                    }\r\n                    else {\r\n                        labs = labs.concat(labels);\r\n                    }\r\n\r\n                    $scope.generated = \"match (a:\" + labs.join(':') + \" ) return a order by a.Status desc limit 500\";\r\n\r\n                    if (labs != labels) {\r\n                        neo.getDistinctLabels(labs)\r\n                          .then(function (l) {\r\n                              $scope.enabledFilters = l;\r\n\r\n                          });\r\n                    }\r\n                    else {\r\n                        $scope.enabledFilters =[];\r\n                    }\r\n                }\r\n            }\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n}])","angular.module('neograph.query.generator.nodeGraph',['neograph.neo'])\r\n    .directive('nodeGraph', ['neo', function (neo) {\r\n\r\n    return {\r\n        restrict: 'E',\r\n        templateUrl: 'app/query/generator/nodeGraph.html',\r\n        scope: {\r\n            options: '='\r\n            ,\r\n            generated: '='\r\n            ,\r\n            nodechanged: '&?'\r\n        },\r\n        link: function ($scope, $element, $attrs) {\r\n\r\n            $scope.querys = [];\r\n            $scope.selected = \"\";\r\n            $scope.node = {};\r\n\r\n            $scope.$watch('options', function (options) {\r\n                console.log('node filter options changed')\r\n                $scope.node = options.node;\r\n\r\n            });\r\n\r\n            $scope.$watch('selected', function (sel) {\r\n                console.log(sel);\r\n                if (sel && sel.q) {\r\n                    $scope.generated = sel.q;\r\n                }\r\n            });\r\n\r\n            $scope.$watch('node', function (node) {\r\n\r\n                if (node && node.id) {\r\n                    if ($scope.nodechanged) {\r\n                        $scope.nodechanged({ node: node });\r\n                    }\r\n                    neo.getNode(node.id, false)\r\n                .then(function (loaded) {\r\n                    getQuerys(loaded);\r\n                });\r\n                }\r\n\r\n            });\r\n\r\n            $scope.openNode = function () {\r\n\r\n                if ($scope.node) {\r\n                    $scope.publish('selected', { selection: { nodes: [$scope.node] } })\r\n                }\r\n            }\r\n\r\n            var getQuerys = function (node) {\r\n\r\n                if (node) {\r\n\r\n                    var querys = [];\r\n                    var Lookup = node.Lookup;\r\n\r\n\r\n                                          \r\n\r\n                    querys.push(\r\n                       {\r\n                           name: \"All immediate relationships\",\r\n                           q: \"MATCH (c)-[r]-(d:Global) where ID(c) = \" + node.id + \" return c,d,r\"\r\n                       });\r\n\r\n                    querys.push(\r\n                          {\r\n                              name: \"Self\",\r\n                              q: \"MATCH (c:\" + node.Label + \")-[r]-(d:\" + node.Label + \")   return c,d,r\"\r\n                          });\r\n\r\n                    if ($.inArray(\"Provenance\", node.labels) > -1) {\r\n\r\n                        querys.push(\r\n                            {\r\n                                name: \"Provenance\",\r\n                                q: \"MATCH (c:Global:\" + Lookup + \")-[r]-(d:Global) where  not (c-[:TYPE_OF]-d) and not d.Lookup='\" + Lookup + \"' and not c.Lookup='\" + Lookup + \"'  return c,d,r\"\r\n                            })\r\n                    }\r\n\r\n                    if ($.inArray(\"Period\", node.labels) > -1) {\r\n\r\n                        querys.push(\r\n                            {\r\n                                name: \"Period\",\r\n                                q: \"MATCH (c:Global:\" + Lookup + \")-[r]-(d:Global) where  not (c-[:TYPE_OF]-d) and not d.Lookup='\" + Lookup + \"' and not c.Lookup='\" + Lookup + \"'  return c,d,r\"\r\n                            })\r\n                    }\r\n\r\n                    if ($.inArray(\"Theme\", node.labels) > -1) {\r\n\r\n                        querys.push(\r\n                            {\r\n                                name: \"Theme\",\r\n                                q: \"MATCH (c:Global:\" + Lookup + \")-[r]-(d:Global) where  not (c-[:TYPE_OF]-d) and not d.Lookup='\" + Lookup + \"' and not c.Lookup='\" + Lookup + \"'  return c,d,r\"\r\n                            })\r\n                    }\r\n\r\n                    if ($.inArray(\"Person\", node.labels) > -1) {\r\n\r\n                        querys.push(\r\n                            {\r\n                                name: \"Outbound Influence\",\r\n                                //  q: \"MATCH (c {Lookup:'\" + Lookup + \"'})-[r]->(d:Painter)  -[s]->(e:Painter)  -[t]->(f:Painter) return c,d,e,f,r,s,t\",\r\n                                q: \"MATCH (c {Lookup:'\" + Lookup + \"'})-[r]->(d:Painter) with c,d,r optional  match(d) -[s]->(e:Painter) return c,d,r,s,e \",\r\n                                connectAll: true\r\n                            })\r\n\r\n                        querys.push(\r\n                          {\r\n                              name: \"Inbound Influence\",\r\n                              //    q: \"MATCH (c {Lookup:'\" + Lookup + \"'})<-[r]-(d:Painter)  <-[s]-(e:Painter)  <-[t]-(f:Painter) return c,d,e,f,r,s,t\",\r\n                              q: \"MATCH (c {Lookup:'\" + Lookup + \"'})<-[r]-(d:Painter) with c,d,r optional  match(d) <-[s]-(e:Painter) return c,d,r,s,e \",\r\n                              connectAll: true\r\n                          })\r\n\r\n                    }\r\n\r\n                    if ($.inArray(\"Group\", node.labels) > -1) {\r\n\r\n                        querys.push({\r\n                            name: 'Group',\r\n                            q: \"match (n {Lookup:'\" + Lookup + \"'}) -[r]-(m:Global) -[s]-(p:Global) where not (n-[:TYPE_OF]-m) and not (m-[:TYPE_OF]-p) and (m:Painter or m:Group) and (p:Painter or p:Group) and not m:Provenance and not p:Provenance return n,r,m,s,p\"\r\n    ,\r\n                            connectAll: true\r\n                        });\r\n\r\n                    }\r\n\r\n\r\n                    if ($.inArray(\"Iconography\", node.labels) > -1) {\r\n\r\n\r\n                        querys.push({\r\n                            name: 'Iconography',\r\n                            q: \"MATCH (c:Global:\" + Lookup + \")-[r]-(d:Global)  where not (c-[:TYPE_OF]-d)  and not d.Lookup='\" + Lookup + \"' and (d:\" + Lookup + \" or d:Provenance or d:Group or d:Iconography or d:Place) return c,d,r\"\r\n                          ,\r\n                            connectAll: true\r\n                        });\r\n\r\n                    }\r\n\r\n                    if (node.YearFrom && node.YearTo) {\r\n\r\n                        var yq = \"MATCH (c:Global)-[r]-(d:Global) where  not (c-[:TYPE_OF]-d) and \";\r\n                        yq += \"((c.YearTo >= \" + node.YearFrom + \" and c.YearTo<= \" + node.YearTo + \") or (c.YearFrom >= \" + node.YearFrom + \" and c.YearFrom<= \" + node.YearTo + \"))\";\r\n                        yq += \"and ((d.YearTo >= \" + node.YearFrom + \" and d.YearTo<= \" + node.YearTo + \") or (d.YearFrom >= \" + node.YearFrom + \" and d.YearFrom<= \" + node.YearTo + \"))\";\r\n                        yq += \" return c,d,r\";\r\n                        querys.push({\r\n                            name: 'YearFromYearTo',\r\n                            q: yq\r\n\r\n                         ,\r\n                            connectAll: true\r\n                        });\r\n\r\n                    }\r\n\r\n                    var prevselection = $scope.selected.name;\r\n\r\n                    $scope.querys = querys;\r\n\r\n                    $($scope.querys).each(function (i, e) {\r\n\r\n                        if (e.name === prevselection)\r\n                        {\r\n                            $scope.selected = e;\r\n                        }\r\n                    });\r\n\r\n\r\n                }\r\n            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        }\r\n    }\r\n}])","angular.module('neograph.query.generator',[\r\n    'neograph.query.generator.favouritesFilter',\r\n    'neograph.query.generator.nodeFilter',\r\n    'neograph.query.generator.nodeGraph',\r\n]);"],"sourceRoot":"/source/"}